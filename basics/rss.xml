<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Developers Blog</title>
        <link>https://github.com/RSA/basics</link>
        <description>Developers Blog</description>
        <lastBuildDate>Thu, 01 Feb 2024 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Manipulating Accounts]]></title>
            <link>https://github.com/RSA/basics/data-processors-adc</link>
            <guid>https://github.com/RSA/basics/data-processors-adc</guid>
            <pubDate>Thu, 01 Feb 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[In this blog post, I will guide you through the effective utilization of data processors during account collections to address common use cases. If you are not familiar with data processors, I recommend reading the Data Processors Basics before proceeding, as it will provide a foundational understanding of the concepts discussed in this blog.]]></description>
            <content:encoded><![CDATA[<p>In this blog post, I will guide you through the effective utilization of data processors during account collections to address common use cases. If you are not familiar with data processors, I recommend reading the <strong><a href="https://github.com/RSA/basics/data-processors-basics">Data Processors Basics</a></strong> before proceeding, as it will provide a foundational understanding of the concepts discussed in this blog.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="manipulating-account-resolution-attribute">Manipulating Account Resolution Attribute<a href="https://github.com/RSA/basics/data-processors-adc#manipulating-account-resolution-attribute" class="hash-link" aria-label="Direct link to Manipulating Account Resolution Attribute" title="Direct link to Manipulating Account Resolution Attribute">â€‹</a></h3>
<p>In the scenario where admin accounts collected from Active Directory ADC are identified as orphans, with <em>sAMAccountName</em> formats differing from regular user accounts, we can resolve this by employing the <em>Pre_ADC_Handler</em>. This handler allows us to manipulate the raw data collected from the application and convert it to the desired format.</p>
<p>To implement this solution, follow the steps below:</p>
<ol>
<li>Log in to the console as a System Administrator.</li>
<li>Navigate to <strong>Collectors &gt; Account Collectors</strong> and select the account collector for the application in question.</li>
<li>Click on <strong>Edit</strong></li>
<li>Choose the <em>Pre Custom Processing</em> option.</li>
<li>Navigate through the subsequent screens by clicking <strong>Next</strong> until you reach the <em>Pre-Processing Custom Script Details</em> screen.</li>
<li>Add the following SQL block below the comment "Custom Code Goes Here".</li>
</ol>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv codeBlockLinesWithNumbering_o6Pm"><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token keyword" style="color:#00009f">FOR</span><span class="token plain"> AllAccounts </span><span class="token operator" style="color:#393A34">IN</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    LTRIM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">amap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">account_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'x'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> name</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    T_DC_SOURCEDATA_ACCOUNT_MAP amap</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">INNER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">JOIN</span><span class="token plain"> T_DATA_COLLECTORS coll </span><span class="token keyword" style="color:#00009f">ON</span><span class="token plain"> amap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">dc_id </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> coll</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    coll</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> v_dc_id</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> amap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">run_id </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> v_run_id</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">LOOP</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token keyword" style="color:#00009f">UPDATE</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  T_DC_SOURCEDATA_ACCOUNT_MAP AMAP</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SET</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  AMAP</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">USER_NAME </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AllAccounts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  AMAP</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">account_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AllAccounts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name </span><span class="token keyword" style="color:#00009f">COMMIT</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token keyword" style="color:#00009f">END</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">LOOP</span><span class="token punctuation" style="color:#393A34">;</span></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>In this SQL block, we are removing the '<strong>x</strong>' prefix from the Active Directory <em>sAMAccountName</em>, assuming it is stored in the user identity for mapping purposes.</p>
<p>By implementing this manipulation in the <em>Pre_ADC_Handler</em>, we ensure that the <em>sAMAccountName</em> is appropriately modified before the unification process, allowing for accurate mapping of admin accounts to user identities.</p>
<ol start="7">
<li>Click <strong>Validate</strong> to check for syntactical errors.</li>
<li>Click <strong>Finish</strong></li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="converting-account-status-format">Converting Account Status Format<a href="https://github.com/RSA/basics/data-processors-adc#converting-account-status-format" class="hash-link" aria-label="Direct link to Converting Account Status Format" title="Direct link to Converting Account Status Format">â€‹</a></h3>
<p>For an application returning user account active status as true or false, but requiring conversion to an Account Disabled flag in the format of 1 and 0, we can achieve this by utilizing the Post_Account_Data_Load_Handler. This handler allows us to manipulate the data collected from the application and convert it to the desired format.</p>
<p>Follow these steps to implement the solution:</p>
<ol>
<li>Log in to the console as a System Administrator.</li>
<li>Navigate to <strong>Collectors &gt; Account Collectors</strong> and select the account collector associated with the application.</li>
<li>Click on <strong>Edit.</strong></li>
<li>Choose the <em>Post Custom Processing</em> option.</li>
<li>Navigate through the subsequent screens by clicking <strong>Next</strong> until you reach the <em>Post-Processing Custom Script Details</em> screen.</li>
<li>Add the following SQL block below the comment "Custom Code Goes Here".</li>
</ol>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv codeBlockLinesWithNumbering_o6Pm"><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token keyword" style="color:#00009f">FOR</span><span class="token plain"> DisabledAccounts </span><span class="token operator" style="color:#393A34">IN</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    account</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">CASE</span><span class="token plain"> account</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cas20 </span><span class="token keyword" style="color:#00009f">WHEN</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'true'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">THEN</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'0'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ELSE</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">END</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> isDisabled</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    T_AV_ACCOUNTS account</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">INNER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">JOIN</span><span class="token plain"> T_DATA_COLLECTORS collector </span><span class="token keyword" style="color:#00009f">ON</span><span class="token plain"> account</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">adc_id </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> collector</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    collector</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> v_dc_id</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">LOOP</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token keyword" style="color:#00009f">UPDATE</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  T_AV_ACCOUNTS A</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SET</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  A</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">IS_DISABLED </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> DisabledAccounts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">isDisabled</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  A</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> DisabledAccounts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> A</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ADC_ID </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> v_dc_id</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token keyword" style="color:#00009f">COMMIT</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token keyword" style="color:#00009f">END</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">LOOP</span><span class="token punctuation" style="color:#393A34">;</span></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>In this SQL block, we are setting the Account Disabled flag by inverting the active status flag.</p>
<p>By implementing this conversion in the <em>Post_Account_Data_Load_Handler</em>, we ensure that the data is processed after it is loaded from the application, and the account status is represented in the desired format. This solution provides a tailored approach to meet the specific requirements of your application's account status representation.</p>
<ol start="7">
<li>Click <strong>Validate</strong> to check for syntactical errors.</li>
<li>Click <strong>Finish</strong></li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="updating-is_disabled-flag-for-an-account-using-global-variables">Updating IS_DISABLED Flag for an Account using Global Variables:<a href="https://github.com/RSA/basics/data-processors-adc#updating-is_disabled-flag-for-an-account-using-global-variables" class="hash-link" aria-label="Direct link to Updating IS_DISABLED Flag for an Account using Global Variables:" title="Direct link to Updating IS_DISABLED Flag for an Account using Global Variables:">â€‹</a></h3>
<p>To convert data obtained from a REST endpoint to the required 1 or 0 format for the IS_DISABLED field of the accounts and set the value of the IS_DISABLED field, follow these steps:</p>
<ol>
<li>Log in to the console as a System Administrator.</li>
<li>Navigate to <strong>Admin &gt; System</strong> and click on the <strong>Global Variables</strong> tab.</li>
<li>Add the following configurable setting and save:<!-- -->
<ul>
<li><strong>Variable Name</strong>: processor_collector_enabled_values</li>
<li><strong>Value: 'ACTIVE','YES','TRUE','1'</strong></li>
</ul>
</li>
<li>This solution utilizes configurable settings, specifically the <strong><em>processor_collector_enabled_values</em></strong> variable, to define enabled data fields that may be received through data collectors. Adjust the values in this variable to match the enabled flags for the accounts obtained from the REST endpoint.</li>
<li>Navigate to <strong>Collectors &gt; Account Collectors</strong> and select the account collector for the application.</li>
<li>Click on <strong>Edit</strong></li>
<li>Choose the <em>Pre Custom Processing</em> option.</li>
<li>Navigate through the subsequent screens by clicking <strong>Next</strong> until you reach the <strong>Pre-Processing Custom Script Details</strong> screen.</li>
<li>Add the following code snippet, adjusting the value of <code>CAS5</code> to the appropriate data column that contains the enabled flag for the account being collected:</li>
</ol>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv codeBlockLinesWithNumbering_o6Pm"><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token keyword" style="color:#00009f">DECLARE</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">-- The run id and collector id will be substituted for variables v_run_id and v_dc_id during processing time.</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   v_run_id   NUMBER :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> :</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   v_dc_id    NUMBER :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> :</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain" style="display:inline-block"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">/*----------------------------------------------------------------------------------------------*/</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">/* Custom Variables */</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">/*----------------------------------------------------------------------------------------------*/</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">-- Standard Set of variables</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   v_proc_name       T_AV_JOB_STATS</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Proc_Name</span><span class="token operator" style="color:#393A34">%</span><span class="token keyword" style="color:#00009f">TYPE</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ADC_Transformer'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">-- Procedure Specific variables</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   v_custom_message  VARCHAR2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ADC Transformer'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   v_log_message     VARCHAR2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   v_is_disabled     NUMBER</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   v_enabled_values  VARCHAR2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token keyword" style="color:#00009f">BEGIN</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">/*----------------------------------------------------------------------------------------------*/</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">/* Custom Code - Start */</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">/*----------------------------------------------------------------------------------------------*/</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">-- begin message</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   UNFC_Processor_Log</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">INFO_BEGIN</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v_run_id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v_proc_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v_custom_message</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain" style="display:inline-block"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">-- Fetch the list of enabled values from the AVUSER.T_AV_GLOBAL_VARIABLES table</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">-- 'ACTIVE','YES','TRUE','1'</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> UPPER</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">value</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">INTO</span><span class="token plain"> v_enabled_values</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> AVUSER</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">T_AV_GLOBAL_VARIABLES</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"> parameter </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'processor_collector_enabled_values'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain" style="display:inline-block"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">-- Log the enabled values</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   v_log_message :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Enabled Values: '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> v_enabled_values</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   UNFC_Processor_Log</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">INFO_INFO</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v_run_id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v_proc_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v_log_message</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain" style="display:inline-block"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">FOR</span><span class="token plain"> AllAccounts </span><span class="token operator" style="color:#393A34">IN</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> cas5 </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">status</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> T_DC_SOURCEDATA_ACCOUNT </span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"> dc_id </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> v_dc_id </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> run_id</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">v_run_id </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">LOOP</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">-- Store the result of the CASE expression in v_is_disabled</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      v_is_disabled :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">-- Assume disabled by default</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain" style="display:inline-block"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">-- Convert the enabled values into a table using XMLTABLE</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">FOR</span><span class="token plain"> enabled_value </span><span class="token operator" style="color:#393A34">IN</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> TRIM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">COLUMN_VALUE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> enabled_value </span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> XMLTABLE</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v_enabled_values</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">LOOP</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">         </span><span class="token keyword" style="color:#00009f">IF</span><span class="token plain"> UPPER</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">AllAccounts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">status</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> enabled_value</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">enabled_value </span><span class="token keyword" style="color:#00009f">THEN</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">            v_is_disabled :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">-- Enable if the status matches any enabled value</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">EXIT</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">-- Exit the loop after finding a match</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">         </span><span class="token keyword" style="color:#00009f">END</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">IF</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">END</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">LOOP</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain" style="display:inline-block"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">-- Update the custom account attribute IS_DISABLED that holds the account disabled status</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">-- Need to update at least one collected attribute if the change has to be persisted.</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">UPDATE</span><span class="token plain"> T_DC_SOURCEDATA_ACCOUNT </span><span class="token keyword" style="color:#00009f">SET</span><span class="token plain"> IS_DISABLED </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> v_is_disabled</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">		CAS5 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AllAccounts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">status</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">' : '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> v_run_id</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"> name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AllAccounts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain">  run_id</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">v_run_id</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain" style="display:inline-block"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">COMMIT</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain" style="display:inline-block"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">-- Construct the log message</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      v_log_message :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Account: '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> AllAccounts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">', Status: '</span><span class="token plain"> </span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">        </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> AllAccounts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">status</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">', IS_DISABLED: '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> v_is_disabled</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain" style="display:inline-block"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">-- Print the log message using UNFC_Processor_Log.INFO_INFO</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      UNFC_Processor_Log</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">INFO_INFO</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v_run_id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v_proc_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v_log_message</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">END</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">LOOP</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain" style="display:inline-block"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">-- end message</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   UNFC_Processor_Log</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">INFO_END</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v_run_id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v_proc_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v_custom_message</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">/*----------------------------------------------------------------------------------------------*/</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">/* Custom Code - End */</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">/*----------------------------------------------------------------------------------------------*/</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token keyword" style="color:#00009f">END</span><span class="token punctuation" style="color:#393A34">;</span></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol start="9">
<li>Click <strong>Validate</strong> to check for syntactical errors.</li>
<li>Click <strong>Finish</strong></li>
<li>Run the collectors and validate.</li>
</ol>]]></content:encoded>
            <category>Data Processors</category>
            <category>ADC</category>
            <category>Account</category>
            <category>Group</category>
        </item>
        <item>
            <title><![CDATA[Manipulating Identities]]></title>
            <link>https://github.com/RSA/basics/data-processors-idc</link>
            <guid>https://github.com/RSA/basics/data-processors-idc</guid>
            <pubDate>Wed, 31 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Overview:]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="overview">Overview:<a href="https://github.com/RSA/basics/data-processors-idc#overview" class="hash-link" aria-label="Direct link to Overview:" title="Direct link to Overview:">â€‹</a></h2>
<p>In this blog post, I will guide you through the effective utilization of pre and post processors during identity collections to address common use cases. If you are not familiar with data processors, I recommend reading the <strong><a href="https://github.com/RSA/basics/data-processors-basics">Data Processors Basics</a></strong> before proceeding, as it will provide a foundational understanding for the concepts discussed in this blog.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="enabling-data-processors">Enabling Data Processors<a href="https://github.com/RSA/basics/data-processors-idc#enabling-data-processors" class="hash-link" aria-label="Direct link to Enabling Data Processors" title="Direct link to Enabling Data Processors">â€‹</a></h3>
<p>Data processing is an advanced feature that requires explicit activation by the System Administrator. To enable this feature, follow the steps outlined below:</p>
<ol>
<li>Login to console as System Administrator</li>
<li>Navigate to Admin &gt; System.</li>
<li>Click on Edit</li>
<li>Under Custom, add enableCustomPostProcessingScript with value true</li>
<li>Click Save</li>
<li>Click OK.</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="set-termination-status-based-on-active-directory-accountexpires-value">Set termination status based on Active Directory accountExpires value<a href="https://github.com/RSA/basics/data-processors-idc#set-termination-status-based-on-active-directory-accountexpires-value" class="hash-link" aria-label="Direct link to Set termination status based on Active Directory accountExpires value" title="Direct link to Set termination status based on Active Directory accountExpires value">â€‹</a></h3>
<p>In this specific use case, our goal is to gather user identities from Active Directory, including the <em>accountExpires</em> attribute, which indicates the expiration date of an account. Upon collecting this identity information in G&amp;L, our objective is to label the identity as terminated if the <em>accountExpires</em> value is greater than or equal to the current date.</p>
<p>To achieve this, we can leverage the <em>Pre_ID_Unification_Handler</em>. This handler allows us to manipulate the raw data collected from Active Directory before the unification process takes place. By incorporating logic within this handler, we can effectively set the termination status based on the comparison between the <em>accountExpires</em> value and the current date. This ensures that the identity management system appropriately identifies and marks accounts as terminated in accordance with the specified criteria.</p>
<ol>
<li>Login to console as System Administrator</li>
<li>Navigate to <strong>Unification Config</strong> and click on <strong>Pre Process Script</strong></li>
<li>Update to add the following SQL block below the comment "Custom Code Goes Here". Here, we are setting the terminated flag based on the custom date attribute that contains the <em>accountExpires</em> value from Active Directory IDC.</li>
</ol>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv codeBlockLinesWithNumbering_o6Pm"><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token keyword" style="color:#00009f">UPDATE</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  T_RAW_USER</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SET</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  IS_TERMINATED </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  CUS_ATTR_USER_CAD_1 </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> SYSDATE</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> run_id </span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      </span><span class="token function" style="color:#d73a49">MAX</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v_run_id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      t_raw_user</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      idc_id </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain">YOUR_IDC_ID</span><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol start="4">
<li>Click <strong>Validate</strong> to check for syntactical errors.</li>
<li>Click <strong>Save</strong></li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="generate-user-name">Generate User Name<a href="https://github.com/RSA/basics/data-processors-idc#generate-user-name" class="hash-link" aria-label="Direct link to Generate User Name" title="Direct link to Generate User Name">â€‹</a></h3>
<p>In scenarios where G&amp;L is tasked with onboarding user accounts across multiple systems, the need for generating a unique user ID becomes crucial. While straightforward cases can be addressed through Naming Policies, more intricate situations may demand customized solutions.</p>
<p>To tackle these complexities, we can employ the <em>Post_ID_Unification_Handler</em>. This handler allows us to manipulate the unified data after the unification process has taken place. By incorporating custom logic within this handler, we can address the nuanced requirements of generating unique user IDs, ensuring that the system adapts to diverse scenarios during the onboarding process. This approach provides a flexible and tailored solution for managing user account onboarding in a variety of system environments.</p>
<ol>
<li>Login to console as System Administrator</li>
<li>Navigate to <strong>Unification Config</strong> and click on <strong>Post Process Script</strong></li>
<li>Update to add the following SQL block below the comment "Custom Code Goes Here". Here we are setting the generated <em>sAMAccountName</em> name in the custom user attribute post unification.</li>
</ol>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv codeBlockLinesWithNumbering_o6Pm"><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token keyword" style="color:#00009f">FOR</span><span class="token plain"> NewUser </span><span class="token operator" style="color:#393A34">IN</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    userID</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    sAMAccountName</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">        USER_ID </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> userID</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">        UPPER</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">          SUBSTR</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">U</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">FIRST_NAME</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> SUBSTR</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">U</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">LAST_NAME</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AS</span><span class="token plain"> sAMAccountName</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">        T_MASTER_ENTERPRISE_USERS U</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">/* sAMAccountName */</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">        U</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CUS_ATTR_USER_CAS_3 </span><span class="token operator" style="color:#393A34">IS</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">        </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> U</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UNIQUE_ID </span><span class="token operator" style="color:#393A34">IS</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">        </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> U</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">USER_ID </span><span class="token operator" style="color:#393A34">&lt;&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AveksaAdmin'</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">        </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> TO_DATE</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">U</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CREATION_DATE</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'DD-MON-YY'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> TO_DATE</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">SYSDATE</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'DD-MON-YY'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">        </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> U</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DELETION_DATE </span><span class="token operator" style="color:#393A34">IS</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">LOOP</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">/* Update the custom user attribute sAMAccountName that holds generated sAMAccountName */</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token keyword" style="color:#00009f">UPDATE</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  T_MASTER_ENTERPRISE_USERS U</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token keyword" style="color:#00009f">SET</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  U</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CUS_ATTR_USER_CAS_3 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> NewUser</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sAMAccountName</span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  U</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">USER_ID </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> NewUser</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">userID</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token keyword" style="color:#00009f">COMMIT</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#393A34"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token keyword" style="color:#00009f">END</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">LOOP</span><span class="token punctuation" style="color:#393A34">;</span></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol start="4">
<li>Click <strong>Validate</strong> to check for syntactical errors.</li>
<li>Click <strong>Save</strong></li>
</ol>]]></content:encoded>
            <category>Data Processors</category>
        </item>
        <item>
            <title><![CDATA[Data Processor Basics]]></title>
            <link>https://github.com/RSA/basics/data-processors-basics</link>
            <guid>https://github.com/RSA/basics/data-processors-basics</guid>
            <pubDate>Tue, 30 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[This is the first line.  This is the second line.]]></description>
            <content:encoded><![CDATA[<p>This is the first line. <br> This is the second line.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://github.com/RSA/basics/data-processors-basics#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">â€‹</a></h2>
<p>Data processors have been integral in <strong>RSA Governance and Lifecycle (G&amp;L)</strong> systems, playing a crucial role in manipulating data throughout different stages of collections, unification or Separation of Duties (SoD) processing. Traditionally, the integration of custom logic into these data processors required direct system access to the AVDB database and the use of tools such as SQL Developer. However, with the evolution of G&amp;L products, there has been a paradigm shift in the approach to implementing custom logic within data processors.</p>
<p>In this blog post, we'll explore the historical context of data processors and examine contemporary solutions that not only streamline the customization process but also eliminate the necessity for direct database access. This evolution promises a more accessible and agile approach for developers working with G&amp;L systems.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="pre-752-common-extension-points">Pre 7.5.2: Common Extension Points<a href="https://github.com/RSA/basics/data-processors-basics#pre-752-common-extension-points" class="hash-link" aria-label="Direct link to Pre 7.5.2: Common Extension Points" title="Direct link to Pre 7.5.2: Common Extension Points">â€‹</a></h3>
<p>In versions preceding 7.5.2, customization within Governance and Lifecycle (G&amp;L) systems was facilitated through various extension points. These extension points served as key areas where developers could inject custom logic to tailor the system according to specific organizational needs. Below is a table outlining some of the common extension points utilized in G&amp;L systems before version 7.5.2:</p>
<table><thead><tr><th>Processor Name</th><th>Description</th></tr></thead><tbody><tr><td><strong>Pre_ID_Unification_Handler</strong></td><td>Any action needed post identity data collection but before unification. Mostly used to manipulate the T_DC_SOURCEDATA_USER table</td></tr><tr><td><strong>Post_ID_Unification_Handler</strong></td><td>Any action that needs to be performed after the identities have been collected, unified and persisted in the system</td></tr><tr><td><strong>Pre_Supervisor_Resolution</strong></td><td>Any action that needs to be performed after the identities have been collected, but before supervisor references are resolved</td></tr><tr><td><strong>Pre_ADC_Handler</strong></td><td>Any action to be performed post account data collection but before processing.</td></tr><tr><td><strong>Post_Account_Data_Load_Handler</strong></td><td>Action to be taken once account data has been collected and persisted in the system</td></tr><tr><td><strong>Post_MAEDC_Load_Handler</strong></td><td>Any action needed post multi-app EDC run</td></tr><tr><td><strong>Post_Process_SoD_Violations</strong></td><td>Actions to be taken post SoD rules have been evaluated and violations generated</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="gl-cloud-and-752-on-premise-easy-customization">G&amp;L Cloud and 7.5.2 On-Premise: Easy Customization<a href="https://github.com/RSA/basics/data-processors-basics#gl-cloud-and-752-on-premise-easy-customization" class="hash-link" aria-label="Direct link to G&amp;L Cloud and 7.5.2 On-Premise: Easy Customization" title="Direct link to G&amp;L Cloud and 7.5.2 On-Premise: Easy Customization">â€‹</a></h3>
<p>In the newest G&amp;L Cloud and on-premise versions 7.5.2 and above, RSA has made customizing your system a breeze. This significant enhancement simplifies the process of adding and maintaining custom extensions, making it more intuitive and user-friendly for developers and administrators alike.</p>
<p>To enable usage of processors, the following system settings must be set.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">custom.enableCustomPostProcessingScript = true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>After activation, you'll find the "Pre Custom Processing" and "Post Custom Processing" options available in designated configuration areas.</p>
<table><thead><tr><th>Process/Collector Name</th><th>Description</th></tr></thead><tbody><tr><td><strong>Identity Collectors</strong></td><td>Any action needed before or after identity data collection but before unification.</td></tr><tr><td><strong>Unification</strong></td><td>Any action that needs to be performed before or after identity unification (Pre Process Script / Post Process Script)</td></tr><tr><td><strong>Account Collectors (ADC)</strong></td><td>Any action to be performed before or after account data collection.</td></tr><tr><td><strong>Entitlements Collectors (EDC)</strong></td><td>Any action to be performed before or after entitlements data collection.</td></tr><tr><td><strong>Role Collectors (RDC)</strong></td><td>Any action to be performed before or after role data collection.</td></tr><tr><td><strong>Multi-App Collectors</strong></td><td>Similar to ADC / EDC / RDC</td></tr><tr><td><strong>Data Access Collectors</strong></td><td>NA</td></tr><tr><td><strong>App Metadata Collectors</strong></td><td>NA</td></tr></tbody></table>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>Caution</div><div class="admonitionContent_BuS1"><p>These data processors are advanced product features and should be utilized
with caution and discretion.</p></div></div>]]></content:encoded>
            <category>Data Processors</category>
        </item>
        <item>
            <title><![CDATA[REST Collector Authentication]]></title>
            <link>https://github.com/RSA/basics/rest-collector-authentication</link>
            <guid>https://github.com/RSA/basics/rest-collector-authentication</guid>
            <pubDate>Wed, 25 Oct 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Overview]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="overview">Overview<a href="https://github.com/RSA/basics/rest-collector-authentication#overview" class="hash-link" aria-label="Direct link to Overview" title="Direct link to Overview">â€‹</a></h3>
<p>In recent blog posts, we've explored numerous integrations between RSA G&amp;L and various SaaS applications, primarily relying on the Generic REST collectors. Despite their flexibility, navigating through the intricate components of these collectors can be overwhelming. This article aims to simplify the process by focusing on the authentication aspect, providing an overview of the supported authentication methods and offering common examples to clarify the integration process.</p>
<p>As of v8.0, RSA G&amp;L generic REST collector supports <code>Basic</code>, <code>Token</code> and <code>OAuth2</code> authentication methods. Rest of the article will cover the details of each configuration with examples.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="basic">Basic<a href="https://github.com/RSA/basics/rest-collector-authentication#basic" class="hash-link" aria-label="Direct link to Basic" title="Direct link to Basic">â€‹</a></h3>
<p>This authentication type is an implementation of the HTTP Basic Authentication Scheme. This authentication type requires that the user name and password values are provided in the collector configuration and during the API invocation transmits the Base64 encoded pair of user name and password.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>The G&amp;L collector framework will ensure the <code>Authorization</code> headers are set on the request and no additional configuration  are required in the API page.</p></div></div>
<p><img decoding="async" loading="lazy" alt="img" src="https://github.com/RSA/assets/images/basic-1-ec6148dd3555b0651e5fe3ff253d3484.png" width="372" height="324" class="img_ev3q"></p>
<table><tbody><tr><td><span class="header-2-text">1</span></td><td><span class="header-2-text">User Authentication Type</span></td><td>Basic</td></tr><tr><td><span class="header-2-text">2</span></td><td><span class="header-2-text">Username</span></td><td>The service account user name</td></tr><tr><td><span class="header-2-text">3</span></td><td><span class="header-2-text">Password</span></td><td>The password corresponding to the user name</td></tr></tbody></table>
<p>The API configuration page will look something like this without needing any explicit <code>Authorization</code> headers.<br><img decoding="async" loading="lazy" alt="img" src="https://github.com/RSA/assets/images/basic-2-7d392b321545184e6ad5b1dc3eab61b9.png" width="531" height="265" class="img_ev3q"></p>
<p><strong>Examples</strong></p>
<ul>
<li><a href="https://github.com/RSA/blog/freshservice">Freshservice</a></li>
<li><a href="https://github.com/RSA/blog/zendesk">Zendesk</a></li>
</ul>
<p>ðŸ““ <strong>References</strong></p>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization#basic_authentication" target="_blank" rel="noopener noreferrer">Mozilla : Basic Authentication</a></li>
<li><a href="https://datatracker.ietf.org/doc/html/rfc7617" target="_blank" rel="noopener noreferrer">RFC - The 'Basic' HTTP Authentication Scheme</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="token">Token<a href="https://github.com/RSA/basics/rest-collector-authentication#token" class="hash-link" aria-label="Direct link to Token" title="Direct link to Token">â€‹</a></h3>
<p>This authentication type is an implementation of the HTTP Bearer Authentication Scheme. This authentication type requires that a valid token value is provided in the collector configuration. The generic REST collector support both static as well as dynamic token types.</p>
<p>Once the connection details for the token has been configured, the subsequently all API calls must include the <code>Authorization</code> HTTP header with value <code>Bearer ${AuthenticationToken}</code>.</p>
<p>ðŸ““ <strong>References</strong></p>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication" target="_blank" rel="noopener noreferrer">Mozilla : HTTP authentication</a></li>
<li><a href="https://datatracker.ietf.org/doc/html/rfc6750" target="_blank" rel="noopener noreferrer">RFC - The OAuth 2.0 Authorization Framework: Bearer Token Usage</a></li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="static-token">Static Token<a href="https://github.com/RSA/basics/rest-collector-authentication#static-token" class="hash-link" aria-label="Direct link to Static Token" title="Direct link to Static Token">â€‹</a></h4>
<p><img decoding="async" loading="lazy" alt="img" src="https://github.com/RSA/assets/images/token-static-1-ca4fc50bc9d62eb3e93ed87fdac5a0fd.png" width="370" height="355" class="img_ev3q"></p>
<table><tbody><tr><td><span class="header-2-text">1</span></td><td><span class="header-2-text">User Authentication Type</span></td><td>Token</td></tr><tr><td><span class="header-2-text">2</span></td><td><span class="header-2-text">Get Token from URL</span></td><td>Unchecked</td></tr><tr><td><span class="header-2-text">3</span></td><td><span class="header-2-text">Authentication Token</span></td><td>Static token value</td></tr></tbody></table>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="examples">Examples<a href="https://github.com/RSA/basics/rest-collector-authentication#examples" class="hash-link" aria-label="Direct link to Examples" title="Direct link to Examples">â€‹</a></h4>
<ul>
<li><a href="https://github.com/RSA/blog/sentry">Sentry</a></li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="dynamic-token">Dynamic Token<a href="https://github.com/RSA/basics/rest-collector-authentication#dynamic-token" class="hash-link" aria-label="Direct link to Dynamic Token" title="Direct link to Dynamic Token">â€‹</a></h4>
<p>The configuration for getting a dynamic token can vary from endpoint to endpoint. Generally the token URL accepts requests over <strong>POST</strong> with additional authentication requirements passed through the POST body. The collector does support dynamic token calls over <strong>GET</strong> if needed.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="examples-1">Examples<a href="https://github.com/RSA/basics/rest-collector-authentication#examples-1" class="hash-link" aria-label="Direct link to Examples" title="Direct link to Examples">â€‹</a></h4>
<ul>
<li><a href="https://github.com/RSA/blog/pingone">PingOne</a></li>
<li><a href="https://github.com/RSA/blog/dynatrace">Dynatrace</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="oauth2">OAuth2<a href="https://github.com/RSA/basics/rest-collector-authentication#oauth2" class="hash-link" aria-label="Direct link to OAuth2" title="Direct link to OAuth2">â€‹</a></h3>
<p>This authentication type supports the OAuth 2 authorization flow.</p>
<p><img decoding="async" loading="lazy" alt="img" src="https://github.com/RSA/assets/images/oauth-1-ef10e6c8e7836dabbcaa371dd8e94875.png" width="636" height="420" class="img_ev3q"></p>
<table><tbody><tr><td><span class="header-2-text">1</span></td><td><span class="header-2-text">User Authentication Type</span></td><td>OAuth2</td></tr><tr><td><span class="header-2-text">2</span></td><td><span class="header-2-text">Client ID</span></td><td>The <code>client_id</code> for the OAuth application created on the target for the integration</td></tr><tr><td><span class="header-2-text">3</span></td><td><span class="header-2-text">Client Secret</span></td><td>The <code>client_secret</code> corresponding to the <code>client_id</code></td></tr><tr><td><span class="header-2-text">4</span></td><td><span class="header-2-text">Authentication URL</span></td><td>Authentication URL to retrieve an authorization <code>code</code> and an optional <code>refresh_token</code> from target application</td></tr><tr><td><span class="header-2-text">5</span></td><td><span class="header-2-text">Access Token URL</span></td><td>Access token URL to acquire an access token using the authorization <code>code</code> from the target application</td></tr><tr><td><span class="header-2-text">6</span></td><td><span class="header-2-text">Scope</span></td><td><code>scope</code> for the <code>access_token</code> being requested</td></tr><tr><td><span class="header-2-text">7</span></td><td><span class="header-2-text">Access Token Expiry</span></td><td><code>access_token</code> expiration period in milliseconds. This value will be updated if the <code>expires_in</code> parameter is available in token responses. If <code>refresh_token</code> was provided in the access token response, G&amp;L will make a access token request when the current token expires.</td></tr><tr><td><span class="header-2-text">8</span></td><td><span class="header-2-text">Token Validity</span></td><td>Displays when the current <code>access_token</code> will expire</td></tr></tbody></table>
<p>Once the above configurations are set, click on <em><strong>Get OAuth 2.0 Access Token</strong></em> to send the authorization request. Depending on the target application, you may have to go through the authentication process and once completed will return the <code>code</code>, <code>refresh_token</code>, <code>access_token</code> to  <a href="https://instance.securid.com/aveksa/oauth/callback" target="_blank" rel="noopener noreferrer">https://instance.securid.com:443/aveksa/oauth/callback</a></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="examples-2">Examples<a href="https://github.com/RSA/basics/rest-collector-authentication#examples-2" class="hash-link" aria-label="Direct link to Examples" title="Direct link to Examples">â€‹</a></h4>
<ul>
<li><a href="https://github.com/RSA/blog/docusign">DocuSign</a></li>
<li><a href="https://github.com/RSA/blog/asana">Asana</a></li>
<li><a href="https://github.com/RSA/blog/google-workspace">Google Workspace</a></li>
</ul>
<p>ðŸ““ <strong>References</strong></p>
<ul>
<li><a href="https://oauth.net/2/" target="_blank" rel="noopener noreferrer">OAuth 2.0</a></li>
</ul>]]></content:encoded>
            <category>Collections</category>
            <category>REST</category>
            <category>Authentication</category>
            <category>Basic</category>
            <category>Token</category>
            <category>OAuth</category>
        </item>
    </channel>
</rss>