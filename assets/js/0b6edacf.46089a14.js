"use strict";(self.webpackChunkdocku=self.webpackChunkdocku||[]).push([[1112],{60925:r=>{r.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"maintainx","metadata":{"permalink":"/RSA/connectors/maintainx","source":"@site/connectors/maintainx/maintainx.mdx","title":"MaintainX","description":"MaintainX is a versatile maintenance management platform designed to streamline operations for businesses across various industries. With intuitive features for work orders, asset management, and team collaboration, MaintainX empowers organizations to efficiently track and manage maintenance tasks, enhance productivity, and ensure equipment reliability. Its user-friendly interface and mobile accessibility make it a convenient solution for modern maintenance needs.Versions: 8.0.0 P2Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u274c | Entitlements \u274c","date":"2024-07-06T00:00:00.000Z","tags":[{"inline":true,"label":"Collections","permalink":"/RSA/connectors/tags/collections"},{"inline":true,"label":"REST","permalink":"/RSA/connectors/tags/rest"},{"inline":true,"label":"SaaS","permalink":"/RSA/connectors/tags/saa-s"},{"inline":true,"label":"MaintainX","permalink":"/RSA/connectors/tags/maintain-x"},{"inline":true,"label":"CMMS","permalink":"/RSA/connectors/tags/cmms"},{"inline":true,"label":"EAM","permalink":"/RSA/connectors/tags/eam"}],"readingTime":43.43333333333333,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg"}],"frontMatter":{"slug":"maintainx","title":"MaintainX","date":"2024-07-06T00:00:00.000Z","authors":"pradeepkg","tags":["Collections","REST","SaaS","MaintainX","CMMS","EAM"],"keywords":["Collections","REST","SaaS","MaintainX","CMMS","EAM"],"draft":false},"unlisted":false,"lastUpdatedAt":1714858313000,"nextItem":{"title":"Sigma","permalink":"/RSA/connectors/sigma"}},"content":"import logoPNG from \'@site/static/img/logos/MaintainX - 180x180.jpg\';\\r\\n\\r\\n<table>\\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\"><img src={logoPNG} width=\\"180\\" height=\\"180\\"/>MaintainX is a versatile maintenance management platform designed to streamline operations for businesses across various industries. With intuitive features for work orders, asset management, and team collaboration, MaintainX empowers organizations to efficiently track and manage maintenance tasks, enhance productivity, and ensure equipment reliability. Its user-friendly interface and mobile accessibility make it a convenient solution for modern maintenance needs.<br /><br />Versions: `8.0.0 P2`<br/><br/>Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u274c | Entitlements \u274c</td>\\r\\n  </tr>\\r\\n</table>\\r\\n\x3c!-- truncate --\x3e\\r\\n## Overview\\r\\n\\r\\nIt is recommended that you review the **[MaintainX Collections](./../blog/maintainx)** guide before proceeding with this blog.\\r\\n\\r\\n## Connector Settings\\r\\n\\r\\n**Steps**\\r\\n\\r\\n1. Login to RSA Identity G&L console as System Administrator.\\r\\n2. Navigate to **AFX > Connectors**.\\r\\n3. Click on **_Create Connector_** and select the RESTful Web Service connector template.\\r\\n4. Enter the details as shown below under **General** tab.<br /><br />![Alt text](img/1.png)\\r\\n5. Click on the Settings tab and enter the required connection details.<br /><br />![Alt text](img/2.png)\\r\\n6. Click on **Add More Parameters**.\\r\\n7. Enter the details for **APIKey** as shown below and click **OK**.<br /><br />![Alt text](img/3.png)\\r\\n8. Provide the API key in the **API Key** field and click **OK**. <br /><br />![Alt text](img/4.png).\\r\\n\\r\\n## Supported Verbs\\r\\n### Create an Account\\r\\n> <span class=\\"method-post-text\\">**API Reference:** https://api.getmaintainx.com/v1/docs#tag/Users/paths/~1users~1%7Bid%7D~1messages/post</span>\\r\\n\\r\\n**Steps**\\r\\n\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Create an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name |   *   | Display Name             | Mapping                           | Description                          |\\r\\n| -------------- | ----- | ------------------------ | --------------------------------- | ------------------------------------ |\\r\\n| Account        | \u2714\ufe0f    | Account Name             | $&#123;AccountTemplate.Name}      | Unique identifier for the user       |\\r\\n| LastName       | \u2714\ufe0f    | Last Name                | $&#123;AccountTemplate.LastName}  | Family name of the user              |\\r\\n| FirstName      | \u2714\ufe0f    | First Name               | $&#123;AccountTemplate.FirstName} | Given name of the user               |\\r\\n| Password       | \u2714\ufe0f \ud83d\udd12 | Initial Account Password | $&#123;AccountTemplate.Password}  | Password which is required for login |\\r\\n| Email          | \u2714\ufe0f    | Email Address            | $&#123;AccountTemplate.Email}     | Primary email address of user        |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n**Command Output Parameters**\\r\\n\\r\\n| Parameter Name | Display Name | Mapping             | Description                                |\\r\\n| -------------- | ------------ | ------------------- | ------------------------------------------ |\\r\\n| Account        | Account ID   | Account.External_ID | A unique identifier used to reference user |\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-post\\">POST</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`v1/users`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${Settings.APIKey}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n  \\"firstName\\": \\"${FirstName}\\",\\r\\n  \\"lastName\\": \\"${LastName}\\",\\r\\n  \\"role\\": \\"MEMBER\\",\\r\\n  \\"email\\": \\"${Account}\\",\\r\\n  \\"inviteType\\": \\"ALL\\"\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Brief Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.errors.*.fieldPath`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Field : $1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Detailed Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.errors.*.error`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Error Message: $1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">ExternalID</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`id`</td>\\r\\n  </tr>  \\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Delete an Account\\r\\n> <span class=\\"method-post-text\\">**API Reference:** https://api.getmaintainx.com/v1/docs#tag/Users/paths/~1users~1%7Bid%7D/delete</span>\\r\\n\\r\\n**Steps**\\r\\n\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Delete an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name | *   | Display Name | Mapping                     | Description                                 |\\r\\n| -------------- | --- | ------------ | --------------------------- | ------------------------------------------- |\\r\\n| AccountID      | \u2714\ufe0f  | Account ID   | $&#123;Account.External_Id} | A unique identifier used to reference users |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Command Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td>\\r\\n      <span class=\\"method-delete\\">DELETE</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`v1/users/${AccountID}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Headers</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${Settings.APIKey}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Body</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Brief Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.errors.*.fieldPath`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Field : $1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Detailed Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.errors.*.error`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Error Message: $1</td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Add Account to Group\\r\\n> <span class=\\"method-post-text\\">**API Reference:** https://api.getmaintainx.com/v1/docs#tag/Teams/paths/~1teams~1%7Bid%7D~1members/post</span>\\r\\n\\r\\n**Steps**\\r\\n\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Add Account to Group_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name | *   | Display Name | Mapping                     | Description                    |\\r\\n| -------------- | --- | ------------ | --------------------------- | ------------------------------ |\\r\\n| AccountID      | \u2714\ufe0f  | Account ID   | $&#123;Account.External_Id} | Unique identifier for the user |\\r\\n| GroupID        | \u2714\ufe0f  | Group ID     | $&#123;Group.External_Id}   | Unique key for the group       |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Command Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td>\\r\\n      <span class=\\"method-post\\">POST</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`v1/teams/${GroupID}/members`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Headers</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${Settings.APIKey}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Body</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n  \\"id\\": ${AccountID},\\r\\n  \\"teamRole\\": \\"MEMBER\\"\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Brief Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.errors.*.fieldPath`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Field : $1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Detailed Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.errors.*.error`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Error Message: $1</td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Remove Account from Group\\r\\n> <span class=\\"method-post-text\\">**API Reference:** https://api.getmaintainx.com/v1/docs#tag/Teams/paths/~1teams~1%7BteamId%7D~1members~1%7BuserId%7D/delete</span>\\r\\n\\r\\n**Steps**\\r\\n\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Remove Account from Group_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name |  *  | Display Name | Mapping                     | Description                     |\\r\\n| -------------- | --- | ------------ | --------------------------- | ------------------------------- |\\r\\n| AccountID      | \u2714\ufe0f  | Account ID   | $&#123;Account.External_Id} | Unique identifier for the user  |\\r\\n| GroupID        | \u2714\ufe0f  | Group ID     | $&#123;Group.External_Id}   | Unique identifier for the group |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Command Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td>\\r\\n      <span class=\\"method-delete\\">DELETE</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`v1/teams/${GroupID}/members/${AccountID}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Headers</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${Settings.APIKey}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Body</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Brief Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.errors.*.fieldPath`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Field : $1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Detailed Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.errors.*.error`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Error Message: $1</td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n> <span class=\\"blog-id-text\\">CON009</span>"},{"id":"sigma","metadata":{"permalink":"/RSA/connectors/sigma","source":"@site/connectors/sigma/sigma.mdx","title":"Sigma","description":"Sigma Business Intelligence offers powerful analytics solutions, empowering businesses with actionable insights. Through intuitive interfaces and robust data integration, Sigma BI transforms complex data into strategic decisions. With a focus on user-friendly tools and real-time analytics, Sigma BI accelerates growth and enhances competitiveness in today\'s dynamic market landscape.Versions: 8.0.0 P2","date":"2024-06-22T00:00:00.000Z","tags":[{"inline":true,"label":"Provisioning","permalink":"/RSA/connectors/tags/provisioning"},{"inline":true,"label":"REST","permalink":"/RSA/connectors/tags/rest"},{"inline":true,"label":"SaaS","permalink":"/RSA/connectors/tags/saa-s"},{"inline":true,"label":"Business Intelligence","permalink":"/RSA/connectors/tags/business-intelligence"},{"inline":true,"label":"Analytics","permalink":"/RSA/connectors/tags/analytics"}],"readingTime":59.93333333333333,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg"}],"frontMatter":{"slug":"sigma","title":"Sigma","date":"2024-06-22T00:00:00.000Z","authors":"pradeepkg","tags":["Provisioning","REST","SaaS","Business Intelligence","Analytics"],"keywords":["Provisioning","REST","SaaS","Business Intelligence","Analytics"],"draft":false},"unlisted":false,"lastUpdatedAt":1714678755000,"prevItem":{"title":"MaintainX","permalink":"/RSA/connectors/maintainx"},"nextItem":{"title":"Notion","permalink":"/RSA/connectors/notion"}},"content":"import logoPNG from \'@site/static/img/logos/Sigma - 180x180.jpg\';\\r\\n\\r\\n<table>\\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\"><img src={logoPNG} width=\\"180\\" height=\\"180\\"/>Sigma Business Intelligence offers powerful analytics solutions, empowering businesses with actionable insights. Through intuitive interfaces and robust data integration, Sigma BI transforms complex data into strategic decisions. With a focus on user-friendly tools and real-time analytics, Sigma BI accelerates growth and enhances competitiveness in today\'s dynamic market landscape.<br /><br />Versions: `8.0.0 P2`</td>\\r\\n  </tr>\\r\\n</table>\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## Overview\\r\\nIt is recommended that you review the **[Sigma Collections](./../blog/sigma)** guide before proceeding with this blog.\\r\\n\\r\\n## Connector Settings\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA Identity G&L console as System Administrator.\\r\\n2. Navigate to **AFX > Connectors**.\\r\\n3. Click on **_Create Connector_** and select the RESTful Web Service connector template.\\r\\n4. Enter the details as shown below under **General** tab.<br /><br />![Alt text](img/1.png)\\r\\n5. Click on the **Settings** tab and enter the required connection details.<br /><br />![Alt text](img/2.png)\\r\\n6. Click **OK**.\\r\\n\\r\\n## Supported Verbs\\r\\n### Login\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Login_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name | *     | Display Name  | Description                           |\\r\\n| -------------- | ----- | ------------- | ------------------------------------- |\\r\\n| ClientID       | \u2714\ufe0f    | Client ID     | Client ID for the API access          |\\r\\n| ClientSecret   | \u2714\ufe0f \ud83d\udd12 | Client Secret | Secret corresponding to the Client ID |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"verb-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"6\\">\\r\\n      <span class=\\"header-2-text\\">Command Output Parameters</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"6\\">Defaults</td>\\r\\n  </tr>\\r\\n</table>\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Command Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td>\\r\\n      <span class=\\"method-post\\">POST</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`v2/auth/token`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Headers</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/x-www-form-urlencoded`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Body</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">`grant_type=client_credentials&client_id=${ClientID}&client_secret=${ClientSecret}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Brief Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.code`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Detailed Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.message`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Session Token</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`access_token`</td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**. 4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Create an Account\\r\\n> <span class=\\"method-post-text\\">**API Reference:** https://docs.sigmacomputing.com/api/v2/#post-/v2/members</span>\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Create an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name | *   | Display Name    | Mapping                             | Description                                                                |\\r\\n| -------------- | --- | --------------- | ----------------------------------- | -------------------------------------------------------------------------- |\\r\\n| Account        | \u2714\ufe0f  | Account Name    | $&#123;AccountTemplate.Name}        | Unique identifier for the user                                             |\\r\\n| LastName       | \u2714\ufe0f  | Last Name       | $&#123;AccountTemplate.LastName}    | Family name of the user                                                    |\\r\\n| FirstName      | \u2714\ufe0f  | First Name      | $&#123;AccountTemplate.FirstName}   | Given name of the user                                                     |\\r\\n| AccountType    |     | Account Type ID | $&#123;AccountTemplate.AccountType} | Out of the box values [Admin, Pro, Essential, Lite] or custom defined type |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n**Command Output Parameters**\\r\\n\\r\\n| Parameter Name | Display Name | Mapping             | Description                                |\\r\\n| -------------- | ------------ | ------------------- | ------------------------------------------ |\\r\\n| AccountID      | External ID  | Account.External_ID | A unique identifier used to reference user |\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td>\u2714\ufe0f</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-post\\">POST</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`v2/members`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${SessionToken}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n  \\"email\\": \\"${Account}\\",\\r\\n  \\"firstName\\": \\"${FirstName}\\",\\r\\n  \\"lastName\\": \\"${LastName}\\",\\r\\n  \\"memberType\\": \\"${AccountType}\\",\\r\\n  \\"isGuest\\": false,\\r\\n  \\"userKind\\": \\"internal\\",\\r\\n  \\"canLogIn\\": true\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Brief Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.code`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Detailed Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.message`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">AccountID</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`id`</td>\\r\\n  </tr>   \\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Delete an Account\\r\\n> <span class=\\"method-post-text\\">**API Reference:** https://docs.sigmacomputing.com/api/v2/#delete-/v2/members/-memberId-</span>\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Delete an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name | *   | Display Name | Mapping                     | Description                                 |\\r\\n| -------------- | --- | ------------ | --------------------------- | ------------------------------------------- |\\r\\n| AccountID      | \u2714\ufe0f  | Account ID   | $&#123;Account.External_Id} | A unique identifier used to reference users |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Command Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td>\u2714\ufe0f</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td>\\r\\n      <span class=\\"method-delete\\">DELETE</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`settings/v3/users/${AccountID}?idProperty=EMAIL` ([Sample Response](#delete-user))</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Headers</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${SessionToken}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Body</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      ```json\\r\\n      {}\\r\\n      ```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Brief Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.code`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Detailed Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.message`</td>\\r\\n  </tr>  \\r\\n</table>\\r\\n3. Click **OK**. \\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Enable an Account\\r\\n> <span class=\\"method-post-text\\">**API Reference:** https://docs.sigmacomputing.com/api/v2/#patch-/v2/members/-memberId-</span>\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Enable an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name | *   | Display Name | Mapping                     | Description                                 |\\r\\n| -------------- | --- | ------------ | --------------------------- | ------------------------------------------- |\\r\\n| AccountID      | \u2714\ufe0f  | Account ID   | $&#123;Account.External_Id} | A unique identifier used to reference users |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td>\u2714\ufe0f</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-patch\\">PATCH</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`v2/members/${AccountID}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${SessionToken}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n  \\"isInactive\\": false\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Disable an Account\\r\\n> <span class=\\"method-post-text\\">**API Reference:** https://docs.sigmacomputing.com/api/v2/#patch-/v2/members/-memberId-</span>\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Disable an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name | *   | Display Name | Mapping                     | Description                                 |\\r\\n| -------------- | --- | ------------ | --------------------------- | ------------------------------------------- |\\r\\n| AccountID      | \u2714\ufe0f  | Account ID   | $&#123;Account.External_Id} | A unique identifier used to reference users |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td>\u2714\ufe0f</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-patch\\">PATCH</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`v2/members/${AccountID}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${SessionToken}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n  \\"isInactive\\": true\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Add Account to Group\\r\\n> <span class=\\"method-post-text\\">**API Reference:** https://docs.sigmacomputing.com/api/v2/#patch-/v2/teams/-teamId-/members</span>\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Add Account to Group_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name | *   | Display Name | Mapping                     | Description                    |\\r\\n| -------------- | --- | ------------ | --------------------------- | ------------------------------ |\\r\\n| AccountID      | \u2714\ufe0f  | Account ID   | $&#123;Account.External_Id} | Unique identifier for the user |\\r\\n| GroupID        | \u2714\ufe0f  | Group ID     | $&#123;Group.External_Id}   | Unique id for the group        |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Command Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td>\u2714\ufe0f</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td>\\r\\n      <span class=\\"method-patch\\">PATCH</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`v2/teams/${GroupID}/members`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Headers</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${SessionToken}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Body</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n    \\"add\\": [\\r\\n        \\"${AccountID}\\"\\r\\n    ]\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Brief Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.code`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Detailed Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.message`</td>\\r\\n  </tr>  \\r\\n</table>\\r\\n3. Click **OK**. \\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Remove Account from Group\\r\\n> <span class=\\"method-post-text\\">**API Reference:** https://docs.sigmacomputing.com/api/v2/#patch-/v2/teams/-teamId-/members</span>\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Remove Account from Group_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name |  *  | Display Name | Mapping                     | Description                    |\\r\\n| -------------- | --- | ------------ | --------------------------- | ------------------------------ |\\r\\n| AccountID      | \u2714\ufe0f  | Account ID   | $&#123;Account.External_Id} | Unique identifier for the user |\\r\\n| GroupID        | \u2714\ufe0f  | Group ID     | $&#123;Group.External_Id}   | Unique id for the group        |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Command Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td>\u2714\ufe0f</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td>\\r\\n      <span class=\\"method-patch\\">PATCH</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`v2/teams/${GroupID}/members`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Headers</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${SessionToken}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Body</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n    \\"remove\\": [\\r\\n        \\"${AccountID}\\"\\r\\n    ]\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Brief Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.code`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Detailed Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.message`</td>\\r\\n  </tr>  \\r\\n</table>\\r\\n3. Click **OK**. \\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n## References\\r\\n- [Create and manage account types](https://help.sigmacomputing.com/docs/create-and-manage-account-types#delete-an-existing-account-type)\\r\\n\\r\\n> <span class=\\"blog-id-text\\">CON008</span>"},{"id":"notion","metadata":{"permalink":"/RSA/connectors/notion","source":"@site/connectors/notion/notion.mdx","title":"Notion","description":"Notion is a versatile productivity tool offering note-taking, project management, and collaboration features. Its customizable workspace allows users to organize tasks, documents, and databases efficiently. With seamless integration across platforms, Notion enhances team collaboration and individual productivity, making it a popular choice for personal and professional use.Versions: 8.0.0 P2","date":"2024-05-29T00:00:00.000Z","tags":[{"inline":true,"label":"Provisioning","permalink":"/RSA/connectors/tags/provisioning"},{"inline":true,"label":"REST","permalink":"/RSA/connectors/tags/rest"},{"inline":true,"label":"SaaS","permalink":"/RSA/connectors/tags/saa-s"},{"inline":true,"label":"Notion","permalink":"/RSA/connectors/tags/notion"},{"inline":true,"label":"SCIM","permalink":"/RSA/connectors/tags/scim"}],"readingTime":24.966666666666665,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg"}],"frontMatter":{"slug":"notion","title":"Notion","date":"2024-05-29T00:00:00.000Z","authors":"pradeepkg","tags":["Provisioning","REST","SaaS","Notion","SCIM"],"keywords":["Provisioning","REST","SaaS","Notion","SCIM"],"draft":false,"hide_table_of_contents":false},"unlisted":false,"lastUpdatedAt":1718029732000,"prevItem":{"title":"Sigma","permalink":"/RSA/connectors/sigma"},"nextItem":{"title":"HubSpot","permalink":"/RSA/connectors/hubspot"}},"content":"import logoPNG from \\"@site/static/img/logos/Notion - 180x180.jpg\\";\\r\\nimport LinkSvg from \\"../../iconmonstr-link-thin.svg\\";\\r\\nimport Admonition from \\"@theme/Admonition\\";\\r\\nimport Tabs from \'@theme/Tabs\';\\r\\nimport TabItem from \'@theme/TabItem\';\\r\\n\\r\\n<table>\\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\">\\r\\n      <img src={logoPNG} width=\\"180\\" height=\\"180\\" />\\r\\n      Notion is a versatile productivity tool offering note-taking, project management, and collaboration features. Its customizable workspace allows users to organize tasks, documents, and databases efficiently. With seamless integration across platforms, Notion enhances team collaboration and individual productivity, making it a popular choice for personal and professional use.<br /><br />Versions: `8.0.0 P2`\\r\\n    </td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## Overview\\r\\n\\r\\nIt is recommended that you review the **[Notion Collections](./../blog/Notion)** guide before proceeding with this blog.\\r\\n\\r\\n## Connector Settings\\r\\n\\r\\n**Steps**\\r\\n\\r\\n1. Login to RSA Identity G&L console as System Administrator.\\r\\n2. Navigate to **AFX > Connectors**.\\r\\n3. Click on **_Create Connector_** and select the RESTful Web Service connector template.\\r\\n4. Enter the details as shown below under **General** tab.<br /><br />![Alt text](img/1.png)\\r\\n5. Click on the Settings tab and enter the required connection details.<br /><br />![Alt text](img/2.png)\\r\\n6. Click on **Test Connector Settings** to verify the settings.\\r\\n\\r\\n## Supported Verbs\\r\\n\\r\\n### Create an Account\\r\\n\\r\\n**Steps**\\r\\n\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Create an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name |       | Display Name         | Mapping                             | Description                          |\\r\\n| -------------- | ----- | -------------------- | ----------------------------------- | ------------------------------------ |\\r\\n| UserName       | \u2714\ufe0f    | User Name            | $&#123;AccountTemplate.Name}        | The account name                     |\\r\\n| Email          | \u2714\ufe0f    | Email Address        | $&#123;AccountTemplate.Email}       | Primary email address of user        |\\r\\n| FamilyName     | \u2714\ufe0f    | Last Name            | $&#123;AccountTemplate.LastName}    | Family name of the user              |\\r\\n| GivenName      | \u2714\ufe0f    | First Name           | $&#123;AccountTemplate.FirstName}   | Given name of the user               |\\r\\n| FormatedName   | \u2714\ufe0f    | Formatted Name       | $&#123;AccountTemplate.DisplayName} | User\'s display name                  |\\r\\n| Password       | \u2714\ufe0f \ud83d\udd12 | The account password | $&#123;AccountTemplate.Password}    | The initial password for the account |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Delete an Account\\r\\n\\r\\n**Steps**\\r\\n\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Delete an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name | Display Name | Mapping                      | Description                    |\\r\\n| -------------- | ------------ | ---------------------------- | ------------------------------ |\\r\\n| UserId         | External ID  | $&#123;Account.External_Id}  | Unique identifier for the user |\\r\\n| UserName       | User Name    | $&#123;AccountTemplate.Name} | The account name               |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n3. Click **OK**.\\r\\n4. Run the _Test Connector Capabilities_ to verify the verb.\\r\\n\\r\\n### Add Account to Group\\r\\n\\r\\n**Steps**\\r\\n\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Add Account to Group_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name | Display Name | Mapping                     | Description                     |\\r\\n| -------------- | ------------ | --------------------------- | ------------------------------- |\\r\\n| UserId         | External ID  | $&#123;Account.External_Id} | Unique identifier for the user  |\\r\\n| UserName       | User Name    | $&#123;Account.Name}        | The account name                |\\r\\n| GroupId        | External ID  | $&#123;Group.External_Id}   | Unique identifier for the group |\\r\\n| GroupName      | Group Name   | $&#123;Group.Name}          | The account name                |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Remove Account from Group\\r\\n\\r\\n**Steps**\\r\\n\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Remove Account from Group_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name | Display Name | Mapping                     | Description                     |\\r\\n| -------------- | ------------ | --------------------------- | ------------------------------- |\\r\\n| UserId         | External ID  | $&#123;Account.External_Id} | Unique identifier for the user  |\\r\\n| UserName       | User Name    | $&#123;Account.Name}        | The account name                |\\r\\n| GroupId        | External ID  | $&#123;Group.External_Id}   | Unique identifier for the group |\\r\\n| GroupName      | Group Name   | $&#123;Group.Name}          | The account name                |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n---\\r\\n## API Examples\\r\\n\\r\\n### Create User\\r\\n```json title=\\"201 Created\\"\\r\\n{\\r\\n    \\"schemas\\": [\\r\\n        \\"urn:ietf:params:scim:schemas:core:2.0:User\\"\\r\\n    ],\\r\\n    \\"id\\": \\"1fb366bb-975d-4422-b2f7-47f8b5ce77b1\\",\\r\\n    \\"userName\\": \\"john.doe@example.com\\",\\r\\n    \\"name\\": {},\\r\\n    \\"emails\\": [\\r\\n        {\\r\\n            \\"value\\": \\"john.doe@example.com\\",\\r\\n            \\"primary\\": true\\r\\n        }\\r\\n    ],\\r\\n    \\"active\\": true,\\r\\n    \\"meta\\": {\\r\\n        \\"resourceType\\": \\"User\\",\\r\\n        \\"created\\": \\"1713800294270\\",\\r\\n        \\"lastModified\\": \\"1713800294270\\",\\r\\n        \\"location\\": \\"https://www.notion.so/scim/v2/Users/1fb366bb-975d-4422-b2f7-47f8b5ce77b1\\"\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n### Delete User\\r\\n```json title=\\"204 No Content\\"\\r\\n-\\r\\n```\\r\\n---\\r\\n#### \ud83d\udcd3 References\\r\\n- [SCIM Users API](https://www.notion.so/help/provision-users-and-groups-with-scim#users)\\r\\n- [SCIM Groups API](https://www.notion.so/help/provision-users-and-groups-with-scim#groups)\\r\\n\\r\\n> <span class=\\"blog-id-text\\">CON007</span>"},{"id":"hubspot","metadata":{"permalink":"/RSA/connectors/hubspot","source":"@site/connectors/hubspot/hubspot.mdx","title":"HubSpot","description":"HubSpot is a leading CRM platform that offers marketing, sales, and customer","date":"2024-05-14T00:00:00.000Z","tags":[{"inline":true,"label":"Provisioning","permalink":"/RSA/connectors/tags/provisioning"},{"inline":true,"label":"REST","permalink":"/RSA/connectors/tags/rest"},{"inline":true,"label":"SaaS","permalink":"/RSA/connectors/tags/saa-s"},{"inline":true,"label":"HubSpot","permalink":"/RSA/connectors/tags/hub-spot"},{"inline":true,"label":"CRM","permalink":"/RSA/connectors/tags/crm"},{"inline":true,"label":"Marketing","permalink":"/RSA/connectors/tags/marketing"}],"readingTime":37.03333333333333,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg"}],"frontMatter":{"slug":"hubspot","title":"HubSpot","date":"2024-05-14T00:00:00.000Z","authors":"pradeepkg","tags":["Provisioning","REST","SaaS","HubSpot","CRM","Marketing"],"keywords":["Provisioning","REST","SaaS","HubSpot","CRM","Marketing"],"draft":false},"unlisted":false,"lastUpdatedAt":1715729236000,"prevItem":{"title":"Notion","permalink":"/RSA/connectors/notion"},"nextItem":{"title":"TalentLMS","permalink":"/RSA/connectors/talent-lms"}},"content":"import logoPNG from \\"@site/static/img/logos/HubSpot - 180x180.jpg\\";\\r\\nimport Tabs from \'@theme/Tabs\';\\r\\nimport TabItem from \'@theme/TabItem\';\\r\\n\\r\\n<table>\\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\">\\r\\n      <img src={logoPNG} width=\\"180\\" height=\\"180\\" />\\r\\n      HubSpot is a leading CRM platform that offers marketing, sales, and customer\\r\\n      service tools to help businesses grow. It provides solutions for email marketing,\\r\\n      lead generation, social media management, and more, all integrated into one\\r\\n      platform. HubSpot\'s user-friendly interface and robust analytics make it a\\r\\n      popular choice for companies seeking to streamline their customer relationship\\r\\n      management efforts.<br /><br />Versions: `8.0.0 P2`\\r\\n    </td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## Overview\\r\\nIt is recommended that you review the **[HubSpot Collections](./../blog/HubSpot)** guide before proceeding with this blog.\\r\\n\\r\\n## Connector Settings\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA Identity G&L console as System Administrator.\\r\\n2. Navigate to **AFX > Connectors**.\\r\\n3. Click on **_Create Connector_** and select the RESTful Web Service connector template.\\r\\n4. Enter the details as shown below under **General** tab.<br /><br />![Alt text](img/1.png)\\r\\n5. Click on the Settings tab and enter the required connection details.<br /><br />![Alt text](img/2.png)\\r\\n6. Click on **Add More Parameters**.\\r\\n7. Enter the details for **APIKey** as shown below and click **OK**.<br /><br />![Alt text](img/3.png)\\r\\n8. Provide the API key in the **API Key** field and click **OK**. <br /><br />![Alt text](img/4.png).\\r\\n\\r\\n## Supported Verbs\\r\\n### Create an Account\\r\\n\\r\\n> <span class=\\"method-post-text\\">**API Reference:**  https://developers.hubspot.com/docs/api/settings/user-provisioning</span>\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Create an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name | *   | Display Name  | Mapping                           | Description                   |\\r\\n| -------------- | --- | ------------- | --------------------------------- | ----------------------------- |\\r\\n| Email          | \u2714\ufe0f  | Email Address | $&#123;AccountTemplate.Email}     | Primary email address of user |\\r\\n| LastName       | \u2714\ufe0f  | Last Name     | $&#123;AccountTemplate.LastName}  | Family name of the user       |\\r\\n| FirstName      | \u2714\ufe0f  | First Name    | $&#123;AccountTemplate.FirstName} | Given name of the user        |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n**Command Output Parameters**\\r\\n\\r\\n| Parameter Name | Display Name | Mapping             | Description                                |\\r\\n| -------------- | ------------ | ------------------- | ------------------------------------------ |\\r\\n| Account        | Account ID   | Account.External_ID | A unique identifier used to reference user |\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-post\\">POST</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`settings/v3/users` ([Sample Response](#create-user))</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${Settings.APIKey}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n  \\"firstName\\": \\"${FirstName}\\",\\r\\n  \\"lastName\\": \\"${LastName}\\",\\r\\n  \\"sendWelcomeEmail\\": true,\\r\\n  \\"email\\": \\"${Email}\\"\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Status Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Brief Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`message`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Detailed Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`category`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Account</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`id`</td>\\r\\n  </tr>  \\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Delete an Account\\r\\n\\r\\n> <span class=\\"method-post-text\\">**API Reference:** https://developers.hubspot.com/docs/api/settings/user-provisioning</span>\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Delete an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name | *   | Display Name | Mapping              | Description                            |\\r\\n| -------------- | --- | ------------ | -------------------- | -------------------------------------- |\\r\\n| AccountId      | \u2714\ufe0f  | Account Name | $&#123;Account.Name} | The primary email address for teh user |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Command Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td>\\r\\n      <span class=\\"method-delete\\">DELETE</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`settings/v3/users/${Account}?idProperty=EMAIL` ([Sample Response](#delete-user))</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Headers</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`*/*`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${Settings.APIKey}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Body</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      ```json\\r\\n      {}\\r\\n      ```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**. \\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Update an Account\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Update an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name  | *   | Display Name     | Mapping                     | Description                                |\\r\\n| --------------- | --- | ---------------- | --------------------------- | ------------------------------------------ |\\r\\n| Account         |     | Employee ID      | $&#123;Account.External_Id} | A unique identifier used to reference user |\\r\\n| JobTitle        |     | Title            | $&#123;User.Title}          | Job title for the user                     |\\r\\n| AdditionalPhone |     | Additional Phone | $&#123;User.Phone}          | User\'s pone number                         |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td>\u2714\ufe0f</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-patch\\">Patch</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`crm/v3/objects/users/${Account}` ([Sample Response](#update-user))</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${Settings.APIKey}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n    \\"properties\\": {\\r\\n        \\"hs_additional_phone\\": \\"${AdditionalPhone}\\",\\r\\n        \\"hs_job_title\\": \\"${JobTitle}\\"\\r\\n    }\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Status Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Brief Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`message`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Detailed Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`category`</td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n---\\r\\n## API Examples\\r\\n\\r\\n### Create User\\r\\n<Tabs className=\\"unique-tabs\\">\\r\\n<TabItem value=\\"201 Created\\">\\r\\n```json\\r\\n{\\r\\n  \\"id\\": \\"66262459\\",\\r\\n  \\"email\\": \\"hannah.lewis@example.com\\",\\r\\n  \\"firstName\\": \\"Hannah\\",\\r\\n  \\"lastName\\": \\"Lewis\\",\\r\\n  \\"roleIds\\": [],\\r\\n  \\"sendWelcomeEmail\\": true,\\r\\n  \\"superAdmin\\": false\\r\\n}\\r\\n```\\r\\n</TabItem>\\r\\n<TabItem value=\\"409 Conflict\\">\\r\\n```json\\r\\n{\\r\\n    \\"status\\": \\"error\\",\\r\\n    \\"message\\": \\"User with email hannah.lewis@example.com already exists on this account.\\",\\r\\n    \\"correlationId\\": \\"d26b3bbf-0449-4573-8928-924036a08606\\",\\r\\n    \\"context\\": {\\r\\n        \\"email\\": [\\r\\n            \\"hannah.lewis@example.com\\"\\r\\n        ]\\r\\n    },\\r\\n    \\"category\\": \\"OBJECT_ALREADY_EXISTS\\",\\r\\n    \\"subCategory\\": \\"ValidationErrors.USER_ALREADY_EXISTS\\"\\r\\n}\\r\\n```\\r\\n</TabItem>\\r\\n<TabItem value=\\"500 Internal Server Error\\">\\r\\n```json\\r\\n{\\r\\n    \\"status\\": \\"error\\",\\r\\n    \\"message\\": \\"User cannot be added at this time.\\",\\r\\n    \\"correlationId\\": \\"fa32ae8d-d511-42de-8744-3eec96e65953\\",\\r\\n    \\"category\\": \\"INTERNAL_ERROR\\",\\r\\n    \\"subCategory\\": \\"ValidationErrors.INTERNAL_ERROR\\"\\r\\n}\\r\\n```\\r\\n</TabItem>\\r\\n</Tabs>\\r\\n\\r\\n### Delete User\\r\\n<Tabs className=\\"unique-tabs\\">\\r\\n<TabItem value=\\"204 No Content\\">\\r\\n```json\\r\\n-\\r\\n```\\r\\n</TabItem>\\r\\n</Tabs>\\r\\n\\r\\n### Update User\\r\\n<Tabs className=\\"unique-tabs\\">\\r\\n<TabItem value=\\"200 OK\\">\\r\\n\\r\\n```json\\r\\n{\\r\\n    \\"id\\": \\"322597952835\\",\\r\\n    \\"properties\\": {\\r\\n        \\"hs_access\\": \\"contacts;marketing;reports;sales;service\\",\\r\\n        \\"hs_all_accessible_team_ids\\": \\"44434524\\",\\r\\n        \\"hs_all_owner_ids\\": \\"1548248482\\",\\r\\n        \\"hs_all_team_ids\\": \\"44434524\\",\\r\\n        \\"hs_assigned_seats\\": \\"core\\",\\r\\n        \\"hs_createdate\\": \\"2024-04-19T20:37:12.046Z\\",\\r\\n        \\"hs_deactivated\\": \\"false\\",\\r\\n        \\"hs_email\\": \\"alexander.wright@example.com\\",\\r\\n        \\"hs_family_name\\": \\"Wright\\",\\r\\n        \\"hs_given_name\\": \\"Alexander\\",\\r\\n        \\"hs_last_property_updated_time\\": \\"1713667080454\\",\\r\\n        \\"hs_lastmodifieddate\\": \\"2024-04-21T02:38:00.454Z\\",\\r\\n        \\"hs_main_user_language_skill\\": \\"en\\",\\r\\n        \\"hs_object_id\\": \\"322597952835\\",\\r\\n        \\"hs_standard_time_zone\\": \\"America/Chicago\\",\\r\\n        \\"hs_updated_by_user_id\\": \\"66222292\\",\\r\\n        \\"hs_user_all_accessible_teams\\": \\"44434524\\",\\r\\n        \\"hs_user_assigned_primary_team\\": \\"44434524\\",\\r\\n        \\"hs_user_ids_of_all_owners\\": \\"66226765\\",\\r\\n        \\"hubspot_owner_assigneddate\\": \\"2024-04-19T20:37:17.312Z\\",\\r\\n        \\"hubspot_owner_id\\": \\"1548248482\\",\\r\\n        \\"hubspot_team_id\\": \\"44434524\\"\\r\\n    },\\r\\n    \\"createdAt\\": \\"2024-04-19T20:37:12.046Z\\",\\r\\n    \\"updatedAt\\": \\"2024-04-21T02:38:00.454Z\\",\\r\\n    \\"archived\\": false\\r\\n}\\r\\n```\\r\\n</TabItem>\\r\\n</Tabs>\\r\\n\\r\\n> <span class=\\"blog-id-text\\">CON006</span>"},{"id":"talent-lms","metadata":{"permalink":"/RSA/connectors/talent-lms","source":"@site/connectors/talent-lms/talent-lms.mdx","title":"TalentLMS","description":"TalentLMS is a user-friendly learning management system designed for businesses and educational institutions. With intuitive course creation tools, customizable learning paths, and robust tracking features, it enables organizations to deliver effective training to employees, customers, and partners. Its cloud-based platform offers scalability, ease of use, and comprehensive reporting, making it an ideal solution for modern training needs.Versions: 8.0.0 P2","date":"2024-05-02T00:00:00.000Z","tags":[{"inline":true,"label":"Provisioning","permalink":"/RSA/connectors/tags/provisioning"},{"inline":true,"label":"REST","permalink":"/RSA/connectors/tags/rest"},{"inline":true,"label":"SaaS","permalink":"/RSA/connectors/tags/saa-s"},{"inline":true,"label":"TalentLMS","permalink":"/RSA/connectors/tags/talent-lms"},{"inline":true,"label":"Learning Management","permalink":"/RSA/connectors/tags/learning-management"},{"inline":true,"label":"LMS","permalink":"/RSA/connectors/tags/lms"},{"inline":true,"label":"Education","permalink":"/RSA/connectors/tags/education"},{"inline":true,"label":"API Key","permalink":"/RSA/connectors/tags/api-key"}],"readingTime":46.03333333333333,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg"}],"frontMatter":{"slug":"talent-lms","title":"TalentLMS","date":"2024-05-02T00:00:00.000Z","authors":"pradeepkg","tags":["Provisioning","REST","SaaS","TalentLMS","Learning Management","LMS","Education","API Key"],"keywords":["Provisioning","REST","SaaS","TalentLMS","Learning Management","LMS","Education","API Key"],"draft":false},"unlisted":false,"lastUpdatedAt":1715729236000,"prevItem":{"title":"HubSpot","permalink":"/RSA/connectors/hubspot"},"nextItem":{"title":"Active Directory","permalink":"/RSA/connectors/afx-ad"}},"content":"import logoPNG from \\"@site/static/img/logos/TalentLMS - 180x180.jpg\\";\\r\\n\\r\\n<table>\\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\"><img src={logoPNG} width=\\"180\\" height=\\"180\\"/>TalentLMS is a user-friendly learning management system designed for businesses and educational institutions. With intuitive course creation tools, customizable learning paths, and robust tracking features, it enables organizations to deliver effective training to employees, customers, and partners. Its cloud-based platform offers scalability, ease of use, and comprehensive reporting, making it an ideal solution for modern training needs.<br /><br />Versions: `8.0.0 P2`</td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n## Overview\\r\\n\\r\\nIt is recommended that you review the **[TalentLMS Collections](./../blog/talent-lms)** guide before proceeding with this blog.\\r\\n\\r\\n## Connector Settings\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA Identity G&L console as System Administrator.\\r\\n2. Navigate to **AFX > Connectors**.\\r\\n3. Click on **_Create Connector_** and select the RESTful Web Service connector template.\\r\\n4. Enter the details as shown below under **General** tab.<br /><br />![Alt text](img/1.png)\\r\\n5. Click on the Settings tab and enter the required connection details.<br /><br />![Alt text](img/2.png)\\r\\n6. Click **OK**.\\r\\n\\r\\n## Supported Verbs\\r\\n### Create an Account\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Create an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name |   *   | Display Name             | Mapping                           | Description                          |\\r\\n| -------------- | ----- | ------------------------ | --------------------------------- | ------------------------------------ |\\r\\n| Account        | \u2714\ufe0f    | Account Name             | $&#123;AccountTemplate.Name}      | Unique identifier for the user       |\\r\\n| LastName       | \u2714\ufe0f    | Last Name                | $&#123;AccountTemplate.LastName}  | Family name of the user              |\\r\\n| FirstName      | \u2714\ufe0f    | First Name               | $&#123;AccountTemplate.FirstName} | Given name of the user               |\\r\\n| Password       | \u2714\ufe0f \ud83d\udd12 | Initial Account Password | $&#123;AccountTemplate.Password}  | Password which is required for login |\\r\\n| Email          | \u2714\ufe0f    | Email Address            | $&#123;AccountTemplate.Email}     | Primary email address of user        |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"verb-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"6\\"><span class=\\"header-2-text\\">Command Output Parameters</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"6\\">Defaults</td>\\r\\n  </tr>\\r\\n</table>\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-post\\">POST</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`api/v1/usersignup`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n    \\"first_name\\": \\"${FirstName}\\",\\r\\n    \\"last_name\\": \\"${LastName}\\",\\r\\n    \\"email\\": \\"${Email}\\",\\r\\n    \\"login\\": \\"${Account}\\",\\r\\n    \\"password\\": \\"${Password}\\",\\r\\n    \\"status\\": \\"active\\"\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Brief Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.error.type`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Error Type: $1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Detailed Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.error.message`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Error Message: $1</td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Add Account to Group\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Add Account to Group_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name |  *  | Display Name | Mapping                     | Description                    |\\r\\n| -------------- | --- | ------------ | --------------------------- | ------------------------------ |\\r\\n| AccountID      | \u2714\ufe0f  | Account ID   | $&#123;Account.External_Id} | Unique identifier for the user |\\r\\n| GroupKey       | \u2714\ufe0f  | Group Key    | $&#123;Group.External_Id}   | Unique key for the group       |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Command Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td>\\r\\n      <span class=\\"method-post\\">POST</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`api/v1/addusertogroup`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Headers</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Body</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n    \\"user_id\\": ${AccountID},\\r\\n    \\"group_key\\": \\"${GroupKey}\\"\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Brief Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.error.type`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Error Type: $1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Detailed Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.error.message`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Error Message: $1</td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Remove Account from Group\\r\\n\\r\\n**Steps**\\r\\n\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Remove Account from Group_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name |  *  | Display Name | Mapping                     | Description                     |\\r\\n| -------------- | --- | ------------ | --------------------------- | ------------------------------- |\\r\\n| AccountID      | \u2714\ufe0f  | Account ID   | $&#123;Account.External_Id} | Unique identifier for the user  |\\r\\n| GroupKey       | \u2714\ufe0f  | Group Key    | $&#123;Group.External_Id}   | Unique key for the group       |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Command Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td>\\r\\n      <span class=\\"method-post\\">POST</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`api/v1/removeuserfromgroup/user_id:${AccountID},group_id:${GroupKey}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Headers</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Body</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Brief Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.error.type`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Error Type: $1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Detailed Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.error.message`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Error Message: $1</td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Enable an Account\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Enable an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name |  *  | Display Name | Mapping                     | Description                                 |\\r\\n| -------------- | --- | ------------ | --------------------------- | ------------------------------------------- |\\r\\n| AccountID      | \u2714\ufe0f  | Account ID   | $&#123;Account.External_Id} | A unique identifier used to reference users |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-post\\">POST</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`api/v1/usersetstatus/user_id:${AccountID},status:active`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Brief Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.error.type`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Error Type: $1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Detailed Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.error.message`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Error Message: $1</td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Disable an Account\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Disable an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name |  *  | Display Name | Mapping                     | Description                                 |\\r\\n| -------------- | --- | ------------ | --------------------------- | ------------------------------------------- |\\r\\n| AccountID      | \u2714\ufe0f  | Account ID   | $&#123;Account.External_Id} | A unique identifier used to reference users |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-post\\">POST</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`api/v1/usersetstatus/user_id:${AccountID},status:inactive`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Brief Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.error.type`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Error Type: $1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Detailed Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`$.error.message`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Error Message: $1</td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n> <span class=\\"blog-id-text\\">CON005</span>"},{"id":"afx-ad","metadata":{"permalink":"/RSA/connectors/afx-ad","source":"@site/connectors/ad/ad.mdx","title":"Active Directory","description":"Active Directory (AD) is a Microsoft directory service that manages network","date":"2024-03-22T00:00:00.000Z","tags":[{"inline":true,"label":"Connectors","permalink":"/RSA/connectors/tags/connectors"},{"inline":true,"label":"Provisioning","permalink":"/RSA/connectors/tags/provisioning"},{"inline":true,"label":"LDAP","permalink":"/RSA/connectors/tags/ldap"},{"inline":true,"label":"Active Directory","permalink":"/RSA/connectors/tags/active-directory"}],"readingTime":48.333333333333336,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg"}],"frontMatter":{"slug":"afx-ad","title":"Active Directory","date":"2024-03-22T00:00:00.000Z","authors":"pradeepkg","tags":["Connectors","Provisioning","LDAP","Active Directory"],"keywords":["Connectors","Provisioning","LDAP","Active Directory"],"draft":false},"unlisted":false,"lastUpdatedAt":1715729236000,"prevItem":{"title":"TalentLMS","permalink":"/RSA/connectors/talent-lms"},"nextItem":{"title":"Eletive","permalink":"/RSA/connectors/afx-eletive"}},"content":"import logoPNG from \\"@site/static/img/logos/Active Directory - 180x180.jpg\\";\\r\\nimport LinkSvg from \\"../../iconmonstr-link-thin.svg\\";\\r\\nimport Admonition from \\"@theme/Admonition\\";\\r\\n\\r\\n<table>\\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\">\\r\\n      <img src={logoPNG} width=\\"180\\" height=\\"180\\" />\\r\\n      Active Directory (AD) is a Microsoft directory service that manages network\\r\\n      resources efficiently. It centralizes authentication, authorization, and network\\r\\n      management tasks, providing a unified environment for user and computer management.\\r\\n      AD simplifies IT administration, enhances security through access controls,\\r\\n      and facilitates seamless communication across a network, making it a crucial\\r\\n      component for enterprise environments.<br /><br />Versions: `8.0.0 P1`\\r\\n    </td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## Connector Settings\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA Identity G&L console as System Administrator.\\r\\n2. Navigate to **AFX > Connectors**.\\r\\n3. Click on **_Create Connector_** and select the **Active Directory** connector template.\\r\\n4. Enter the details as shown below under **General** tab.<br /><br />![Alt text](img/1.png)\\r\\n5. Click on the Settings tab and enter the required connection details.<br /><br />![Alt text](img/2.png)\\r\\n6. Provide the DN settings as show below.<br /><br />![Alt text](img/3.png)\\r\\n7. If **Create Account** verb with dynamic OU placement is required, _DN Suffix Mappings_[^2] can be configured as show below. In the example below, `US` is the country code from HR source and `OU=US,OU=Users,DC=company,DC=com` is the desired OU for account placement.1\ufe0f\u20e3<br /><br />![Alt text](img/4.png)\\r\\n8. Click **OK**.\\r\\n9. Verify the settings using **Test Connector Settings** option.\\r\\n\\r\\n## Supported Verbs\\r\\n\\r\\n### Create an Account\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Create an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter          |   *   | Display Name              | Mapping                                                             | Description                                                                                                                                                      |\\r\\n| ------------------ | ----- | ------------------------- | ------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\r\\n| Account            | \u2714\ufe0f    | Account Name              | $&#123;AccountTemplate.Name}                                        | Full distinguished name                                                                                                                                          |\\r\\n| sAMAccountName     | \u2714\ufe0f    | sAMAccountName            | $&#123;AccountTemplate.Name}                                        | Logon name used to support clients and servers running earlier versions of the operating system, such as Windows NT 4.0, Windows 95, Windows 98, and LAN Manager |\\r\\n| CN                 | \u2714\ufe0f    | Common Name               | $&#123;AccountTemplate.CN}                                          | Name that represents an object. It is used to perform searches                                                                                                   |\\r\\n| sn                 | \u2714\ufe0f    | Last Name                 | $&#123;AccountTemplate.LastName}                                    | Surname of a person                                                                                                                                              |\\r\\n| givenName          | \u2714\ufe0f    | First Name                | $&#123;AccountTemplate.FirstName}                                   | A given name of a person                                                                                                                                         |\\r\\n| mail               |       | Email Address             | $&#123;AccountTemplate.Email}                                       | Simple SMTP address of a person                                                                                                                                  |\\r\\n| Password           | \u2714\ufe0f \ud83d\udd12 | Initial Account Password  | $&#123;AccountTemplate.Password}                                    | Password which is required for login                                                                                                                             |\\r\\n| userAccountControl |       | User Account Control(UAC) | NORMAL_ACCOUNT                                                      | User Account Control(UAC) Value                                                                                                                                  |\\r\\n| displayName        |       | Display Name              | $&#123;AccountTemplate.LastName}, $&#123;AccountTemplate.FirstName} | The display name for the user                                                                                                                                    |\\r\\n| userPrincipalName  |       | User Principal Name       | $&#123;AccountTemplate.UPN}                                         | User Logon Name                                                                                                                                                  |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\nBelow are some additional input parameters that are required in special situations.\\r\\n| Parameter | Description |\\r\\n| ---- | ---- |\\r\\n| `AFX_DN_Suffix_Key`[^2] | Set this value of the HR attribute(s) or any other key that will identify the OU where the user account will be created. When configured, if no match is found the account will be created in the default OU configured in the connector. <br /><br />Refer to [DN Suffix Mappings](#connector-settings) in the connection settings. If country is the key for picking OU, the mapping will look something like this `${AccountTemplate.Country}` 1\ufe0f\u20e3|\\r\\n\\r\\n**Command Output Parameters**\\r\\n| Parameter Name | Display Name | Mapping | Description |\\r\\n| ---- | ---- | ---- | ---- |\\r\\n| distinguishedName | Distinguished Name | Account.External_ID | A distinguished name (DN) is a LDAP entry that uniquely identifies and describes an entry in a directory |\\r\\n\\r\\n<Admonition type=\\"note\\" icon=\\"1\ufe0f\u20e3\\" title=\\"\\">\\r\\n  Using output parameters is crucial when certain values are unknown before the\\r\\n  process begins. In this specific scenario, where the Organizational Unit (OU)\\r\\n  is not known in advance, capturing the distinguishedName as an output\\r\\n  parameter is essential. `distinguishedName` becomes vital for subsequent\\r\\n  operations, such as `Add Account to Group`.\\r\\n</Admonition>\\r\\n\\r\\n# Additional Use Cases\\r\\n\\r\\n#### \ud83d\udfe0 Dynamic DN\\r\\n\\r\\nDuring the account creation the account can be placed in specific Organizational Units (OU) dynamically based on one or more attributes from the HR sources or key passed through account template.\\r\\n\\r\\n**Examples**\\r\\n\\r\\n- Place users in OUs based on country code from HR system.\\r\\n- Place users in OUs based on the department and office location attributes collected from HCM.\\r\\n\\r\\n**Solution**\\r\\n\\r\\n1. Add [DN Suffix Mappings](#connector-settings) in the **Settings** tab.\\r\\n2. Add `AFX_DN_Suffix_Key`[^2] to the [Create Account](#create-an-account) verb.\\r\\n3. Read the `distinguishedName` output parameter in the [Create Account](#create-an-account) verb.\\r\\n\\r\\nItems marked by 1\ufe0f\u20e3 in this blog are related to this use case.\\r\\n\\r\\n#### \ud83d\udfe0 Change Password on First Logon\\r\\n\\r\\nWhen creating a new account, it may be necessary for users to change their password during their initial login. This can be accomplished by configuring specific input parameters within the [Create Account](#create-an-account) verb.\\r\\n\\r\\nThe input parameters required are as follows:\\r\\n| Parameter | Description |\\r\\n| ---- | ---- |\\r\\n| `_AFX_FORCE_REGISTER_USER_CHANGE_PWD` | - When it is set to `0`, the pwdLastSet attribute of the new account will be set to the date/time when the account is created (i.e. the user does not have to set the password at the next logon). <br />- When it is set to `1`, the pwdLastSet attribute of the new account will be set to 0 (i.e. the user must set the password at the next logon).|\\r\\n|`pwdLastSet` | Setting to `0` along with `userAccountControl` to `NORMAL_ACCOUNT,PASSWORD_EXPIRED` will set the **_User must change password at next logon_** on the Active Directory account. This attribute stores the value of the date and time when the user\'s password was last changed in Windows NT. <br /><br />This is an alternative solution to setting `_AFX_FORCE_REGISTER_USER_CHANGE_PWD` |\\r\\n\\r\\n### Add Account to Group\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Create an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter |  *  | Display Name               | Mapping                     | Description                                    |\\r\\n| --------- | --- | -------------------------- | --------------------------- | ---------------------------------------------- |\\r\\n| User[^1]  | \u2714\ufe0f  | Account DN or Account Name | $&#123;Account.External_Id} | Full distinguished name of user or user name   |\\r\\n| Group[^1] | \u2714\ufe0f  | Group DN or Group Name     | $&#123;Group.External_Id}   | Full distinguished name of group or group name |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n3. Click **OK**. 4. Run the _Test Connector Capabilities_ to verify the verb.\\r\\n\\r\\n### Remove Account from Group\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Create an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter |  *  | Display Name               | Mapping                     | Description                                    |\\r\\n| --------- | --- | -------------------------- | --------------------------- | ---------------------------------------------- |\\r\\n| User[^1]  | \u2714\ufe0f  | Account DN or Account Name | $&#123;Account.External_Id} | Full distinguished name of user or user name   |\\r\\n| Group[^1] | \u2714\ufe0f  | Group DN or Group Name     | $&#123;Group.External_Id}   | Full distinguished name of group or group name |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n3. Click **OK**.\\r\\n4. Run the _Test Connector Capabilities_ to verify the verb.\\r\\n\\r\\n### Create a Group\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Create a Group_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter      |  *  | Display Name           | Mapping     | Description                                                                                                                                                      |\\r\\n| -------------- | --- | ---------------------- | ----------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\r\\n| Group[^1]      | \u2714\ufe0f  | Group DN or Group Name |             | Full distinguished name of group or group name                                                                                                                   |\\r\\n| CN             | \u2714\ufe0f  | Common Name            |             | Name that represents an object. It is used to perform searches                                                                                                   |\\r\\n| sAMAccountName |     | sAMAccountName         |             | Logon name used to support clients and servers running earlier versions of the operating system, such as Windows NT 4.0, Windows 95, Windows 98, and LAN Manager |\\r\\n| groupType      | \u2714\ufe0f  | Group Type             | -2147483646 | Set of flags that define the type and scope of a group. (-2147483646 - Security Group type)                                                                      |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n3. Click **OK**.\\r\\n4. Run the _Test Connector Capabilities_ to verify the verb.\\r\\n\\r\\n[^1]: In the absence of full distinguished name for user or group, the user or group distinguished name will be calculated based on the corresponding base DN specified in the **Settings** tab.\\r\\n[^2]: Both the parameter name `AFX_DN_Suffix_Key` (or `AFX_OU_Picker`) as well as the key used in the DN mappings are case sensitive. Example : If the DN mapping is `US=OU=US,OU=Users,DC=company,DC=com` then the expected value is `US`. `Us` or `us` will not match the mapping rule.\\r\\n\\r\\n\ud83d\udd34 \ud83d\udfe0 \u26ab \u26aa \ud83d\udfe3 \ud83d\udfe2 \ud83d\udfe1 \ud83d\udd35\\r\\n\\r\\n> <span class=\\"blog-id-text\\">CON004</span>"},{"id":"afx-eletive","metadata":{"permalink":"/RSA/connectors/afx-eletive","source":"@site/connectors/eletive/eletive.mdx","title":"Eletive","description":"Eletive is a People Success Platform that gathers real-time employee engagement","date":"2024-03-03T00:00:00.000Z","tags":[{"inline":true,"label":"Connectors","permalink":"/RSA/connectors/tags/connectors"},{"inline":true,"label":"Provisioning","permalink":"/RSA/connectors/tags/provisioning"},{"inline":true,"label":"REST","permalink":"/RSA/connectors/tags/rest"},{"inline":true,"label":"SaaS","permalink":"/RSA/connectors/tags/saa-s"},{"inline":true,"label":"Eletive","permalink":"/RSA/connectors/tags/eletive"},{"inline":true,"label":"API Key","permalink":"/RSA/connectors/tags/api-key"},{"inline":true,"label":"Employee Engagement Platform","permalink":"/RSA/connectors/tags/employee-engagement-platform"},{"inline":true,"label":"SCIM","permalink":"/RSA/connectors/tags/scim"}],"readingTime":36.3,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg"}],"frontMatter":{"slug":"afx-eletive","title":"Eletive","date":"2024-03-03T00:00:00.000Z","authors":"pradeepkg","tags":["Connectors","Provisioning","REST","SaaS","Eletive","API Key","Employee Engagement Platform","SCIM"],"keywords":["Connectors","Provisioning","REST","SaaS","Eletive","API Key","Employee Engagement Platform","SCIM"]},"unlisted":false,"lastUpdatedAt":1715729236000,"prevItem":{"title":"Active Directory","permalink":"/RSA/connectors/afx-ad"},"nextItem":{"title":"Microsoft Dynamics 365","permalink":"/RSA/connectors/afx-dynamics365"}},"content":"import logoPNG from \\"@site/static/img/logos/Eletive  - 180x180.jpg\\";\\r\\nimport LinkSvg from \\"../../iconmonstr-link-thin.svg\\";\\r\\nimport Admonition from \\"@theme/Admonition\\";\\r\\n\\r\\n<table>\\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\">\\r\\n      <img src={logoPNG} width=\\"180\\" height=\\"180\\" />\\r\\n      Eletive is a People Success Platform that gathers real-time employee engagement\\r\\n      surveys, performance management, OKR goal-setting, 360-feedback, and 1:1s in\\r\\n      one intuitive and user-friendly tool. Eletive automates and streamlines tedious\\r\\n      admin tasks, so HR, managers, and team members can focus on the business goals.\\r\\n      <br /><br />Versions: `7.5.2`\\r\\n    </td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## Connector Settings\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA Identity G&L console as System Administrator.\\r\\n2. Navigate to **AFX > Connectors**.\\r\\n3. Click on **_Create Connector_** and select the RESTful Web Service connector template.\\r\\n4. Enter the details as shown below under **General** tab.<br /><br />![Alt text](img/1.png)\\r\\n5. Click on the Settings tab and enter the required connection details.<br /><br />![Alt text](img/2.png)\\r\\n6. Click on **Add More Parameters**.\\r\\n7. Enter the details for **APIKey** as shown below and click **OK**.<br /><br />![Alt text](img/3.png)\\r\\n8. Provide the API key in the **API Key** field and click **OK**. <br /><br />![Alt text](img/4.png).\\r\\n\\r\\n## Supported Verbs\\r\\n\\r\\n### Create an Account\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Create an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name |  *  | Display Name          | Mapping                              | Description                                                              |\\r\\n| -------------- | --- | --------------------- | ------------------------------------ | ------------------------------------------------------------------------ |\\r\\n| Account        | \u2714\ufe0f  | Account ID            | $&#123;AccountTemplate.Name}         | A unique identifier used to reference users                              |\\r\\n| LastName       | \u2714\ufe0f  | Last Name             | $&#123;AccountTemplate.LastName}     | Family name of the user                                                  |\\r\\n| FirstName      | \u2714\ufe0f  | First Name            | $&#123;AccountTemplate.FirstName}    | Given name of the user                                                   |\\r\\n| Email          | \u2714\ufe0f  | Email Address         | $&#123;AccountTemplate.Email}        | Primary email address of user                                            |\\r\\n| ManagerID      |     | Manager ID            | $&#123;AccountTemplate.ManagerID}    | A unique identifier used to reference user\'s supervisor                  |\\r\\n| ManagerEmail   |     | Manager Email Address | $&#123;AccountTemplate.ManagerEmail} | Primary email address of user\'s supervisor                               |\\r\\n| EmpType        |     | Employee Type         | $&#123;AccountTemplate.EmpType}      | Used to identify the relationship between the organization and the user. |\\r\\n| Country        |     | Country               | $&#123;AccountTemplate.Country}      | The user\'s country (ISO 3166 \u2014 Country Codes)                            |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"verb-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"6\\"><span class=\\"header-2-text\\">Command Output Parameters</span></td>\\r\\n  </tr>\\r\\n  <tr class=\\"header-row\\">\\r\\n    <td>Parameter Name</td>\\r\\n    <td>Type</td>\\r\\n    <td>Display Name</td>\\r\\n    <td>Mapping</td>\\r\\n    <td>Description</td>    \\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>ExternalID</td>\\r\\n    <td>String</td>\\r\\n    <td>External ID</td>\\r\\n    <td>Account.Name</td>\\r\\n    <td> A unique identifier used to reference users within Eletive</td>    \\r\\n  </tr>  \\r\\n</table>\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-post\\">POST</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`v1/scim2/Users`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`*/*`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${Settings.APIKey}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n  \\"schemas\\": [\\r\\n    \\"urn:ietf:params:scim:schemas:core:2.0:User\\",\\r\\n    \\"urn:ietf:params:scim:schemas:extension:eletive:2.0:User\\"\\r\\n  ],\\r\\n  \\"externalId\\": \\"${Account}\\",\\r\\n  \\"userName\\": \\"${Email}\\",\\r\\n  \\"name\\": {\\r\\n    \\"familyName\\": \\"${LastName}\\",\\r\\n    \\"givenName\\": \\"${FirstName}\\"\\r\\n  },\\r\\n  \\"emails\\": [\\r\\n    {\\r\\n      \\"type\\": \\"work\\",\\r\\n      \\"value\\": \\"${Email}\\",\\r\\n      \\"primary\\": true\\r\\n    }\\r\\n  ],\\r\\n  \\"locale\\": \\"en\\",\\r\\n  \\"preferredLanguage\\": \\"en\\",\\r\\n  \\"userType\\": \\"Users\\",\\r\\n  \\"active\\": true,\\r\\n  \\"urn:ietf:params:scim:schemas:extension:eletive:2.0:User\\": {\\r\\n    \\"participateInSurvey\\": true,\\r\\n    \\"Manager\\": {\\r\\n      \\"email\\": \\"${ManagerEmail}\\",\\r\\n      \\"externalId\\": \\"${ManagerID}\\"\\r\\n    },\\r\\n    \\"Country\\": \\"${Country}\\",\\r\\n    \\"Email\\": \\"${Email}\\",\\r\\n    \\"userType\\": \\"${EmpType}\\"\\r\\n  }\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Status Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d\\\\{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d\\\\{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Brief Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^(.\\\\{0,3})</td>\\r\\n    <td>Response code: $1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Detailed Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^(.\\\\{0,3})</td>\\r\\n    <td>Response code: $1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">ExternalID</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`id`</td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Enable an Account\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Enable an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name |  *  | Display Name | Mapping                     | Description                                 |\\r\\n| -------------- | --- | ------------ | --------------------------- | ------------------------------------------- |\\r\\n| Account        | \u2714\ufe0f  | Account ID   | $&#123;Account.External_Id} | A unique identifier used to reference users |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-patch\\">PATCH</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`v1/scim2/Users/${Account}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`*/*`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${Settings.APIKey}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n  \\"schemas\\": [\\r\\n    \\"urn:ietf:params:scim:api:messages:2.0:PatchOp\\"\\r\\n  ],\\r\\n  \\"Operations\\": [\\r\\n    {\\r\\n      \\"op\\": \\"add\\",\\r\\n      \\"path\\": \\"active\\",\\r\\n      \\"value\\": true\\r\\n    }\\r\\n  ]\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Status Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d\\\\{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d\\\\{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Brief Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^(.\\\\{0,3})</td>\\r\\n    <td>Response code: $1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Detailed Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^(.\\\\{0,3})</td>\\r\\n    <td>Response code: $1</td>\\r\\n  </tr>  \\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Disable an Account\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Disable an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name |  *  | Display Name | Mapping                     | Description                                 |\\r\\n| -------------- | --- | ------------ | --------------------------- | ------------------------------------------- |\\r\\n| Account        | \u2714\ufe0f  | Account ID   | $&#123;Account.External_Id} | A unique identifier used to reference users |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-patch\\">PATCH</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`v1/scim2/Users/${Account}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`*/*`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${Settings.APIKey}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n  \\"schemas\\": [\\r\\n    \\"urn:ietf:params:scim:api:messages:2.0:PatchOp\\"\\r\\n  ],\\r\\n  \\"Operations\\": [\\r\\n    {\\r\\n      \\"op\\": \\"add\\",\\r\\n      \\"path\\": \\"active\\",\\r\\n      \\"value\\": false\\r\\n    }\\r\\n  ]\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Status Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d\\\\{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d\\\\{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Brief Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^(.\\\\{0,3})</td>\\r\\n    <td>Response code: $1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Detailed Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^(.\\\\{0,3})</td>\\r\\n    <td>Response code: $1</td>\\r\\n  </tr>  \\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n## References\\r\\n- [User Provisioning - SCIM 2.0](https://help.eletive.com/user-provisioning-scim-2.0)\\r\\n\\r\\n> <span class=\\"blog-id-text\\">CON003</span>"},{"id":"afx-dynamics365","metadata":{"permalink":"/RSA/connectors/afx-dynamics365","source":"@site/connectors/dynamics365/dynamics365.mdx","title":"Microsoft Dynamics 365","description":"Microsoft Dynamics 365 is a comprehensive cloud-based business application","date":"2024-02-22T00:00:00.000Z","tags":[{"inline":true,"label":"Connectors","permalink":"/RSA/connectors/tags/connectors"},{"inline":true,"label":"Provisioning","permalink":"/RSA/connectors/tags/provisioning"},{"inline":true,"label":"REST","permalink":"/RSA/connectors/tags/rest"},{"inline":true,"label":"SaaS","permalink":"/RSA/connectors/tags/saa-s"},{"inline":true,"label":"Microsoft","permalink":"/RSA/connectors/tags/microsoft"},{"inline":true,"label":"ERP","permalink":"/RSA/connectors/tags/erp"},{"inline":true,"label":"CRM","permalink":"/RSA/connectors/tags/crm"},{"inline":true,"label":"Dynamics 365","permalink":"/RSA/connectors/tags/dynamics-365"},{"inline":true,"label":"Token","permalink":"/RSA/connectors/tags/token"}],"readingTime":90.83333333333333,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg"},{"name":"Hany Mohamed","title":"Contributor","url":"https://github.com/Hany-mohamed-404","imageURL":"https://github.com/Hany-mohamed-404.png","key":"Hany-mohamed-404"}],"frontMatter":{"slug":"afx-dynamics365","title":"Microsoft Dynamics 365","date":"2024-02-22T00:00:00.000Z","authors":["pradeepkg","Hany-mohamed-404"],"tags":["Connectors","Provisioning","REST","SaaS","Microsoft","ERP","CRM","Dynamics 365","Token"],"keywords":["Connectors","Provisioning","REST","SaaS","Microsoft","ERP","CRM","Dynamics 365","Token"]},"unlisted":false,"lastUpdatedAt":1715729236000,"prevItem":{"title":"Eletive","permalink":"/RSA/connectors/afx-eletive"},"nextItem":{"title":"MangoApps","permalink":"/RSA/connectors/afx-mangoapps"}},"content":"import logoPNG from \\"@site/static/img/logos/Dynamics 365 - 180x180.png\\";\\r\\nimport LinkSvg from \\"../../iconmonstr-link-thin.svg\\";\\r\\nimport Admonition from \\"@theme/Admonition\\";\\r\\n\\r\\n<table>\\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\">\\r\\n      <img src={logoPNG} width=\\"180\\" height=\\"180\\" />\\r\\n      Microsoft Dynamics 365 is a comprehensive cloud-based business application\\r\\n      suite integrating ERP, CRM, and AI-driven insights. It streamlines operations,\\r\\n      enhances customer engagement, and provides data-driven decision-making for\\r\\n      businesses of all sizes, fostering growth and efficiency.<br /><br />Versions: `7.5.2`\\r\\n    </td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## Overview\\r\\n\\r\\nIn an earlier blog, **[Microsoft Dynamics 365 Collections](./../blog/dynamics365)** we looked into collecting accounts and entitlements from Microsoft Dynamics 365. In this article, we will discuss provisioning into Microsoft Dynamics 365 using REST APIs.\\r\\n\\r\\n## Connector Settings\\r\\n\\r\\n**Steps**\\r\\n\\r\\n1. Login to RSA Identity G&L console as System Administrator.\\r\\n2. Navigate to **AFX > Connectors**.\\r\\n3. Click on **_Create Connector_** and select the RESTful Web Service connector template.\\r\\n4. Enter the details as shown below under **General** tab.<br /><br />![Alt text](img/1.png)\\r\\n5. Click on the Settings tab and enter the required connection details.<br /><br />![Alt text](img/2.png)\\r\\n6. Click on **Add More Parameters**.\\r\\n7. Enter the details for `scope` as shown below and click **OK**.<br /><br />![Alt text](img/3.png)\\r\\n8. Provide the `https://instance.dynamics.com/.default offline_access` in the **Scope** field.\\r\\n9. Click on **Get OAuth 2.0 Access Token** and authorize.\\r\\n10. Click **OK**.\\r\\n\\r\\n## Supported Verbs\\r\\n\\r\\n### Login\\r\\n\\r\\n<Admonition type=\\"tip\\" icon=\\"\ud83d\udca1\\" title=\\"Note\\">\\r\\n  If your setup requires the client credentials flow of OAuth, it is advised to\\r\\n  use the **Login** verb.\\r\\n</Admonition>\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Login_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name | *     | Display Name  | Description                           |\\r\\n| -------------- | ----- | ------------- | ------------------------------------- |\\r\\n| ClientID       | \u2714\ufe0f    | Client ID     | Client ID for the API access          |\\r\\n| ClientSecret   | \u2714\ufe0f \ud83d\udd12 | Client Secret | Secret corresponding to the Client ID |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"verb-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"6\\">\\r\\n      <span class=\\"header-2-text\\">Command Output Parameters</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"6\\">Defaults</td>\\r\\n  </tr>\\r\\n</table>\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Command Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td>\\r\\n      <span class=\\"method-post\\">POST</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`https://login.microsoftonline.com/TENANT_ID/oauth2/token`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Headers</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/x-www-form-urlencoded`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Body</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">`grant_type=client_credentials&client_id=${ClientID}&client_secret=${ClientSecret}&Resource=https://instance.dynamics.com/`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Brief Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Detailed Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Session Token</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`access_token`</td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**. 4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Create an Account\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Create an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name |  *  | Display Name   | Mapping                              | Description                                  |\\r\\n| -------------- | --- | -------------- | ------------------------------------ | -------------------------------------------- |\\r\\n| Email          | \u2714\ufe0f  | Email Address  | $&#123;AccountTemplate.Email}        | Primary email address of user                |\\r\\n| UserID         | \u2714\ufe0f  | UserID         | $&#123;AccountTemplate.Account_Name} | The unique identifier for the user           |\\r\\n| UserName       | \u2714\ufe0f  | User Name      | $&#123;AccountTemplate.UserName}     | The name associated with the user            |\\r\\n| Alias          |     | Alias          | $&#123;AccountTemplate.Alias}        | An alternative name or nickname for the user |\\r\\n| AccountType    |     | Account Type   | $&#123;AccountTemplate.AccountType}  | The type of account associated with the user |\\r\\n| NetworkDomain  |     | Network Domain | $&#123;AccountTemplate.CostCenter}   | The network domain associated with the user  |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"verb-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"6\\"><span class=\\"header-2-text\\">Command Output Parameters</span></td>\\r\\n  </tr>\\r\\n  <tr class=\\"header-row\\">\\r\\n    <td>Parameter Name</td>\\r\\n    <td>Type</td>\\r\\n    <td>Display Name</td>\\r\\n    <td>Mapping</td>\\r\\n    <td>Description</td>    \\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>AccountName</td>\\r\\n    <td>String</td>\\r\\n    <td>Account Name</td>\\r\\n    <td>Account.Name</td>\\r\\n    <td>Account name for the new user</td>    \\r\\n  </tr>  \\r\\n</table>\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td>\u2714\ufe0f</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-post\\">POST</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`/data/SystemUsers`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/x-www-form-urlencoded`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json; charset=utf-8`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${SessionToken}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n  \\"UserID\\": \\"${UserID}\\",\\r\\n  \\"UserName\\": \\"${UserName}\\",\\r\\n  \\"Email\\": \\"${Email}\\",\\r\\n  \\"UserInfo_language\\": \\"en-us\\",\\r\\n  \\"Helplanguage\\": \\"en-us\\",\\r\\n  \\"Alias\\": \\"${Alias}\\",\\r\\n  \\"AccountType\\": \\"${AccountType}\\",\\r\\n  \\"NetworkDomain\\": \\"${NetworkDomain}\\",\\r\\n  \\"Enabled\\": \\"true\\"\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Status Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Brief Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>SUCCESS</td>\\r\\n    <td>Shouldn\'t match</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>SUCCESS</td>\\r\\n    <td>Success</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Failed ($1)</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Detailed Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`(?s)\\"detail\\"\\\\s*:\\\\s*\\"([^\\"]*)\\"`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Here\'s the details: $1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">AccountName</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Delete an Account\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Delete an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name | *   | Display Name | Mapping              | Description                    |\\r\\n| -------------- | --- | ------------ | -------------------- | ------------------------------ |\\r\\n| UserID         | \u2714\ufe0f  | Account ID   | $&#123;Account.Name} | Unique identifier for the user |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Command Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td>\u2714\ufe0f</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td>\\r\\n      <span class=\\"method-delete\\">DELETE</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`/data/SystemUsers(UserID=\'${UserID}\')`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Headers</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json; charset=utf-8`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${SessionToken}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Brief Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>SUCCESS</td>\\r\\n    <td>Shouldn\'t match</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>SUCCESS</td>\\r\\n    <td>Success</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Failed ($1)</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Detailed Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Details: $1</td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**. 4. Run the _Test Connector Capabilities_ to verify the verb.\\r\\n\\r\\n### Enable an Account\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Enable an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name |  *  | Display Name | Mapping              | Description                    |\\r\\n| -------------- | --- | ------------ | -------------------- | ------------------------------ |\\r\\n| UserID         | \u2714\ufe0f  | Account ID   | $&#123;Account.Name} | Unique identifier for the user |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td>\u2714\ufe0f</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-patch\\">PATCH</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`/data/SystemUsers(UserID=\'${UserID}\')`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json; charset=utf-8`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${SessionToken}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n  \\"Enabled\\": true\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Status Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Brief Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>SUCCESS</td>\\r\\n    <td>Shouldn\'t match</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>SUCCESS</td>\\r\\n    <td>Success</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Failed ($1)</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Detailed Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Details:  $1</td>\\r\\n  </tr>  \\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Disable an Account\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Disable an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name |  *  | Display Name | Mapping              | Description                    |\\r\\n| -------------- | --- | ------------ | -------------------- | ------------------------------ |\\r\\n| UserID         | \u2714\ufe0f  | Account ID   | $&#123;Account.Name} | Unique identifier for the user |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td>\u2714\ufe0f</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-patch\\">PATCH</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`/data/SystemUsers(UserID=\'${UserID}\')`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json; charset=utf-8`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${SessionToken}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n  \\"Enabled\\": false\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Status Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Brief Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>SUCCESS</td>\\r\\n    <td>Shouldn\'t match</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>SUCCESS</td>\\r\\n    <td>Success</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Failed ($1)</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Detailed Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Details:  $1</td>\\r\\n  </tr>  \\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Add Application Role to Account\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Add Application Role to Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name         |  *  | Display Name       | Mapping                           | Description                                                                           |\\r\\n| ---------------------- | --- | ------------------ | --------------------------------- | ------------------------------------------------------------------------------------- |\\r\\n| Account                | \u2714\ufe0f  | Account ID         | $&#123;Account.External_Id}       | The unique identifier for the user account to which security roles are being assigned |\\r\\n| SecurityRoleIdentifier | \u2714\ufe0f  | Security Role ID   | $&#123;ApplicationRole.Name}      | The unique identifier for the security role being assigned to the user                |\\r\\n| SecurityRoleName       | \u2714\ufe0f  | Security Role Name | $&#123;ApplicationRole.Role_Name} | The name of the security role being assigned to the user                              |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td>\u2714\ufe0f</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-post\\">POST</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`/data/SecurityUserRoles`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json; charset=utf-8`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${SessionToken}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n  \\"UserId\\": \\"${Account}\\",\\r\\n  \\"SecurityRoleIdentifier\\": \\"${SecurityRoleIdentifier}\\",\\r\\n  \\"SecurityRoleName\\": \\"${SecurityRoleName}\\"\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Status Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Brief Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>SUCCESS</td>\\r\\n    <td>Shouldn\'t match</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>SUCCESS</td>\\r\\n    <td>Success (Partial Match \u2714\ufe0f)</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Failed ($1)</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Detailed Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Details:  $1</td>\\r\\n  </tr>  \\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Remove Application Role from Account\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Remove Application Role from Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name         |  *  | Display Name       | Mapping                           | Description                                                                           |\\r\\n| ---------------------- | --- | ------------------ | --------------------------------- | ------------------------------------------------------------------------------------- |\\r\\n| Account                | \u2714\ufe0f  | Account ID         | $&#123;Account.External_Id}       | The unique identifier for the user account to which security roles are being assigned |\\r\\n| SecurityRoleIdentifier | \u2714\ufe0f  | Security Role ID   | $&#123;ApplicationRole.Name}      | The unique identifier for the security role being assigned to the user                |\\r\\n| SecurityRoleName       | \u2714\ufe0f  | Security Role Name | $&#123;ApplicationRole.Role_Name} | The name of the security role being assigned to the user                              |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Command Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td>\u2714\ufe0f</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td>\\r\\n      <span class=\\"method-delete\\">DELETE</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`/data/SecurityUserRoles(UserId=\'${UserId}\',SecurityRoleIdentifier=\'${SecurityRoleIdentifier}\')`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Headers</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json; charset=utf-8`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${SessionToken}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Body</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      ```json\\r\\n      {}\\r\\n      ```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Brief Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>SUCCESS</td>\\r\\n    <td>Shouldn\'t match</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>SUCCESS</td>\\r\\n    <td>Success (Partial Match \u2714\ufe0f)</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Failed ($1)</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Detailed Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Details: $1</td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**. 4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Add Application Role to a Group\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Add Application Role to a Group_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name         |  *  | Display Name       | Mapping                           | Description                                                                    |\\r\\n| ---------------------- | --- | ------------------ | --------------------------------- | ------------------------------------------------------------------------------ |\\r\\n| Group                  | \u2714\ufe0f  | Group ID           | $&#123;Group.Name}                | The unique identifier for the group to which security roles are being assigned |\\r\\n| SecurityRoleIdentifier | \u2714\ufe0f  | Security Role ID   | $&#123;ApplicationRole.Name}      | The unique identifier for the security role being assigned to the group        |\\r\\n| SecurityRoleName       | \u2714\ufe0f  | Security Role Name | $&#123;ApplicationRole.Role_Name} | The name of the security role being assigned to the group                      |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td>\u2714\ufe0f</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-post\\">POST</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`/data/SecurityUserRoles`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json; charset=utf-8`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${SessionToken}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n  \\"UserId\\": \\"${Group}\\",\\r\\n  \\"SecurityRoleIdentifier\\": \\"${SecurityRoleIdentifier}\\",\\r\\n  \\"SecurityRoleName\\": \\"${SecurityRoleName}\\"\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Status Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Brief Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>SUCCESS</td>\\r\\n    <td>Shouldn\'t match</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>SUCCESS</td>\\r\\n    <td>Success (Partial Match \u2714\ufe0f)</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Failed ($1)</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Detailed Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Details:  $1</td>\\r\\n  </tr>  \\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Remove Application Role from a Group\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Remove Application Role from a Group_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name         |  *  | Display Name       | Mapping                           | Description                                                                    |\\r\\n| ---------------------- | --- | ------------------ | --------------------------------- | ------------------------------------------------------------------------------ |\\r\\n| Group                  | \u2714\ufe0f  | Group ID           | $&#123;Group.Name}                | The unique identifier for the group to which security roles are being assigned |\\r\\n| SecurityRoleIdentifier | \u2714\ufe0f  | Security Role ID   | $&#123;ApplicationRole.Name}      | The unique identifier for the security role being assigned to the group        |\\r\\n| SecurityRoleName       | \u2714\ufe0f  | Security Role Name | $&#123;ApplicationRole.Role_Name} | The name of the security role being assigned to the group                      |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Command Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td>\u2714\ufe0f</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td>\\r\\n      <span class=\\"method-delete\\">DELETE</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`/data/SecurityUserRoles(UserId=\'${UserId}\',SecurityRoleIdentifier=\'${SecurityRoleIdentifier}\')`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Headers</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json; charset=utf-8`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${SessionToken}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Body</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      ```json\\r\\n      {}\\r\\n      ```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Brief Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>SUCCESS</td>\\r\\n    <td>Shouldn\'t match</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>SUCCESS</td>\\r\\n    <td>Success (Partial Match \u2714\ufe0f)</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Failed ($1)</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Detailed Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>(.*)</td>\\r\\n    <td>Details: $1</td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**. 4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n> <span class=\\"blog-id-text\\">CON002</span>"},{"id":"afx-mangoapps","metadata":{"permalink":"/RSA/connectors/afx-mangoapps","source":"@site/connectors/mangoapps/mangoapps-p.mdx","title":"MangoApps","description":"MangoApps is a versatile collaboration platform that enables organizations","date":"2023-09-30T00:00:00.000Z","tags":[{"inline":true,"label":"Connectors","permalink":"/RSA/connectors/tags/connectors"},{"inline":true,"label":"Provisioning","permalink":"/RSA/connectors/tags/provisioning"},{"inline":true,"label":"REST","permalink":"/RSA/connectors/tags/rest"},{"inline":true,"label":"SaaS","permalink":"/RSA/connectors/tags/saa-s"},{"inline":true,"label":"MangoApps","permalink":"/RSA/connectors/tags/mango-apps"},{"inline":true,"label":"Collaboration","permalink":"/RSA/connectors/tags/collaboration"},{"inline":true,"label":"Token","permalink":"/RSA/connectors/tags/token"}],"readingTime":54.43333333333333,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg"}],"frontMatter":{"slug":"afx-mangoapps","title":"MangoApps","date":"2023-09-30T00:00:00.000Z","authors":"pradeepkg","tags":["Connectors","Provisioning","REST","SaaS","MangoApps","Collaboration","Token"],"keywords":["Connectors","Provisioning","REST","SaaS","MangoApps","Collaboration","Token"]},"unlisted":false,"lastUpdatedAt":1715729236000,"prevItem":{"title":"Microsoft Dynamics 365","permalink":"/RSA/connectors/afx-dynamics365"}},"content":"import logoPNG from \\"@site/static/img/logos/MangoApps - 180x180.png\\";\\r\\nimport LinkSvg from \\"../../iconmonstr-link-thin.svg\\";\\r\\nimport Admonition from \\"@theme/Admonition\\";\\r\\n\\r\\n<table>\\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\">\\r\\n        <img src={logoPNG} width=\\"180\\" height=\\"180\\" />\\r\\n        MangoApps is a versatile collaboration platform that enables organizations\\r\\n        to streamline communication and enhance productivity. It offers a comprehensive\\r\\n        suite of features, including instant messaging, file sharing, task management,\\r\\n        and team collaboration tools. With its intuitive interface and robust functionality,\\r\\n        MangoApps empowers teams to connect, share ideas, and work together seamlessly\\r\\n        across departments and geographies.<br /><br />Versions: `7.5.2`\\r\\n    </td>\\r\\n  </tr>\\r\\n</table>\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## Overview\\r\\n\\r\\nIn an earlier blog, **[MangoApps Collections](./../blog/mangoapps)** we looked into collecting accounts and entitlements from MangoApps. In this article, we will discuss provisioning into MangoApps using REST APIs.\\r\\n\\r\\n## Connector Settings\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA Identity G&L console as System Administrator.\\r\\n2. Navigate to **AFX > Connectors**.\\r\\n3. Click on **_Create Connector_** and select the RESTful Web Service connector template.\\r\\n4. Enter the details as shown below under **General** tab.<br /><br />![Alt text](img/1.png)\\r\\n5. Click on the Settings tab and enter the required connection details.<br /><br />![Alt text](img/2.png)\\r\\n6. Click **OK**.\\r\\n\\r\\n## Supported Verbs\\r\\n### Login\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Login_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name | *     | Display Name  | Description                           |\\r\\n| -------------- | ----- | ------------- | ------------------------------------- |\\r\\n| Username       | \u2714\ufe0f    | Username      | Service account user name             |\\r\\n| Password       | \u2714\ufe0f \ud83d\udd12 | Password      | Password for the service account      |\\r\\n| ClientID       | \u2714\ufe0f    | Client ID     | Client ID for the API access          |\\r\\n| ClientSecret   | \u2714\ufe0f \ud83d\udd12 | Client Secret | Secret corresponding to the Client ID |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"verb-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"6\\">\\r\\n      <span class=\\"header-2-text\\">Command Output Parameters</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"6\\">Defaults</td>\\r\\n  </tr>\\r\\n</table>\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Command Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td>\\r\\n      <span class=\\"method-post\\">POST</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`oauth2/token.json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Headers</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/x-www-form-urlencoded`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Request Body</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">`client_id=${ClientID}&client_secret=${ClientSecret}&grant_type=password&username=${Username}&password=${Password}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Status Code</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Brief Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`error`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Detailed Response</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`error_description`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n      <span class=\\"header-2-text\\">Session Token</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`access_token`</td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**. 4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Create an Account\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Create an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name | *   | Display Name  | Mapping                            | Description                            |\\r\\n| -------------- | --- | ------------- | ---------------------------------- | -------------------------------------- |\\r\\n| Email          | \u2714\ufe0f  | Email Address | $&#123;AccountTemplate.Email}      | Primary email address of user          |\\r\\n| FName          | \u2714\ufe0f  | First Name    | $&#123;AccountTemplate.FirstName}  | A given name of a person               |\\r\\n| LName          | \u2714\ufe0f  | Last Name     | $&#123;AccountTemplate.LastName}   | Surname of a person                    |\\r\\n| EmployeeID     | \u2714\ufe0f  | Employee ID   | $&#123;AccountTemplate.EmployeeID} | User\'s employee ID in the organization |\\r\\n| Title          |     | Title         | $&#123;AccountTemplate.Title}      | Job title for the user                 |\\r\\n| CostCenter     |     | Cost Center   | $&#123;AccountTemplate.CostCenter} | User\'s cost center                     |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"verb-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"6\\"><span class=\\"header-2-text\\">Command Output Parameters</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"6\\">Defaults</td>\\r\\n  </tr>\\r\\n</table>\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td>\u2714\ufe0f</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-post\\">POST</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`api/v2/websync/users.json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/x-www-form-urlencoded`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json; charset=utf-8`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${SessionToken}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n   \\"email\\" : \\"${Email}\\" \\r\\n   \\"firstName\\" : \\"${FName}\\" \\r\\n   \\"lastName\\" : \\"${LName}\\" \\r\\n   \\"usertype\\" : \\"Network User\\" \\r\\n   \\"title\\" : \\"${Title}\\" \\r\\n   \\"employeeid\\" : \\"${EmployeeID}\\" \\r\\n   \\"costcenter\\" : \\"${CostCenter}\\" \\r\\n   \\"teammemberstatus\\" : \\"Member\\" \\r\\n} \\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Status Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Brief Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`message`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Detailed Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Status Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Content</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Message</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Detail</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Add Account to Group\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Add Account to Group_ and configure as shown below.\\r\\n<Admonition type=\\"info\\">\\r\\n The MangoApps APIs to add account to group does not support passing account\\r\\n name (email) and hence we cannot use this in conjunction with Create\\r\\n Account. Create account does not return account ID and hence will have to\\r\\n wait for data collection.\\r\\n</Admonition>\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name | *   | Display Name | Mapping                     | Description                     |\\r\\n| -------------- | --- | ------------ | --------------------------- | ------------------------------- |\\r\\n| AccountId      | \u2714\ufe0f  | Account ID   | $&#123;Account.External_Id} | Unique identifier for the user  |\\r\\n| GroupId        | \u2714\ufe0f  | Group ID     | $&#123;Group.External_Id}   | Unique identifier for the group |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td>\u2714\ufe0f</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-put\\">PUT</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`api/groups/${GroupId}/members/manage.json?send_member_list=false`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/x-www-form-urlencoded`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json; charset=utf-8`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${SessionToken}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n  \\"ms_request\\": {\\r\\n    \\"group\\": {\\r\\n      \\"add_member_ids\\": [\\r\\n        \\"${AccountId}\\"\\r\\n      ],\\r\\n      \\"generate_feed\\": \\"Y\\"\\r\\n    }\\r\\n  }\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Status Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Brief Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`message`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Detailed Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Remove Account from Group\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Remove Account from Group_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name | *   | Display Name | Mapping                     | Description                     |\\r\\n| -------------- | --- | ------------ | --------------------------- | ------------------------------- |\\r\\n| AccountId      | \u2714\ufe0f  | Account ID   | $&#123;Account.External_Id} | Unique identifier for the user  |\\r\\n| GroupId        | \u2714\ufe0f  | Group ID     | $&#123;Group.External_Id}   | Unique identifier for the group |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td>\u2714\ufe0f</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-put\\">PUT</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`api/groups/${GroupId}/members/manage.json?send_member_list=false`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/x-www-form-urlencoded`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json; charset=utf-8`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${SessionToken}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n  \\"ms_request\\": {\\r\\n    \\"group\\": {\\r\\n      \\"remove_member_ids\\": [\\r\\n        \\"${AccountId}\\"\\r\\n      ],\\r\\n      \\"generate_feed\\": \\"Y\\"\\r\\n    }\\r\\n  }\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Status Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Brief Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`message`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Detailed Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n### Update an Account\\r\\n\\r\\n**Steps**\\r\\n1. Edit the connector and navigate to _Capabilities_ tab.\\r\\n2. Click on _Update an Account_ and configure as shown below.\\r\\n\\r\\n**Command Input Parameters**\\r\\n\\r\\n| Parameter Name | *   | Display Name  | Mapping                 | Description                            |\\r\\n| -------------- | --- | ------------- | ----------------------- | -------------------------------------- |\\r\\n| Email          | \u2714\ufe0f  | Email Address | $&#123;User.Email}      | Primary email address of user          |\\r\\n| FName          |     | First Name    | $&#123;User.FirstName}  | A given name of a person               |\\r\\n| LName          |     | Last Name     | $&#123;User.LastName}   | Surname of a person                    |\\r\\n| EmployeeID     |     | Employee ID   | $&#123;User.EmployeeID} | User\'s employee ID in the organization |\\r\\n| Title          |     | Title         | $&#123;User.Title}      | Job title for the user                 |\\r\\n| CostCenter     |     | Cost Center   | $&#123;User.CostCenter} | User\'s cost center                     |\\r\\n\\r\\n\ud83d\udd12 = Encrypted \u2714\ufe0f = Required\\r\\n\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Command Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Generate SessionToken</td>\\r\\n    <td>\u2714\ufe0f</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-post\\">POST</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Path</td>\\r\\n    <td>`api/v2/websync/users.json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Content-Type</td>\\r\\n    <td>`application/x-www-form-urlencoded`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json; charset=utf-8`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Authorization</td>\\r\\n    <td>`Bearer ${SessionToken}`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Body</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">\\r\\n```json\\r\\n{\\r\\n  \\"email\\": \\"${Email}\\",\\r\\n  \\"firstName\\": \\"${FName}\\",\\r\\n  \\"lastName\\": \\"${FName}\\",\\r\\n  \\"usertype\\": \\"Network User\\",\\r\\n  \\"title\\": \\"${Title}\\",\\r\\n  \\"employeeid\\": \\"${EmployeeID}\\",\\r\\n  \\"costcenter\\": \\"${CostCenter}\\",\\r\\n  \\"teammemberstatus\\": \\"Member\\"\\r\\n}\\r\\n```\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Status Code</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Status Code</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\">Pattern</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^[23]\\\\d{2}$</td>\\r\\n    <td>0</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>^([45])\\\\d{2}$</td>\\r\\n    <td>$1</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Brief Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td>`message`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Detailed Response</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression Type</td>\\r\\n    <td>Json Path</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Expression</td>\\r\\n    <td></td>\\r\\n  </tr>\\r\\n</table>\\r\\n3. Click **OK**.\\r\\n4. Run the *Test Connector Capabilities* to verify the verb.\\r\\n\\r\\n[^API]: <LinkSvg /> https://yourinstance.com/apidoc/\\r\\n\\r\\n## References\\r\\n- [MangoApps Homepage](https://www.mangoapps.com/)\\r\\n\\r\\n> <span class=\\"blog-id-text\\">CON001</span>"}]}}')}}]);