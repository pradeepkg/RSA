"use strict";(self.webpackChunkdocku=self.webpackChunkdocku||[]).push([[7095],{97350:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"redshift","metadata":{"permalink":"/RSA/blog/redshift","source":"@site/blog/collections/redshift/redshift.mdx","title":"Amazon Redshift","description":"Amazon Redshift is a data warehouse product which forms part of the larger cloud-computing platform Amazon Web Services.Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u274c | Entitlements \u274c","date":"2023-10-10T00:00:00.000Z","tags":[{"inline":true,"label":"Collections","permalink":"/RSA/blog/tags/collections"},{"inline":true,"label":"SQL","permalink":"/RSA/blog/tags/sql"},{"inline":true,"label":"Database","permalink":"/RSA/blog/tags/database"},{"inline":true,"label":"Amazon","permalink":"/RSA/blog/tags/amazon"},{"inline":true,"label":"AWS","permalink":"/RSA/blog/tags/aws"},{"inline":true,"label":"Redshift","permalink":"/RSA/blog/tags/redshift"}],"readingTime":15.233333333333333,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg","page":null}],"frontMatter":{"slug":"redshift","title":"Amazon Redshift","date":"2023-10-10T00:00:00.000Z","authors":"pradeepkg","tags":["Collections","SQL","Database","Amazon","AWS","Redshift"],"keywords":["Collections","SQL","Database","Amazon","AWS","Redshift"],"draft":false},"unlisted":false,"lastUpdatedAt":1718029732000,"nextItem":{"title":"Workday","permalink":"/RSA/blog/workday"}},"content":"import logoPNG from \'@site/static/img/logos/Amazon Redshift - 180x180.png\';\\r\\nimport LinkSvg from \'../../iconmonstr-link-thin.svg\';\\r\\nimport Admonition from \\"@theme/Admonition\\";\\r\\n\\r\\n<table> \\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\"><img src={logoPNG} width=\\"180\\" height=\\"180\\"/>Amazon Redshift is a data warehouse product which forms part of the larger cloud-computing platform Amazon Web Services.<br /><br />Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u274c | Entitlements \u274c</td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n<Admonition type=\\"note\\">\\r\\nFor the purpose of this integration, we will use PostgreSQL JDBC driver, since Amazon Redshift officially supports this connection option. [Configuring a JDBC connection - Amazon Redshift](https://docs.aws.amazon.com/redshift/latest/mgmt/configure-jdbc-connection.html)\\r\\n</Admonition>\\r\\n\\r\\n## Application\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Application**.\\r\\n3. Click on **Create Application** and select **Other Application**.\\r\\n4. Enter the details as shown below.<br />![img](./img/1.png)\\r\\n5. Click **Finish**.\\r\\n---\\r\\n## Account Collector\\r\\nThis section explains the process for configuring an account collector for the Amazon Redshift application. We will use the PostgreSQL database collector for this purpose.\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Applications**.\\r\\n3. Click on **Amazon Redshift**.\\r\\n4. Navigate to **Collectors** tab and click on **Create Account Collector**. Enter the details as shown below.<br /><br />![img](./img/2.png)\\r\\n5. Click **Next** and enter the Oracle database details. Use the *Test Connection* to make sure the connection details are accurate.<br /><br />![img](./img/3.png)\\r\\n6. Click Next. Select the appropriate data that you intend to collect.<br /><br />![img](./img/4.png)\\r\\n7. Click **Next**. On the **Account Data** page, enter the following query to collect account information.\\r\\n```sql\\r\\n-- All Users\\r\\nSELECT pg_user.usename AS accountID\\r\\nFROM pg_user\\r\\nGROUP BY 1;\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/5.png)<br />\\r\\n8. Click **Next**. On the **User Account Mappings Data** configuration page enter the following query to map the Amazon Redshift account to user identity.\\r\\n```sql\\r\\n-- All Users\\r\\nSELECT pg_user.usename AS accountID,\\r\\n       pg_user.usename AS userID\\r\\nFROM pg_user\\r\\nGROUP BY 1;\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/6.png)<br />\\r\\n9. Click **Next**. In the **Group Data** configuration section enter the following query to collect groups from Amazon Redshift.\\r\\n```sql\\r\\n-- All Groups\\r\\nSELECT pg_group.groname AS groupName\\r\\nFROM pg_group\\r\\nGROUP BY 1;\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/7.png)<br />\\r\\n10. In the **Account Membership Data** configuration section enter the following query to collect groups membership information from Amazon Redshift.\\r\\n```sql\\r\\n-- Users and Groups\\r\\nSELECT pg_group.groname AS groupName,\\r\\n       pg_user.usename AS accountID\\r\\nFROM pg_group, pg_user\\r\\nWHERE pg_user.usesysid = ANY (pg_group.grolist)\\r\\nGROUP BY 1,2;\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\n11. Click **Next**. In the **User Resolution Rules**, map the user to account.<br /><br />![img](img/8.png)\\r\\n12. Click **Next**. In the **Member Account Resolution Rules**, map the account collector.<br /><br />![img](img/9.png)\\r\\n13. Click **Finish**. Use the *Test* function to make sure the configurations are accurate.\\r\\n\\r\\n> <span class=\\"blog-id-text\\">COL033</span>"},{"id":"workday","metadata":{"permalink":"/RSA/blog/workday","source":"@site/blog/collections/workday/workday.mdx","title":"Workday","description":"Workday is a cloud-based software platform that offers financial management and human capital management services. It streamlines HR, payroll, and finance processes, providing businesses with efficient tools for workforce management and financial planning.Identities \u2714\ufe0f | Accounts \u274c | Groups \u274c | App Roles \u274c | Entitlements \u274c","date":"2023-10-10T00:00:00.000Z","tags":[{"inline":true,"label":"Collections","permalink":"/RSA/blog/tags/collections"},{"inline":true,"label":"REST","permalink":"/RSA/blog/tags/rest"},{"inline":true,"label":"Workday","permalink":"/RSA/blog/tags/workday"},{"inline":true,"label":"HCM","permalink":"/RSA/blog/tags/hcm"},{"inline":true,"label":"RaaS","permalink":"/RSA/blog/tags/raa-s"},{"inline":true,"label":"Identities","permalink":"/RSA/blog/tags/identities"}],"readingTime":14.833333333333334,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg","page":null}],"frontMatter":{"slug":"workday","title":"Workday","date":"2023-10-10T00:00:00.000Z","authors":"pradeepkg","tags":["Collections","REST","Workday","HCM","RaaS","Identities"],"keywords":["Collections","REST","Workday","HCM","RaaS","Identities"],"draft":false},"unlisted":false,"lastUpdatedAt":1715729236000,"prevItem":{"title":"Amazon Redshift","permalink":"/RSA/blog/redshift"},"nextItem":{"title":"RSA Authentication Manager","permalink":"/RSA/blog/securid"}},"content":"import logoPNG from \'@site/static/img/logos/Workday - 180x180.png\';\\r\\nimport LinkSvg from \'../../iconmonstr-link-thin.svg\';\\r\\nimport Admonition from \\"@theme/Admonition\\";\\r\\n\\r\\n<table> \\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\"><img src={logoPNG} width=\\"180\\" height=\\"180\\"/>Workday is a cloud-based software platform that offers financial management and human capital management services. It streamlines HR, payroll, and finance processes, providing businesses with efficient tools for workforce management and financial planning.<br /><br />Identities \u2714\ufe0f | Accounts \u274c | Groups \u274c | App Roles \u274c | Entitlements \u274c</td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n<Admonition type=\\"note\\">\\r\\nThis integration is based on the ***Reporting as a Service (RaaS)*** offered by Workday and will use the out-of-the-box generic REST collectors to collect data. Workday RaaS allows greater flexibility in controlling what data needs to be collected from third party tools like RSA G&L without exposing sensitive data.\\r\\n</Admonition>\\r\\n\\r\\n## Application\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Application**.\\r\\n3. Click on **Create Application** and select **Other Application**.\\r\\n4. Enter the details as shown below.<br />![img](./img/1.png)\\r\\n5. Click **Finish**.\\r\\n---\\r\\n## Identity Collector\\r\\nThis section explains the process for configuring an account collector for the Workday (RaaS) application. We will use the RSA G&L Generic REST collector for this purpose.   \\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Applications**.\\r\\n3. Click on **Workday**.\\r\\n4. Navigate to **Collectors** tab and click on **Create Identity Collector**. Enter the details as shown below.<br /><br />![img](./img/2.png)\\r\\n5. Click **Next** and enter the connection details.<br /><br />![img](img/3.png)\\r\\n6. Click **Next**. On the **User Data** page, enter the following configurations.<br /><br />![Alt text](img/4.png)<br />![Alt text](img/5.png)\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Method</td>\\r\\n    <td><span class=\\"method-get\\">GET</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>URL</td>\\r\\n    <td>Report URL</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Query Parameters</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>format</td>\\r\\n    <td>`json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Accept</td>\\r\\n    <td>`application/json`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Response Mappings</span></td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>UserId</td>\\r\\n    <td>`$.Report_Entry[*].EmployeeID`</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>Company</td>\\r\\n    <td>`$.Report_Entry[*].Company`</td>\\r\\n  </tr>\\r\\n</table>\\r\\n7. Click **Next**. On the **Map Collector Attributes to User Attributes** page, enter the following configurations.<br /><br />![Alt text](img/6.png)\\r\\n8. Click **Next**. On the **Attribute Evaluation** page, enter the following configurations.<br /><br />![Alt text](img/7.png)\\r\\n9. Click **Finish**. Use the *Test* function to make sure the configurations are accurate.\\r\\n---\\r\\n## Workday : Setup\\r\\nWorkday recommends using an Integration System User (ISU) for integration using third party services. RaaS requires basic authentication for REST API invocation.\\r\\n\\r\\nRefer to [Workato connectors - Workday integration connection | Workato Docs](https://docs.workato.com/connectors/workday/connection_setup.html) for more information on setup.\\r\\n\\r\\n## Troubleshooting\\r\\n\\r\\n> **Problem:**  The REST API call returns 400 : Validation error occurred. Report not\\r\\n>\\r\\n> **Solution:** Ensure that the ISU user that is used to collect is the owner of the Report in RaaS.\\r\\n\\r\\n> <span class=\\"blog-id-text\\">COL032</span>"},{"id":"securid","metadata":{"permalink":"/RSA/blog/securid","source":"@site/blog/collections/securid/securid.mdx","title":"RSA Authentication Manager","description":"RSA Authentication Manager is a robust solution for secure access control. It employs RSA\'s proprietary SecureID tokens, offering two-factor authentication. Users enter a unique token-generated code along with their password, enhancing security by requiring both something they know and something they have. The system ensures secure access to networks and applications.Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u274c | Entitlements \u2714\ufe0f","date":"2023-10-07T00:00:00.000Z","tags":[{"inline":true,"label":"Collections","permalink":"/RSA/blog/tags/collections"},{"inline":true,"label":"SQL","permalink":"/RSA/blog/tags/sql"},{"inline":true,"label":"RSA","permalink":"/RSA/blog/tags/rsa"},{"inline":true,"label":"Authentication Manager","permalink":"/RSA/blog/tags/authentication-manager"},{"inline":true,"label":"SecurID","permalink":"/RSA/blog/tags/secur-id"},{"inline":true,"label":"Authentication","permalink":"/RSA/blog/tags/authentication"},{"inline":true,"label":"Database","permalink":"/RSA/blog/tags/database"}],"readingTime":58.266666666666666,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg","page":null}],"frontMatter":{"slug":"securid","title":"RSA Authentication Manager","date":"2023-10-07T00:00:00.000Z","authors":"pradeepkg","tags":["Collections","SQL","RSA","Authentication Manager","SecurID","Authentication","Database"],"keywords":["Collections","SQL","RSA","Authentication Manager","SecurID","Authentication","Database"],"draft":false},"unlisted":false,"lastUpdatedAt":1718029732000,"prevItem":{"title":"Workday","permalink":"/RSA/blog/workday"},"nextItem":{"title":"IBM iSeries (AS400)","permalink":"/RSA/blog/as400"}},"content":"import logoPNG from \'@site/static/img/logos/RSA - 180x180.png\';\\r\\nimport LinkSvg from \'../../iconmonstr-link-thin.svg\';\\r\\nimport Admonition from \\"@theme/Admonition\\";\\r\\n\\r\\n<table> \\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\"><img src={logoPNG} width=\\"180\\" height=\\"180\\"/>RSA Authentication Manager is a robust solution for secure access control. It employs RSA\'s proprietary SecureID tokens, offering two-factor authentication. Users enter a unique token-generated code along with their password, enhancing security by requiring both something they know and something they have. The system ensures secure access to networks and applications.<br /><br />Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u274c | Entitlements \u2714\ufe0f</td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n**Admin Roles** in RSA Authentication Manager define permissions and responsibilities for system administrators, allowing them to manage user authentication and security settings.\\r\\n\\r\\n**Tokens** in RSA Authentication Manager are physical or software-based devices that generate one-time passcodes. Users enter these passcodes during authentication, enhancing security.\\r\\n\\r\\n**Risk-Based Authentication** in RSA Authentication Manager evaluates various factors such as user location, device, and behavior patterns to assess the risk level. Based on this assessment, it adapts the authentication process, adding or reducing security measures accordingly to mitigate potential risks.\\r\\n\\r\\n<Admonition type=\\"info\\" title=\\"Assumptions\\">\\r\\n1. The PostgreSQL JDBC driver has been uploaded via the admin console.\\r\\n2. The RSA Authentication Manager certificate `RSAAMTrustedRootSSLCA.crt` has been imported via admin console.\\r\\n3. To enable RSA Identity G&L to connect to PostgreSQL database, a <u>read only user</u> has to be created using the `rsautil manage-readonly-dbusers` tool. Refer to SQL Access to the RSA Authentication Manager Database section in the RSA Authentication Manager 8.x Developer\'s Guide for detailed information.\\r\\n</Admonition>\\r\\n\\r\\n## Application\\r\\nThe first step in collecting accounts, tokens information from RSA Authentication Manager is to create a placeholder application to store this information in RSA Identity G&L.\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Application**.\\r\\n3. Click on **Create Application** and select **Other Application**.\\r\\n4. Enter the details as shown below. If you intend to collect the account status and/or the locked status of the account configure the highlighted options.<br />![img](./img/1.png)\\r\\n5. Click **Finish**.\\r\\n---\\r\\n## Account Collector\\r\\nThis section explains the process for configuring a account collector for the RSA Authentication Manager application. We will use the PostgreSQL database collector for this purpose. \\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Applications**.\\r\\n3. Click on **RSA Authentication Manager**.\\r\\n4. Navigate to **Collectors** tab and click on **Create Account Collector**. Enter the details as shown below.<br /><br />![img](./img/2.png)\\r\\n5. Click **Next** and enter the PostgreSQL database connection details. Use the Test Connection to make sure the connection details are accurate.<br /><br />![img](img/3.png)<br />\\r\\n6. Click **Next**. Select the appropriate data that you intend to collect. For the purpose of illustration we will collect accounts, groups and user to account mapping from RSA Authentication Manager.<br /><br />![img](img/4.png)\\r\\n7. Click **Next**. On the **Account Data** page, enter the following query to collect account information.\\r\\n```sql\\r\\nSELECT DISTINCT principalData.loginuid AS account\\r\\n     ,login.login_date AS login_date\\r\\n     ,CONCAT (principal.first_name, \' \', principal.last_name) AS full_name\\r\\n     --1 = enabled, 2 = disabled \\r\\n     ,CASE\\r\\n        WHEN principalData.lockout_flag = \'1\' THEN \'1\'\\r\\n        ELSE \'0\'\\r\\n      END AS account_locked\\r\\n     ,securityDomain.NAME AS securityDomain_domain\\r\\n     ,CASE\\r\\n        WHEN principalData.security_ques_answers IS NULL THEN \'0\'\\r\\n        ELSE \'1\'\\r\\n      END AS securityDomain_questions,\\r\\n       --1 = user is enabled, 0 = user is disabled\\r\\n     CASE\\r\\n        WHEN principalData.enable_flag = \'1\' THEN \'0\'\\r\\n        ELSE \'1\'\\r\\n      END AS account_status     \\r\\n      --1 = user has administrative roles assigned\\r\\n       --0 = user does not have any administrative roles assigned\\r\\n     ,principalData.administrator_flag AS privileged\\r\\n--Basic user settings\\r\\nFROM IMS_PRINCIPAL principal\\r\\n--Detailed information about the user\\r\\nFULL JOIN IMS_PRINCIPAL_DATA principalData\\r\\n     ON principal.loginuid = principalData.loginuid\\r\\n--Information about the security domain\\r\\nJOIN IMS_SECURITY_DOMAIN securityDomain\\r\\n     ON principalData.owner_id = securityDomain.id\\r\\n--Last logon date and time of the user      \\r\\nJOIN IMS_PRINCIPAL_LOGIN_DATE login\\r\\n     ON principalData.id = login.principal_id \u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/5.png)<br />\\r\\n8. Click **Next**. On the **User Account Mappings Data** configuration page enter the following query to map the RSA Authentication Manager account to user identity.\\r\\n```sql\\r\\nSELECT DISTINCT\\r\\n     loginuid,loginuid AS account\\r\\nFROM \\r\\n     rsa_rep.IMS_PRINCIPAL_DATA \\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/6.png)<br />\\r\\n9. Click **Next**. In the **Group Data** configuration section enter the following query to collect groups from RSA Authentication Manager.\\r\\n```sql\\r\\nSELECT DISTINCT\\r\\n     (name) AS \\"group\\"\\r\\n     ,description\\r\\nFROM\\r\\n     rsa_rep.IMS_GROUP_DATA\\r\\n-- Optional Filter \\r\\nWHERE  \\r\\n     identity_src_id = \'The Identity Source ID\'\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/7.png)<br />\\r\\n10. In the **Account Membership Data** configuration section enter the following query to collect groups membership information from RSA Authentication Manager.\\r\\n```sql\\r\\nSELECT \\r\\n     accounts.loginuid AS account\\r\\n    ,GROUPS.name AS \\"group\\"\\r\\nFROM rsa_rep.IMS_PRINCIPAL_DATA accounts\\r\\nJOIN rsa_rep.IMS_PRINCIPAL_GROUP groupMembership\\r\\n     ON accounts.id = groupMembership.principal_id\\r\\nJOIN rsa_rep.IMS_GROUP_DATA GROUPS\\r\\n     ON groupMembership.group_id = GROUPS.id\\r\\n-- Optional Filter\\r\\nWHERE\\r\\n     GROUPS.identity_src_id = \'The Identity Source Identitfier\' \\r\\n```\\r\\n11. Click **Next**. In the **User Resolution Rules**, map the user to account\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <th>Target Collector</th>\\r\\n    <th>User Attribute</th>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <th>Users</th>\\r\\n    <th>User Id</th>\\r\\n  </tr>\\r\\n</table>\\r\\n12. Click **Next**. In the **Member Account Resolution Rules**, map the account collector.\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <th>Target Collector</th>\\r\\n    <th>Account Attribute</th>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <th>RSA Authentication Manager ADC</th>\\r\\n    <th>Account Name</th>\\r\\n  </tr>\\r\\n</table>\\r\\n13. Click **Finish**. Use the *Test* function to make sure the configurations are accurate.\\r\\n---\\r\\n## Entitlement Collector : Admin Roles\\r\\nThis section explains the process for configuring a entitlement collector to collect admin roles from RSA Authentication Manager application. We will use the PostgreSQL database collector for this purpose.\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as AveksaAdmin.\\r\\n2. Navigate to **Resources > Applications**.\\r\\n3. Click on **RSA Authentication Manager**.\\r\\n4. Navigate to **Collectors** tab and click on ***Create Entitlement Collector***. Enter the details as shown below.<br /><br />![Alt text](img/8.png)\\r\\n5. Click **Next** and enter the database connection details as shown in Step 5 of [Account Collector](#account-collector).\\r\\n6. Click **Next**. Select the data types that the collector will be collecting from RSA Authentication Manager.<br /><br />![Alt text](img/9.png)\\r\\n7. Click **Next**. On the **General Column Names**, map the attribute names.<br /><br />![Alt text](img/10.png)\\r\\n8. Click **Next**. Under **Application Role Data** section, use the following query to collect admin roles from RSA Authentication Manager.\\r\\n```sql\\r\\nSELECT \\r\\n     name AS AppRole\\r\\n     ,description\\r\\nFROM\\r\\n     IMS_ADMIN_ROLE\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/11.png)<br />\\r\\n9. Click **Next**. On the **Account Data** section, enter the query below to collect mappings for account to admin roles.\\r\\n```sql\\r\\nSELECT \\r\\n     users.loginuid AS Account\\r\\n     ,ROLES.name AS AppRole\\r\\nFROM IMS_PRINCIPAL_DATA users\\r\\nJOIN IMS_PRINCIPAL_ADMIN_ROLE admins\\r\\n     ON users.id = admins.principal_id\\r\\nJOIN IMS_ADMIN_ROLE ROLES\\r\\n     ON admins.admin_role_id = ROLES.id\\r\\n```\\r\\n10. Click **Next**. In the User Evaluation, map the account to the ADC.\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <th>Associated account collector</th>\\r\\n    <th>Account value evaluates to</th>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <th>RSA Authentication Manager ADC</th>\\r\\n    <th>Account Name</th>\\r\\n  </tr>\\r\\n</table>\\r\\n11. Click **Next** and then click **Finish**. Use the *Test* function to make sure the configurations are accurate.\\r\\n---\\r\\n## Entitlement Collector : Tokens\\r\\nThis section explains the process for configuring a entitlement collector to collect tokens as account entitlements from RSA Authentication Manager application. We will use the PostgreSQL database collector for this purpose.\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as AveksaAdmin.\\r\\n2. Navigate to **Resources > Applications**.\\r\\n3. Click on **RSA Authentication Manager**.\\r\\n4. Navigate to **Collectors** tab and click on ***Create Entitlement Collector***. Enter the details as shown below.<br /><br />![Alt text](img/12.png)\\r\\n5. Click **Next** and enter the database connection details as shown in Step 5 of [Account Collector](#account-collector).\\r\\n6. Click **Next**. Select the data types that the collector will be collecting from RSA Authentication Manager.<br /><br />![Alt text](img/13.png)\\r\\n7. Click **Next**. On the **General Column Names**, map the attribute names.<br /><br />![Alt text](img/14.png)\\r\\n8. Click **Next**. \\r\\n9. Click **Next** on the **Resource Data** page.\\r\\n10. Click **Next**. Under **Resource Entitlement Data** section, use the following query to collect tokens information from RSA Authentication Manager.\\r\\n```sql\\r\\nSELECT \\r\\n     tokens.serial_number AS RESOURCE\\r\\n     ,CASE\\r\\n        WHEN tokens.token_type = \'0\' THEN \'Std Card\'\\r\\n        WHEN tokens.token_type = \'1\' THEN \'PIN Pad\'\\r\\n        WHEN tokens.token_type = \'2\' THEN \'SID 700\'\\r\\n        WHEN tokens.token_type = \'4\' THEN \'Soft Token\'\\r\\n        WHEN tokens.token_type = \'9\' THEN \'SID 800\'\\r\\n        WHEN tokens.token_type = \'10\' THEN \'Flex Card\'\\r\\n      END               AS Action\\r\\n     ,tokens.token_shutdown_date AS Expiration\\r\\n     ,tokenDetails.last_login_date     AS lastlogin,\\r\\n     CASE\\r\\n        WHEN tokens.is_enabled = \'true\' OR tokens.is_enabled = \'t\' THEN \'true\'\\r\\n        ELSE \'false\'\\r\\n     END as tokenEnabled\\r\\nFROM   AM_TOKEN tokens\\r\\n     ,AM_TOKEN_OOB tokenDetails\\r\\nWHERE  tokens.id = tokenDetails.am_token_id\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\n11. Click **Next**. On the **Account Data** section, enter the query below to collect mappings for account to tokens.\\r\\n```sql\\r\\nSELECT users.loginuid   AS Account\\r\\n     ,serial_number AS RESOURCE\\r\\n     ,CASE\\r\\n        WHEN token_type = \'0\' THEN \'Std Card\'\\r\\n        WHEN token_type = \'1\' THEN \'PIN Pad\'\\r\\n        WHEN token_type = \'2\' THEN \'SID 700\'\\r\\n        WHEN token_type = \'4\' THEN device.family_key\\r\\n        WHEN token_type = \'9\' THEN \'SID 800\'\\r\\n        WHEN token_type = \'10\' THEN \'Flex Card\'\\r\\n      END         AS Action\\r\\nFROM IMS_PRINCIPAL_DATA users\\r\\nJOIN AM_TOKEN tokens\\r\\n     ON users.id = tokens.principal_id\\r\\nLEFT JOIN AM_SW_TOKEN_DEVICE_TYPES device\\r\\n     ON tokens.sw_token_device_type_id = device.id\\r\\n```\\r\\n12. Click **Next**. In the Account Evaluation, map the account to the ADC.\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <th>Associated account collector</th>\\r\\n    <th>Account value evaluates to</th>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <th>RSA Authentication Manager ADC</th>\\r\\n    <th>Account Name</th>\\r\\n  </tr>\\r\\n</table>\\r\\n13. Click **Next** and then click **Finish**. Use the *Test* function to make sure the configurations are accurate.\\r\\n---\\r\\n## Entitlement Collector : Risk Based Authentication\\r\\nThis section explains the process for configuring a entitlement collector to collect information regarding Risk Based Authentication (RBA) being enabled for an account from RSA Authentication Manager application. We will use the PostgreSQL database collector for this purpose.\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as AveksaAdmin.\\r\\n2. Navigate to **Resources > Applications**.\\r\\n3. Click on **RSA Authentication Manager**.\\r\\n4. Navigate to **Collectors** tab and click on ***Create Entitlement Collector***. Enter the details as shown below.<br /><br />![Alt text](img/15.png)\\r\\n5. Click **Next** and enter the database connection details as shown in Step 5 of [Account Collector](#account-collector).\\r\\n6. Click **Next**. Select the data types that the collector will be collecting from RSA Authentication Manager.<br /><br />![Alt text](img/16.png)\\r\\n7. Click **Next**. On the **General Column Names**, map the attribute names.<br /><br />![Alt text](img/17.png)\\r\\n8. Click **Next**. \\r\\n9. Click **Next** on the **Resource Data** page.\\r\\n10. Click **Next**. On the **Account Data** section, enter the query below to collect mappings for account to tokens.\\r\\n```sql\\r\\nSELECT loginuid AS Account\\r\\n     ,\'RBA\'   AS RESOURCE\\r\\n     ,CASE\\r\\n        WHEN SUBSTR (authenticator_bit_flags, 7, 1) = \'1\' THEN \'Yes\'\\r\\n        ELSE \'No\'\\r\\n     END     AS Action\\r\\nFROM\\r\\n     IMS_PRINCIPAL_DATA\\r\\n```\\r\\n11. Click **Next**. In the Account Evaluation, map the account to the ADC.\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <th>Associated account collector</th>\\r\\n    <th>Account value evaluates to</th>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <th>RSA Authentication Manager ADC</th>\\r\\n    <th>Account Name</th>\\r\\n  </tr>\\r\\n</table>\\r\\n12. Click **Next** and then click **Finish**. Use the *Test* function to make sure the configurations are accurate.\\r\\n\\r\\n> <span class=\\"blog-id-text\\">COL027</span>"},{"id":"as400","metadata":{"permalink":"/RSA/blog/as400","source":"@site/blog/collections/as400/as400.mdx","title":"IBM iSeries (AS400)","description":"The IBM AS400 is another name for the IBM Power Systems server line, started in the late 1980s. Technically, AS400 is the name of the first generation, and the computer is now called the IBM iSeries. The IBM AS400 is designed to provide extremely high redundancy and uptime. It is traditionally run on-premise, using one of three mature operating systems, optimized for the architecture: OS/400 and AIX.Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u274c | Entitlements \u2714\ufe0f","date":"2023-10-07T00:00:00.000Z","tags":[{"inline":true,"label":"Collections","permalink":"/RSA/blog/tags/collections"},{"inline":true,"label":"SQL","permalink":"/RSA/blog/tags/sql"},{"inline":true,"label":"Database","permalink":"/RSA/blog/tags/database"},{"inline":true,"label":"IBM","permalink":"/RSA/blog/tags/ibm"},{"inline":true,"label":"iSeries","permalink":"/RSA/blog/tags/i-series"},{"inline":true,"label":"AS400","permalink":"/RSA/blog/tags/as-400"}],"readingTime":41.666666666666664,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg","page":null}],"frontMatter":{"slug":"as400","title":"IBM iSeries (AS400)","date":"2023-10-07T00:00:00.000Z","authors":"pradeepkg","tags":["Collections","SQL","Database","IBM","iSeries","AS400"],"keywords":["Collections","SQL","Database","IBM","iSeries","AS400"],"draft":false},"unlisted":false,"lastUpdatedAt":1718029732000,"prevItem":{"title":"RSA Authentication Manager","permalink":"/RSA/blog/securid"},"nextItem":{"title":"WebFOCUS BI & Analytics","permalink":"/RSA/blog/webfocus"}},"content":"import logoPNG from \'@site/static/img/logos/IBM iSeries (AS400) - 180x180.png\';\\r\\nimport LinkSvg from \'../../iconmonstr-link-thin.svg\';\\r\\n\\r\\n<table> \\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\"><img src={logoPNG} width=\\"180\\" height=\\"180\\"/>The IBM AS400 is another name for the IBM Power Systems server line, started in the late 1980s. Technically, AS400 is the name of the first generation, and the computer is now called the IBM iSeries. The IBM AS400 is designed to provide extremely high redundancy and uptime. It is traditionally run on-premise, using one of three mature operating systems, optimized for the architecture: OS/400 and AIX.<br /><br />Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u274c | Entitlements \u2714\ufe0f</td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## Application\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Application**.\\r\\n3. Click on **Create Application** and select **Other Application**.\\r\\n4. Enter the details as shown below.<br />![img](./img/1.png)\\r\\n5. Click **Finish**.\\r\\n---\\r\\n## Account Collector\\r\\nThis section explains the process for configuring an account collector for the IBM iSeries (AS400) application. We will use the Oracle database collector for this purpose. \\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Applications**.\\r\\n3. Click on **IBM iSeries (AS400).**.\\r\\n4. Navigate to **Collectors** tab and click on **Create Account Collector**. Enter the details as shown below.<br /><br />![img](./img/2.png)<br />\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <td><span class=\\"header-2-text\\">Driver</span></td>\\r\\n    <td>com.ibm.as400.access.AS400JDBCDriver</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td><span class=\\"header-2-text\\">URL</span></td>\\r\\n    <td>jdbc:as400://HOST_NAME:8471;date format=iso;errors=full;naming=sql;prompt=false;time format=iso;transaction isolation=none;translate binary=true;</td>\\r\\n  </tr>\\r\\n</table>\\r\\n5. Click **Next** and enter the database details. Use the *Test Connection* to make sure the connection details are accurate.<br /><br />![img](./img/3.png)\\r\\n6. Click Next. Select the appropriate data that you intend to collect.<br /><br />![img](./img/4.png)\\r\\n7. Click **Next**. On the **Account Data** page, enter the following query to collect account information.\\r\\n```sql\\r\\nSELECT \\r\\n  DISTINCT \\r\\n  -- Profile\\r\\n  trim(UPUPRF) AS accountName, \\r\\n  trim(UPTEXT) AS description, \\r\\n  CASE UPSTAT WHEN \'*DISABLED\' THEN 1 ELSE 0 AS isDisabled \\r\\nFROM \\r\\n  DSPUSRPRF \\r\\nWHERE \\r\\n  UPTEXT NOT like \'%Group%\'\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/5.png)<br />\\r\\n8. Click **Next**. On the **User Account Mappings Data** configuration page enter the following query to map the IBM iSeries (AS400) account to user identity.\\r\\n```sql\\r\\nSELECT \\r\\n  DISTINCT -- Profile\\r\\n  trim(UPUPRF) AS accountName, \\r\\n  trim(UPUPRF) AS userID \\r\\nFROM \\r\\n  DSPUSRPRF \\r\\nWHERE \\r\\n  UPTEXT NOT LIKE \'%Group%\'\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/6.png)<br />\\r\\n9. Click **Next**. In the **Group Data** configuration section enter the following query to collect groups from IBM iSeries (AS400).\\r\\n```sql\\r\\nSELECT \\r\\n  distinct trim(UPUPRF) AS groupName, \\r\\n  trim(UPTEXT) AS description \\r\\nFROM \\r\\n  DSPUSRPRF \\r\\nWHERE \\r\\n  UPTEXT LIKE \'%Group%\'\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/7.png)\\r\\n\\r\\n10. In the **Account Membership Data** configuration section enter the following query to collect groups membership information from IBM iSeries (AS400).\\r\\n```sql\\r\\nSELECT \\r\\n  trim(UPUPRF) AS accountName, \\r\\n  UPSUPG AS groupName \\r\\nFROM \\r\\n  DSPUSRPRF\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\n11. Click **Next**. In the **User Resolution Rules**, map the user to account<br /><br />![img](img/8.png)\\r\\n12. Click **Next**. In the **Member Account Resolution Rules**, map the account collector.<br /><br />![img](img/9.png)\\r\\n13. Click **Finish**. Use the *Test* function to make sure the configurations are accurate.\\r\\n---\\r\\n## Entitlement Collector\\r\\nThis section explains the process for configuring an entitlement collector to collect admin roles from IBM iSeries (AS400) application. We will use the Oracle database collector for this purpose.\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as AveksaAdmin.\\r\\n2. Navigate to **Resources > Applications**.\\r\\n3. Click on **IBM iSeries (AS400)**.\\r\\n4. Navigate to **Collectors** tab and click on ***Create Entitlement Collector***. Enter the details as shown below.<br /><br />![Alt text](img/10.png)\\r\\n5. Click **Next** and enter the database connection details as shown in Step 5 of [Account Collector](#account-collector).\\r\\n6. Click **Next**. Select the data types that the collector will be collecting from IBM iSeries (AS400).<br /><br />![Alt text](img/11.png)\\r\\n7. Click **Next**. On the **General Column Names**, map the attribute names.<br /><br />![Alt text](img/12.png)\\r\\n8. Click **Next**. Under **Resource Data** section, use the following query to collect roles from IBM iSeries (AS400).\\r\\n```sql\\r\\nSELECT \\r\\n  DISTINCT trim(UPUSCL) AS resource \\r\\nFROM \\r\\n  QGPL.DSPUSRPRF\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/13.png)<br />\\r\\n9. Click **Next**. On the **Resource-Action Entitlements Data** section, enter the query below to collect resource action mappings for roles.\\r\\n```sql\\r\\nSELECT \\r\\n  DISTINCT trim(UPUSCL) as resource, \'*ALLOBJ\' as action \\r\\nFROM \\r\\n  QGPL.DSPUSRPRF \\r\\nWHERE \\r\\n  UPSPAU LIKE \'%*ALLOBJ%\' \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT trim(UPUSCL) as resource, \'*AUDIT\' as action \\r\\nFROM \\r\\n  QGPL.DSPUSRPRF \\r\\nWHERE \\r\\n  UPSPAU LIKE \'%*AUDIT%\' \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT trim(UPUSCL) as resource, \'*IOSYSCFG\' as action \\r\\nFROM \\r\\n  QGPL.DSPUSRPRF \\r\\nWHERE \\r\\n  UPSPAU LIKE \'%*IOSYSCFG%\' \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT trim(UPUSCL) as resource, \'* JOBCTL\' as action \\r\\nFROM \\r\\n  QGPL.DSPUSRPRF \\r\\nWHERE \\r\\n  UPSPAU LIKE \'%*JOBCTL%\' \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT trim(UPUSCL) as resource, \'* SAVSYS\' as action \\r\\nFROM \\r\\n  QGPL.DSPUSRPRF \\r\\nWHERE \\r\\n  UPSPAU LIKE \'%*SAVSYS%\' \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT trim(UPUSCL) as resource, \'*SECADM\' as action \\r\\nFROM \\r\\n  QGPL.DSPUSRPRF \\r\\nWHERE \\r\\n  UPSPAU LIKE \'%* SECADM%\' \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT trim(UPUSCL) as resource, \'*SERVICE\' as action \\r\\nFROM \\r\\n  QGPL.DSPUSRPRF \\r\\nWHERE \\r\\n  UPSPAU LIKE \'%*SERVICE%\' \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT trim(UPUSCL) as resource, \'*SPLCTL\' as action \\r\\nFROM \\r\\n  QGPL.DSPUSRPRF \\r\\nWHERE \\r\\n  UPSPAU LIKE \'%*SPLCTL%\' \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT trim(UPUSCL) as resource, \'*NONE\' as action \\r\\nFROM \\r\\n  QGPL.DSPUSRPRF \\r\\nWHERE \\r\\n  UPSPAU LIKE \'%*NONE%\'\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\n10. Click **Next**. On the **Account Data** section, enter the query below to collect mappings for account to roles.\\r\\n```sql\\r\\nSELECT \\r\\n  DISTINCT trim(UPUSCL) as resource, \'*ALLOBJ\' as action, trim(UPUPRF) as LID \\r\\nFROM \\r\\n  QGPL.DSPUSRPRF \\r\\nWHERE \\r\\n  UPSPAU LIKE \'%*ALLOBJ%\' \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT trim(UPUSCL) as resource, \'*AUDIT\' as action, trim(UPUPRF) as LID \\r\\nFROM \\r\\n  QGPL.DSPUSRPRF \\r\\nWHERE \\r\\n  UPSPAU LIKE \'%*AUDIT%\' \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT trim(UPUSCL) as resource, \'*IOSYSCFG\' as action, trim(UPUPRF) as LID \\r\\nFROM \\r\\n  QGPL.DSPUSRPRF \\r\\nWHERE \\r\\n  UPSPAU LIKE \'%*IOSYSCFG%\' \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT trim(UPUSCL) as resource, \'* JOBCTL\' as action, trim(UPUPRF) as LID \\r\\nFROM \\r\\n  QGPL.DSPUSRPRF \\r\\nWHERE \\r\\n  UPSPAU LIKE \'%*JOBCTL%\' \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT trim(UPUSCL) as resource, \'* SAVSYS\' as action, trim(UPUPRF) as LID \\r\\nFROM \\r\\n  QGPL.DSPUSRPRF \\r\\nWHERE \\r\\n  UPSPAU LIKE \'%*SAVSYS%\' \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT trim(UPUSCL) as resource, \'*SECADM\' as action, trim(UPUPRF) as LID \\r\\nFROM \\r\\n  QGPL.DSPUSRPRF \\r\\nWHERE \\r\\n  UPSPAU LIKE \'%* SECADM%\' \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT trim(UPUSCL) as resource, \'*SERVICE\' as action, trim(UPUPRF) as LID \\r\\nFROM \\r\\n  QGPL.DSPUSRPRF \\r\\nWHERE \\r\\n  UPSPAU LIKE \'%*SERVICE%\' \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT trim(UPUSCL) as resource, \'*SPLCTL\' as action, trim(UPUPRF) as LID \\r\\nFROM \\r\\n  QGPL.DSPUSRPRF \\r\\nWHERE \\r\\n  UPSPAU LIKE \'%*SPLCTL%\' \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT trim(UPUSCL) as resource, \'*NONE\' as action, trim(UPUPRF) as LID \\r\\nFROM \\r\\n  QGPL.DSPUSRPRF \\r\\nWHERE \\r\\n  UPSPAU LIKE \'%*NONE%\'\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\n10. Click **Next**. In the User Evaluation, map the account to the ADC.\\r\\n<table>\\r\\n  <tr>\\r\\n    <th>Associated account collector</th>\\r\\n    <th>Account value evaluates to</th>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>IBM iSeries (AS400) ADC</td>\\r\\n    <td>Account Name</td>\\r\\n  </tr>\\r\\n</table>\\r\\n11. Click **Next** and then click **Finish**. Use the *Test* function to make sure the configurations are accurate.\\r\\n\\r\\n## Setup\\r\\n### AS400\\r\\nUser profile information available on the AS400 is not automatically maintained in an accessible table format. The table needs to be created and refreshed by running a simple command on the AS400.  Typically, the command is scheduled to be run daily, before collection is initiated from the RSA G&L.  \\r\\n\\r\\nA JDBC based AS400 specific collector can collect and parse the user account data for both account and entitlement information.  A user account with read access is required to the AS400.\\r\\n\\r\\nThe high-level steps are as follows:\\r\\n1. Generate the user table by executing the following command.\\r\\n>\\r\\n> **DSPUSRPRF USRPRF(*ALL) TYPE(*BASIC) OUTPUT(*OUTFILE) OUTFILE(QGPL/DSPUSRPRF)**\\r\\n>\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n\\r\\n2. Set up a batch job to run the above command daily, before scheduled collections run on RSA G&L.\\r\\n3. Create a user account that has read access to the table: **QGPL/DSPUSRPRF**.\\r\\n\\r\\n### RSA G&L\\r\\nThis integration uses the AS400 JDBC Driver (`com.ibm.as400.access.AS400JDBCDriver`) to connect to the database to extract information. The high level steps are as follows:\\r\\n\\r\\n1. Download the AS400 JDBC driver from https://sourceforge.net/projects/jt400/  and extract the jt400.jar file.<br /><br />![img](img/14.png)\\r\\n2. Add the jar file to ACM by uploading via the admin console.\\r\\n\\r\\n> <span class=\\"blog-id-text\\">COL026</span>"},{"id":"webfocus","metadata":{"permalink":"/RSA/blog/webfocus","source":"@site/blog/collections/webfocus/webfocus.mdx","title":"WebFOCUS BI & Analytics","description":"WebFOCUS is a cloud-based / on premise business intelligence (BI) and analytics platform that offers analytical tools, applications, reports and documents for business stakeholders such as management teams, analysts, line-of-business workers, partners and customers. The solution also provides other capabilities including data discovery, location intelligence, predictive and prescriptive analytics, BI smart search and natural language search.Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u2714\ufe0f | Entitlements \u274c","date":"2023-10-06T00:00:00.000Z","tags":[{"inline":true,"label":"Collections","permalink":"/RSA/blog/tags/collections"},{"inline":true,"label":"SQL","permalink":"/RSA/blog/tags/sql"},{"inline":true,"label":"WebFOCUS","permalink":"/RSA/blog/tags/web-focus"},{"inline":true,"label":"Database","permalink":"/RSA/blog/tags/database"},{"inline":true,"label":"Analytics","permalink":"/RSA/blog/tags/analytics"},{"inline":true,"label":"Business Intelligence","permalink":"/RSA/blog/tags/business-intelligence"}],"readingTime":24.733333333333334,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg","page":null}],"frontMatter":{"slug":"webfocus","title":"WebFOCUS BI & Analytics","date":"2023-10-06T00:00:00.000Z","authors":"pradeepkg","tags":["Collections","SQL","WebFOCUS","Database","Analytics","Business Intelligence"],"keywords":["Collections","SQL","WebFOCUS","Database","Analytics","Business Intelligence"],"draft":false},"unlisted":false,"lastUpdatedAt":1715729236000,"prevItem":{"title":"IBM iSeries (AS400)","permalink":"/RSA/blog/as400"},"nextItem":{"title":"Deltek CostPoint","permalink":"/RSA/blog/deltek"}},"content":"import logoPNG from \'@site/static/img/logos/WebFOCUS - 180x180.png\';\\r\\nimport LinkSvg from \'../../iconmonstr-link-thin.svg\';\\r\\nimport Admonition from \\"@theme/Admonition\\";\\r\\n\\r\\n<table> \\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\"><img src={logoPNG} width=\\"180\\" height=\\"180\\"/>WebFOCUS is a cloud-based / on premise business intelligence (BI) and analytics platform that offers analytical tools, applications, reports and documents for business stakeholders such as management teams, analysts, line-of-business workers, partners and customers. The solution also provides other capabilities including data discovery, location intelligence, predictive and prescriptive analytics, BI smart search and natural language search.<br /><br />Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u2714\ufe0f | Entitlements \u274c</td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n<Admonition type=\\"note\\">\\r\\nThis document covers the integration with On Premise version of the product with repository as Oracle database\\r\\n</Admonition>\\r\\n\\r\\n## Application\\r\\nThe first step in collecting accounts, tokens information from WebFOCUS is to create a placeholder application to store this information in RSA Identity G&L.\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Application**.\\r\\n3. Click on **Create Application** and select **Other Application**.\\r\\n4. Enter the details as shown below.<br />![img](./img/1.png)\\r\\n5. Click **Finish**.\\r\\n---\\r\\n## Account Collector\\r\\nThis section explains the process for configuring an account collector for the WebFOCUS application. We will use the Oracle database collector for this purpose. \\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Applications**.\\r\\n3. Click on **WebFOCUS BI & Analytics**.\\r\\n4. Navigate to **Collectors** tab and click on **Create Account Collector**. Enter the details as shown below.<br /><br />![img](./img/2.png)\\r\\n5. Click **Next** and enter the Oracle database details. Use the *Test Connection* to make sure the connection details are accurate.<br /><br />![img](./img/3.png)\\r\\n6. Click Next. Select the appropriate data that you intend to collect.<br /><br />![img](./img/4.png)\\r\\n7. Click **Next**. On the **Account Data** page, enter the following query to collect account information.\\r\\n```sql\\r\\nSELECT \\r\\n  userid AS account, \\r\\n  username AS userID, \\r\\n  email, \\r\\n  CASE isactive WHEN 1 THEN 0 ELSE 1 AS isDisabled \\r\\nFROM \\r\\n  WF_MRUSERS\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/5.png)\\r\\n\\r\\n8. Click **Next**. On the **User Account Mappings Data** configuration page enter the following query to map the WebFOCUS account to user identity.\\r\\n```sql\\r\\nSELECT \\r\\n  userid AS account, \\r\\n  username AS userID\\r\\nFROM \\r\\n  WF_MRUSERS\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/6.png)\\r\\n\\r\\n9. Click **Next**. In the **Group Data** configuration section enter the following query to collect groups from WebFOCUS.\\r\\n```sql\\r\\nSELECT \\r\\n  distinct groupName, \\r\\n  groupid \\r\\nFROM \\r\\n  WF_MRGROUPS\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/7.png)\\r\\n\\r\\n10. In the **Account Membership Data** configuration section enter the following query to collect groups membership information from WebFOCUS.\\r\\n```sql\\r\\nSELECT \\r\\n  userid AS account, \\r\\n  groupid \\r\\nFROM \\r\\n  WF_USRGRPTB \\r\\nWHERE \\r\\n  userid is NOT NULL\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\n11. Click **Next**. In the **User Resolution Rules**, map the user to account<br /><br />![img](img/8.png)\\r\\n12. Click **Next**. In the **Member Account Resolution Rules**, map the account collector.<br /><br />![img](img/9.png)\\r\\n13. Click **Finish**. Use the *Test* function to make sure the configurations are accurate.\\r\\n---\\r\\n## Entitlement Collector\\r\\nThis section explains the process for configuring an entitlement collector to collect admin roles from WebFOCUS application. We will use the Oracle database collector for this purpose.\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as AveksaAdmin.\\r\\n2. Navigate to **Resources > Applications**.\\r\\n3. Click on **WebFOCUS BI & Analytics**.\\r\\n4. Navigate to **Collectors** tab and click on ***Create Entitlement Collector***. Enter the details as shown below.<br /><br />![Alt text](img/10.png)\\r\\n5. Click **Next** and enter the database connection details as shown in Step 5 of [Account Collector](#account-collector).\\r\\n6. Click **Next**. Select the data types that the collector will be collecting from WebFOCUS.<br /><br />![Alt text](img/11.png)\\r\\n7. Click **Next**. On the **General Column Names**, map the attribute names.<br /><br />![Alt text](img/12.png)\\r\\n8. Click **Next**. Under **Application Role Data** section, use the following query to collect admin roles from WebFOCUS.\\r\\n```sql\\r\\nSELECT \\r\\n  distinct roleid, \\r\\n  rolename AS role, \\r\\n  roleflag AS description \\r\\nFROM \\r\\n  WF_MRROLES\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/13.png)\\r\\n\\r\\n9. Click **Next**. On the **Account Data** section, enter the query below to collect mappings for account to admin roles.\\r\\n```sql\\r\\nSELECT \\r\\n  users.userid AS account, \\r\\n  roles.rolenameAS role \\r\\nFROM \\r\\n  WF_MRUSERS users \\r\\n  INNER JOIN WF_MRROLES roles ON roles.roleid = users.roleid\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\n10. Click **Next**. In the User Evaluation, map the account to the ADC.\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <th>Associated account collector</th>\\r\\n    <th>Account value evaluates to</th>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <th>WebFOCUS BI & Analytics ADC</th>\\r\\n    <th>Account Name</th>\\r\\n  </tr>\\r\\n</table>\\r\\n11. Click **Next** and then click **Finish**. Use the *Test* function to make sure the configurations are accurate.\\r\\n\\r\\n> <span class=\\"blog-id-text\\">COL024</span>"},{"id":"deltek","metadata":{"permalink":"/RSA/blog/deltek","source":"@site/blog/collections/deltek/deltek.mdx","title":"Deltek CostPoint","description":"Deltek CostPoint is an ERP software solution designed for government contractors. It enables users to manage project accounting, labor management, manufacturing, and business intelligence. Modules include payroll, budgeting and planning, reporting, human resources and benefits, manufacturing and compliance, subcontractor management, time and expense, contract management, and enterprise insights for planning and forecasting.Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u274c | Entitlements \u274c","date":"2023-10-06T00:00:00.000Z","tags":[{"inline":true,"label":"Collections","permalink":"/RSA/blog/tags/collections"},{"inline":true,"label":"SQL","permalink":"/RSA/blog/tags/sql"},{"inline":true,"label":"Database","permalink":"/RSA/blog/tags/database"},{"inline":true,"label":"ERP","permalink":"/RSA/blog/tags/erp"},{"inline":true,"label":"Deltek","permalink":"/RSA/blog/tags/deltek"},{"inline":true,"label":"CostPoint","permalink":"/RSA/blog/tags/cost-point"}],"readingTime":17.766666666666666,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg","page":null}],"frontMatter":{"slug":"deltek","title":"Deltek CostPoint","date":"2023-10-06T00:00:00.000Z","authors":"pradeepkg","tags":["Collections","SQL","Database","ERP","Deltek","CostPoint"],"keywords":["Collections","SQL","Database","ERP","Deltek","CostPoint"],"draft":false},"unlisted":false,"lastUpdatedAt":1718029732000,"prevItem":{"title":"WebFOCUS BI & Analytics","permalink":"/RSA/blog/webfocus"},"nextItem":{"title":"Lawson","permalink":"/RSA/blog/lawson"}},"content":"import logoPNG from \'@site/static/img/logos/Deltek - 180x180.png\';\\r\\nimport LinkSvg from \'../../iconmonstr-link-thin.svg\';\\r\\n\\r\\n<table> \\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\"><img src={logoPNG} width=\\"180\\" height=\\"180\\"/>Deltek CostPoint is an ERP software solution designed for government contractors. It enables users to manage project accounting, labor management, manufacturing, and business intelligence. Modules include payroll, budgeting and planning, reporting, human resources and benefits, manufacturing and compliance, subcontractor management, time and expense, contract management, and enterprise insights for planning and forecasting.<br /><br />Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u274c | Entitlements \u274c</td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## Application\\r\\nThe first step in collecting accounts, tokens information from Deltek CostPoint is to create a placeholder application to store this information in RSA Governance & Lifecycle.\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Application**.\\r\\n3. Click on **Create Application** and select **Other Application**.\\r\\n4. Enter the details as shown below.<br />![img](./img/1.png)\\r\\n5. Click **Finish**.\\r\\n---\\r\\n## Account Collector\\r\\nThis section explains the process for configuring an account collector for the Deltek Costpoint application. We will use the SQL Server database collector for this purpose.   \\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Applications**.\\r\\n3. Click on **Deltek CostPoint**.\\r\\n4. Navigate to **Collectors** tab and click on **Create Account Collector**. Enter the details as shown below.<br /><br />![img](./img/2.png)\\r\\n5. Click **Next** and enter the database details. Use the *Test Connection* to make sure the connection details are accurate. Use the latest Microsoft JDBC Driver for SQL Server if NTLM authentication is required.<br /><br />![img](./img/3.png)\\r\\n6. Click **Next**. Select the appropriate data that you intend to collect.<br /><br />![img](./img/4.png)\\r\\n7. Click **Next**. On the **Account Data** page, enter the following query to collect account information.\\r\\n```sql\\r\\nSELECT \\r\\n  DISTINCT users.USER_ID as accountName, \\r\\n  user_details.NAME as displayname, \\r\\n  user_details.EMPL_ID as employeeID, \\r\\n  user_details.LAST_PSWD_CHNG_DT as passwordChangeDate, \\r\\n  CASE WHEN user_details.DE_ACTIVATION_DT IS NULL \\r\\n    THEN 0 ELSE 1 \\r\\n  END as isDisabled, \\r\\n  user_details.LAST_LOGIN_DT as lastLogin, \\r\\n  company.ORG_SEC_GRP_CD as company \\r\\nFROM \\r\\n  CPADMIN.W_USER_GRP_USERS users \\r\\n  JOIN CPADMIN.W_USER_UGRP_LIST user_details \\r\\n    ON users.USER_ID = user_details.SEC_OBJ_ID \\r\\n  JOIN CPADMIN.W_USER_COMPANY company \\r\\n    ON users.USER_ID = company.USER_ID\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/5.png)<br />\\r\\n8. Click **Next**. On the **User Account Mappings Data** configuration page enter the following query to map the Deltek CostPoint account to user identity.\\r\\n```sql\\r\\nselect \\r\\n  CPADMIN.W_USER_GRP_USERS.USER_ID as accountName, \\r\\n  CPADMIN.W_USER_GRP_USERS.USER_ID as userID \\r\\nfrom \\r\\n  CPADMIN.W_USER_GRP_USERS\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/6.png)<br />\\r\\n9. Click **Next**. In the **Group Data** configuration section enter the following query to collect groups from Deltek CostPoint.\\r\\n```sql\\r\\nSELECT \\r\\n  DISTINCT SEC_OBJ_ID as groupID, \\r\\n  NAME as groupName \\r\\nFROM \\r\\n  CPADMIN.W_USER_UGRP_LIST groups \\r\\nWHERE \\r\\n  TYPE = \'G\'\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/7.png)<br />\\r\\n10. In the **Account Membership Data** configuration section enter the following query to collect groups membership information from Deltek CostPoint.\\r\\n```sql\\r\\nSELECT \\r\\n  groups.NAME as groupName, \\r\\n  groups.SEC_OBJ_ID as groupID, \\r\\n  users.USER_ID as accountName\\r\\nFROM \\r\\n  CPADMIN.W_USER_GRP_USERS users \\r\\n  INNER JOIN CPADMIN.W_USER_UGRP_LIST groups \\r\\n    ON groups.SEC_OBJ_ID = users.SEC_OBJ_ID \\r\\nWHERE \\r\\n  groups.TYPE = \'G\'\\r\\n```\\r\\n11. Click **Next**. In the **User Resolution Rules**, map the user to account<br /><br />![img](img/8.png)\\r\\n12. Click **Next**. In the **Member Account Resolution Rules**, map the account collector.<br /><br />![img](img/9.png)\\r\\n13. Click **Finish**. Use the *Test* function to make sure the configurations are accurate.\\r\\n\\r\\n> <span class=\\"blog-id-text\\">COL023</span>"},{"id":"lawson","metadata":{"permalink":"/RSA/blog/lawson","source":"@site/blog/collections/lawson/lawson.mdx","title":"Lawson","description":"Lawson is a suite of HR management applications offering absence management tools, employee and manager self-service features, benefits and personnel administration, payroll management, and other tools.Identities \u2714\ufe0f | Accounts \u274c | Groups \u274c | App Roles \u274c | Entitlements \u274c","date":"2023-10-05T00:00:00.000Z","tags":[{"inline":true,"label":"Collections","permalink":"/RSA/blog/tags/collections"},{"inline":true,"label":"SQL","permalink":"/RSA/blog/tags/sql"},{"inline":true,"label":"Database","permalink":"/RSA/blog/tags/database"},{"inline":true,"label":"Lawson","permalink":"/RSA/blog/tags/lawson"},{"inline":true,"label":"HCM","permalink":"/RSA/blog/tags/hcm"},{"inline":true,"label":"Identities","permalink":"/RSA/blog/tags/identities"}],"readingTime":13.833333333333334,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg","page":null}],"frontMatter":{"slug":"lawson","title":"Lawson","date":"2023-10-05T00:00:00.000Z","authors":"pradeepkg","tags":["Collections","SQL","Database","Lawson","HCM","Identities"],"keywords":["Collections","SQL","Database","Lawson","HCM","Identities"],"draft":false},"unlisted":false,"lastUpdatedAt":1715729236000,"prevItem":{"title":"Deltek CostPoint","permalink":"/RSA/blog/deltek"},"nextItem":{"title":"Cherwell","permalink":"/RSA/blog/cherwell"}},"content":"import logoPNG from \'@site/static/img/logos/Lawson - 180x180.png\';\\r\\nimport LinkSvg from \'../../iconmonstr-link-thin.svg\';\\r\\nimport Admonition from \\"@theme/Admonition\\";\\r\\n\\r\\n<table> \\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\"><img src={logoPNG} width=\\"180\\" height=\\"180\\"/>Lawson is a suite of HR management applications offering absence management tools, employee and manager self-service features, benefits and personnel administration, payroll management, and other tools.<br /><br />Identities \u2714\ufe0f | Accounts \u274c | Groups \u274c | App Roles \u274c | Entitlements \u274c</td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n<Admonition type=\\"info\\" title=\\"Assumptions\\">\\r\\nThis guide is based on the Velocity solution to synchronize Lawson data into local Oracle database\\r\\n</Admonition>\\r\\n\\r\\n## Application\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Application**.\\r\\n3. Click on **Create Application** and select **Other Application**.\\r\\n4. Enter the details as shown below.<br />![img](./img/1.png)\\r\\n5. Click **Finish**.\\r\\n---\\r\\n## Identity Collector\\r\\nThis section explains the process for configuring an identity collector for the Lawson application. We will use the Oracle database collector for this purpose.   \\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Applications**.\\r\\n3. Click on **Lawson**.\\r\\n4. Navigate to **Collectors** tab and click on **Create Identity Collector**. Enter the details as shown below.<br /><br />![img](./img/2.png)\\r\\n5. Click **Next** and enter the Oracle database details. Use the Test Connection to make sure the connection details are accurate.<br /><br />![img](./img/3.png)\\r\\n6. Click **Next**.\\r\\n7. Click **Next**. On the **User Data** configuration page, enter the following query to collect account information from Lawson\\r\\n```sql\\r\\nSELECT \\r\\n  TRIM(employee.FIRST_NAME) AS firstName, \\r\\n  TRIM(employee.LAST_NAME) AS lastName, \\r\\n  TRIM(employee.MIDDLE_INIT) AS middleInitial, \\r\\n  TRIM(employee.EMPLOYEE) AS employeeID, \\r\\n  TRIM(POS.DESCRIPTION) AS title, \\r\\n  TRIM(DPT.R_NAME) AS departmentName, \\r\\n  TRIM(employee.DEPARTMENT) AS departmentCode, \\r\\n  (\\r\\n    CASE \\r\\n        WHEN employee.TERM_DATE = TO_DATE(\'01/01/1700\', \'MM/DD/YYYY\') \\r\\n        THEN \' \' ELSE TO_CHAR(employee.TERM_DATE, \'MM/DD/YYYY\') END\\r\\n  ) AS terminationDate, \\r\\n  TRIM(employee.NICK_NAME) AS preferredName, \\r\\n  TRIM(employee.JOB_CODE) AS jobCode, \\r\\n  TRIM(employee.POSITION) AS positionCode, \\r\\n  TRIM(employee.COMPANY) AS company, \\r\\n  TRIM(XR.BUS_UNIT_CD) AS location, \\r\\n  TRIM(BU.UNIT_CODE_DESC) AS locationDetails, \\r\\n  TRIM(employee.HM_ACCT_UNIT) AS homeAccountingUnit, \\r\\n  TRIM(employee.ADJ_HIRE_DATE) AS adjustedHireDate, \\r\\n  TRIM(employee.EMP_STATUS) AS jobStatus, \\r\\n  TRIM(employee.PROCESS_LEVEL) AS processLevel, \\r\\n  TO_CHAR(PA.BIRTHDATE, \'MM\') AS dobMonth, \\r\\n  TO_CHAR(PA.BIRTHDATE, \'DD\') AS dobDay, \\r\\n  employee.SUPERVISOR AS supervisorEmployeeID\\r\\nFROM \\r\\n  EMPLOYEE employee \\r\\n  INNER JOIN PAEMPLOYEE PA ON employee.COMPANY = PA.COMPANY \\r\\n  AND employee.EMPLOYEE = PA.EMPLOYEE \\r\\n  LEFT OUTER JOIN HRSUPER SUP ON employee.COMPANY = SUP.COMPANY \\r\\n  AND employee.SUPERVISOR = SUP.CODE \\r\\n  LEFT OUTER JOIN PAPOSITION POS ON POS.COMPANY = employee.COMPANY \\r\\n  AND POS.POSITION = employee.POSITION \\r\\n  AND POS.END_DATE = TO_DATE(\'01/01/1700\', \'MM/DD/YYYY\') \\r\\n  LEFT JOIN ZIBUXREF XR ON XR.ACCT_UNIT = employee.HM_ACCT_UNIT \\r\\n  LEFT JOIN ZIBUSUNIT BU ON XR.BUS_UNIT_CD = BU.UNIT_CODE \\r\\n  LEFT JOIN DEPTCODE DPT ON employee.COMPANY = DPT.COMPANY \\r\\n  AND employee.PROCESS_LEVEL = DPT.PROCESS_LEVEL \\r\\n  AND employee.DEPARTMENT = DPT.DEPARTMENT\\r\\n```\\r\\n8. Click **Finish**. Use the *Test* function to make sure the configurations are accurate.\\r\\n\\r\\n> <span class=\\"blog-id-text\\">COL022</span>"},{"id":"cherwell","metadata":{"permalink":"/RSA/blog/cherwell","source":"@site/blog/collections/cherwell/cherwell.mdx","title":"Cherwell","description":"Cherwell Service Management is a cloud-based IT service management solution that helps IT teams in organizations to implement, automate and upgrade service and support processes.Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u274c | Entitlements \u274c","date":"2023-10-05T00:00:00.000Z","tags":[{"inline":true,"label":"Collections","permalink":"/RSA/blog/tags/collections"},{"inline":true,"label":"SQL","permalink":"/RSA/blog/tags/sql"},{"inline":true,"label":"Database","permalink":"/RSA/blog/tags/database"},{"inline":true,"label":"ITSM","permalink":"/RSA/blog/tags/itsm"},{"inline":true,"label":"Cherwell","permalink":"/RSA/blog/tags/cherwell"}],"readingTime":32,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg","page":null}],"frontMatter":{"slug":"cherwell","title":"Cherwell","date":"2023-10-05T00:00:00.000Z","authors":"pradeepkg","tags":["Collections","SQL","Database","ITSM","Cherwell"],"keywords":["Collections","SQL","Database","ITSM","Cherwell"],"draft":false},"unlisted":false,"lastUpdatedAt":1715729236000,"prevItem":{"title":"Lawson","permalink":"/RSA/blog/lawson"},"nextItem":{"title":"SAP Business Planning and Consolidation (BPC)","permalink":"/RSA/blog/sap-bpc"}},"content":"import logoPNG from \'@site/static/img/logos/Cherwell - 180x180.png\';\\r\\nimport LinkSvg from \'../../iconmonstr-link-thin.svg\';\\r\\nimport Admonition from \\"@theme/Admonition\\";\\r\\n\\r\\n<table> \\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\"><img src={logoPNG} width=\\"180\\" height=\\"180\\"/>Cherwell Service Management is a cloud-based IT service management solution that helps IT teams in organizations to implement, automate and upgrade service and support processes.<br /><br />Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u274c | Entitlements \u274c</td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n<Admonition type=\\"note\\" title=\\"Assumptions\\">\\r\\n This guide is intended for On Premise deployment mode.\\r\\n</Admonition>\\r\\n\\r\\n## Application\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Application**.\\r\\n3. Click on **Create Application** and select **Other Application**.\\r\\n4. Enter the details as shown below.<br />![img](./img/1.png)\\r\\n5. Click **Finish**.\\r\\n---\\r\\n## Account Collector\\r\\nThis section explains the process for configuring an account collector for the Cherwell application. We will use the MySQL database collector for this purpose.   \\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Applications**.\\r\\n3. Click on **Cherwell**.\\r\\n4. Navigate to **Collectors** tab and click on **Create Account Collector**. Enter the details as shown below.<br /><br />![img](./img/2.png)\\r\\n5. Click **Next** and enter the database details. Use the *Test Connection* to make sure the connection details are accurate.<br /><br />![img](./img/3.png)\\r\\n6. Click **Next**. Select the appropriate data that you intend to collect.<br /><br />![img](./img/4.png)\\r\\n7. Click **Next**. On the **Account Data** page, enter the following query to collect account information.\\r\\n```sql\\r\\nSELECT\\r\\n  -- Local accounts\\r\\n  auth.StandardIdentifier as accountName, \\r\\n  auth.LastPasswordResetDT as lastPasswordSetDate, \\r\\n  auth.AccountLocked as isLocked \\r\\nFROM \\r\\n  dbo.TrebuchetAuth auth \\r\\nWHERE \\r\\n  auth.StandardIdentifier <> \'\' \\r\\nUNION \\r\\nSELECT\\r\\n  -- Domain accounts\\r\\n  CASE WHEN LEFT(auth.WindowsIdentifier, 7) = \'DOMAIN\\\\\\\\\' \\r\\n  THEN REPLACE(auth.WindowsIdentifier,\'DOMAIN\\\\\\\\\',\'\') \\r\\n  ELSE auth.WindowsIdentifier  \\r\\n  END as accountName, \\r\\n  auth.LastPasswordResetDT as lastPasswordSetDate,\\r\\n  auth.AccountLocked as isLocked\\r\\nFROM \\r\\n  dbo.TrebuchetAuth auth\\r\\nWHERE auth.StandardIdentifier <> \'\'\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/5.png)\\r\\n\\r\\n8. Click **Next**. On the **User Account Mappings Data** configuration page enter the following query to map the Cherwell account to user identity.\\r\\n```sql\\r\\nSELECT\\r\\n  -- Local accounts\\r\\n  auth.StandardIdentifier as accountName, \\r\\n  auth.StandardIdentifier as userID\\r\\nFROM \\r\\n  dbo.TrebuchetAuth auth \\r\\nWHERE \\r\\n  auth.StandardIdentifier <> \'\' \\r\\nUNION \\r\\nSELECT\\r\\n  -- Domain accounts\\r\\n  CASE WHEN LEFT(auth.WindowsIdentifier, 7) = \'DOMAIN\\\\\\\\\' \\r\\n  THEN REPLACE(auth.WindowsIdentifier,\'DOMAIN\\\\\\\\\',\'\') \\r\\n  ELSE auth.WindowsIdentifier  \\r\\n  END as accountName,\\r\\n  auth.StandardIdentifier as userID\\r\\nFROM \\r\\n  dbo.TrebuchetAuth auth\\r\\nWHERE auth.StandardIdentifier <> \'\'\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/6.png)\\r\\n\\r\\n9. Click **Next**. In the **Group Data** configuration section enter the following query to collect groups from Cherwell.\\r\\n```sql\\r\\nSELECT \\r\\n  -- Local accounts\\r\\n  auth.StandardIdentifier as accountName, \\r\\n  groups.DefName as groupName,\\r\\n  groups.DefDescription as description,\\r\\n  groups.DefOwner as owner\\r\\nFROM \\r\\n  dbo.TrebuchetAuth auth,\\r\\n  dbo.TrebuchetSecGroups groups\\r\\nWHERE \\r\\n  auth.SecurityGroupID = groups.DefID \\r\\n  AND auth.StandardIdentifier <> \'\' \\r\\nUNION \\r\\nSELECT \\r\\n  -- Domain accounts\\r\\n  CASE WHEN LEFT(auth.WindowsIdentifier, 7) = \'DOMAIN\\\\\\\\\' \\r\\n  THEN REPLACE(auth.WindowsIdentifier,\'DOMAIN\\\\\\\\\',\'\') \\r\\n  ELSE auth.WindowsIdentifier  \\r\\n  END as accountName,\\r\\n  groups.DefName as groupName,\\r\\n  groups.DefDescription as description,\\r\\n  groups.DefOwner as owner\\r\\nFROM \\r\\n  dbo.TrebuchetAuth auth,\\r\\n  dbo.TrebuchetSecGroups groups\\r\\nWHERE auth.SecurityGroupID = groups.DefID\\r\\n  AND auth.StandardIdentifier <> \'\'\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/7.png)\\r\\n\\r\\n10. In the **Account Membership Data** configuration section enter the following query to collect groups membership information from Cherwell.\\r\\n```sql\\r\\nSELECT \\r\\n  -- Local accounts\\r\\n  auth.StandardIdentifier as accountName, \\r\\n  groups.DefName as groupName\\r\\nFROM \\r\\n  dbo.TrebuchetAuth auth,\\r\\n  dbo.TrebuchetSecGroups groups\\r\\nWHERE \\r\\n  auth.SecurityGroupID = groups.DefID \\r\\n  AND auth.StandardIdentifier <> \'\' \\r\\nUNION \\r\\nSELECT \\r\\n  -- Domain accounts\\r\\n  CASE WHEN LEFT(auth.WindowsIdentifier, 7) = \'DOMAIN\\\\\\\\\' \\r\\n  THEN REPLACE(auth.WindowsIdentifier,\'DOMAIN\\\\\\\\\',\'\') \\r\\n  ELSE auth.WindowsIdentifier  \\r\\n  END as accountName,\\r\\n  groups.DefName as groupName\\r\\nFROM \\r\\n  dbo.TrebuchetAuth auth,\\r\\n  dbo.TrebuchetSecGroups groups\\r\\nWHERE auth.SecurityGroupID = groups.DefID\\r\\n  AND auth.StandardIdentifier <> \'\'\\r\\n```\\r\\n11. Click **Next**. In the **User Resolution Rules**, map the user to account<br /><br />![img](img/8.png)\\r\\n12. Click **Next**. In the **Member Account Resolution Rules**, map the account collector.<br /><br />![img](img/9.png)\\r\\n13. Click **Next**. In the **Group Owner Resolution Rules**, map the account collector.<br /><br />![img](img/10.png)\\r\\n14. Click **Finish**. Use the *Test* function to make sure the configurations are accurate.\\r\\n---\\r\\n## Entitlement Collector\\r\\nThis section explains the process for configuring an entitlement collector to collect application roles from Cherwell application.\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as AveksaAdmin.\\r\\n2. Navigate to **Resources > Applications**.\\r\\n3. Click on **Cherwell**.\\r\\n4. Navigate to **Collectors** tab and click on ***Create Entitlement Collector***. Enter the details as shown below.<br /><br />![Alt text](img/11.png)\\r\\n5. Click **Next** and enter the database connection details as shown in Step 5 of [Account Collector](#account-collector).\\r\\n6. Click **Next**. Select the data types that the collector will be collecting from Cherwell.<br /><br />![Alt text](img/12.png)\\r\\n7. Click **Next**. On the **Column Names**, map the attribute names.<br /><br />![Alt text](img/13.png)\\r\\n8. Click **Next**. Under **Application Role Data** section, use the following query to collect app roles from Cherwell.\\r\\n```sql\\r\\nSELECT \\r\\n  dbo.TrebuchetAuth.StandardIdentifier AS Identifier, \\r\\n  dbo.TrebuchetSecGroups.DefName \\r\\nFROM \\r\\n  [dbo].[TrebuchetAuth], \\r\\n  [dbo].[TrebuchetSecGroups] \\r\\nWHERE \\r\\n  dbo.TrebuchetAuth.SecurityGroupID = [dbo].[TrebuchetSecGroups].DefID \\r\\n  AND dbo.TrebuchetAuth.StandardIdentifier <> \'\' \\r\\nUNION \\r\\nSELECT \\r\\n  CASE WHEN left(dbo.TrebuchetAuth.WindowsIdentifier, 5) = \'dom1\\\\\\\\\' \\r\\n    THEN replace(dbo.TrebuchetAuth.WindowsIdentifier,\' dom1\\\\ \',\'\') \\r\\n    ELSE dbo.TrebuchetAuth.WindowsIdentifier \\r\\n  END AS Identifier, \\r\\n  dbo.TrebuchetSecGroups.DefName FROM [dbo].[TrebuchetAuth] ,[dbo].[TrebuchetSecGroups]\\r\\nWHERE dbo.TrebuchetAuth.SecurityGroupID = [dbo].[TrebuchetSecGroups].DefID\\r\\nAND dbo.TrebuchetAuth.WindowsIdentifier <> \'\'\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/14.png)\\r\\n\\r\\n9. Click **Next**. Under **Resource-Action Entitlements Data** section, use the following query to collect resource action mapping from Cherwell.\\r\\n```sql\\r\\nSELECT \\r\\n  dbo.TrebuchetAuth.StandardIdentifier AS Identifier, \\r\\n  dbo.TrebuchetSecGroups.DefName \\r\\nFROM \\r\\n  [dbo].[TrebuchetAuth], \\r\\n  [dbo].[TrebuchetSecGroups] \\r\\nWHERE \\r\\n  dbo.TrebuchetAuth.SecurityGroupID = [dbo].[TrebuchetSecGroups].DefID \\r\\n  AND dbo.TrebuchetAuth.StandardIdentifier <> \'\' \\r\\nUNION \\r\\nSELECT \\r\\n  CASE WHEN left(dbo.TrebuchetAuth.WindowsIdentifier, 5) = \'dom1\\\\\\\\\' \\r\\n    THEN replace(dbo.TrebuchetAuth.WindowsIdentifier,\' dom1\\\\ \',\'\') \\r\\n    ELSE dbo.TrebuchetAuth.WindowsIdentifier \\r\\n  END AS Identifier, \\r\\n  dbo.TrebuchetSecGroups.DefName FROM [dbo].[TrebuchetAuth] ,[dbo].[TrebuchetSecGroups]\\r\\nWHERE dbo.TrebuchetAuth.SecurityGroupID = [dbo].[TrebuchetSecGroups].DefID\\r\\nAND dbo.TrebuchetAuth.WindowsIdentifier <> \'\'\\r\\n```\\r\\n\\r\\n10. Click **Next**. On the **Account Data** section, enter the query below to collect mappings for account to admin roles.\\r\\n```sql\\r\\nSELECT \\r\\n  dbo.TrebuchetAuth.StandardIdentifier AS Identifier, \\r\\n  dbo.TrebuchetSecGroups.DefName \\r\\nFROM \\r\\n  [dbo].[TrebuchetAuth], \\r\\n  [dbo].[TrebuchetSecGroups] \\r\\nWHERE \\r\\n  dbo.TrebuchetAuth.SecurityGroupID = [dbo].[TrebuchetSecGroups].DefID \\r\\n  AND dbo.TrebuchetAuth.StandardIdentifier <> \'\' \\r\\nUNION \\r\\nSELECT \\r\\n  CASE WHEN left(dbo.TrebuchetAuth.WindowsIdentifier,5) = \'dom1\\\\\\\\\' \\r\\n    THEN replace(dbo.TrebuchetAuth.WindowsIdentifier,\' dom1\\\\ \',\'\') \\r\\n    ELSE dbo.TrebuchetAuth.WindowsIdentifier \\r\\n  END AS Identifier, \\r\\n  dbo.TrebuchetSecGroups.DefName FROM [dbo].[TrebuchetAuth] ,[dbo].[TrebuchetSecGroups]\\r\\nWHERE dbo.TrebuchetAuth.SecurityGroupID = [dbo].[TrebuchetSecGroups].DefID\\r\\nAND dbo.TrebuchetAuth.WindowsIdentifier <> \'\'\\r\\n```\\r\\n11. Click **Next**. In the User Evaluation, map the account to the ADC.<br /><br />![img](img/15.png)\\r\\n12. Click **Next** and then click **Finish**. Use the *Test* function to make sure the configurations are accurate.\\r\\n\\r\\n> <span class=\\"blog-id-text\\">COL021</span>"},{"id":"sap-bpc","metadata":{"permalink":"/RSA/blog/sap-bpc","source":"@site/blog/collections/sap-bpc/sap-bpc.mdx","title":"SAP Business Planning and Consolidation (BPC)","description":"SAP Business Planning and Consolidation (BPC) is an integrated financial planning and consolidation solution. It enables organizations to streamline budgeting, forecasting, and financial reporting processes. BPC helps in aligning financial plans with strategic goals, ensuring accurate data consolidation, and facilitating regulatory compliance for enhanced business decision-making and efficiency.Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u274c | Entitlements \u274c","date":"2023-10-04T00:00:00.000Z","tags":[{"inline":true,"label":"Collections","permalink":"/RSA/blog/tags/collections"},{"inline":true,"label":"SQL","permalink":"/RSA/blog/tags/sql"},{"inline":true,"label":"Database","permalink":"/RSA/blog/tags/database"},{"inline":true,"label":"SAP","permalink":"/RSA/blog/tags/sap"},{"inline":true,"label":"BPC","permalink":"/RSA/blog/tags/bpc"},{"inline":true,"label":"Financial","permalink":"/RSA/blog/tags/financial"}],"readingTime":21.333333333333332,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg","page":null}],"frontMatter":{"slug":"sap-bpc","title":"SAP Business Planning and Consolidation (BPC)","date":"2023-10-04T00:00:00.000Z","authors":"pradeepkg","tags":["Collections","SQL","Database","SAP","BPC","Financial"],"keywords":["Collections","SQL","Database","SAP","BPC","Financial"],"draft":false},"unlisted":false,"lastUpdatedAt":1715729236000,"prevItem":{"title":"Cherwell","permalink":"/RSA/blog/cherwell"},"nextItem":{"title":"Kronos","permalink":"/RSA/blog/kronos"}},"content":"import logoPNG from \'@site/static/img/logos/SAP BPC - 180x180.png\';\\r\\nimport LinkSvg from \'../../iconmonstr-link-thin.svg\';\\r\\n\\r\\n<table> \\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\"><img src={logoPNG} width=\\"180\\" height=\\"180\\"/>SAP Business Planning and Consolidation (BPC) is an integrated financial planning and consolidation solution. It enables organizations to streamline budgeting, forecasting, and financial reporting processes. BPC helps in aligning financial plans with strategic goals, ensuring accurate data consolidation, and facilitating regulatory compliance for enhanced business decision-making and efficiency.<br /><br />Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u274c | Entitlements \u274c</td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## Application\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Application**.\\r\\n3. Click on **Create Application** and select **Other Application**.\\r\\n4. Enter the details as shown below.<br />![img](./img/1.png)\\r\\n5. Click **Finish**.\\r\\n---\\r\\n## Account Collector\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Applications**.\\r\\n3. Click on **SAP Business Planning and Consolidation**.\\r\\n4. Navigate to **Collectors** tab and click on **Create Account Collector**. Enter the details as shown below.<br /><br />![img](./img/2.png)\\r\\n5. Click **Next** and enter the database details. Use the *Test Connection* to make sure the connection details are accurate.<br /><br />![img](./img/3.png)\\r\\n6. Click Next. Select the appropriate data that you intend to collect.<br /><br />![img](./img/4.png)\\r\\n7. Click **Next**. On the **Account Data** page, enter the following query to collect account information.\\r\\n```sql\\r\\nSELECT \\r\\n  DISTINCT Users.UserID AS account, \\r\\n  Users.FullName CASE WHEN Users.Active = \'Y\' THEN 0 ELSE 1 END AS isDisabled, \\r\\n  (\\r\\n    SELECT \\r\\n      J.ProfileID \\r\\n    FROM \\r\\n      UserProfile J \\r\\n    WHERE \\r\\n      J.ProfileID = \'CreateJournal\' \\r\\n      AND J.UserID = Users.UserID\\r\\n  ) + \', \' + (\\r\\n    SELECT \\r\\n      J.ProfileID \\r\\n    FROM \\r\\n      UserProfile J \\r\\n    WHERE \\r\\n      J.ProfileID = \'PostJournal\' \\r\\n      AND J.UserID = Users.UserID\\r\\n  ) + \', \' + (\\r\\n    SELECT \\r\\n      J.ProfileID \\r\\n    FROM \\r\\n      UserProfile J \\r\\n    WHERE \\r\\n      J.ProfileID = \'UnpostJournal\' \\r\\n      AND J.UserID = Users.UserID\\r\\n  ) AS description \\r\\nFROM \\r\\n  tblUsers Users\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/5.png)\\r\\n\\r\\n8. Click **Next**. On the **User Account Mappings Data** configuration page enter the following query to map the SAP Business Planning and Consolidation account to user identity.\\r\\n```sql\\r\\nSELECT \\r\\n  DISTINCT UserID AS account, \\r\\n  CASE \\r\\n    WHEN UserID LIKE \'DS\\\\%\' \\r\\n    THEN SUBSTRING(UserID, CHARINDEX(\'\\\\\', UserID)+1, 500) + \' @dsp.local \'   \\r\\n    WHEN UserID LIKE \' US\\\\ % \' \\r\\n    THEN SUBSTRING(UserID, CHARINDEX(\' \\\\ \', UserID)+1, 500) + \' @us.company.com \'\\r\\n    ELSE UserID \\r\\n  END AS userID\\r\\nFROM \\r\\n  tblUsers\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/6.png)\\r\\n\\r\\n9. Click **Next**. In the **Group Data** configuration section enter the following query to collect groups from SAP Business Planning and Consolidation.\\r\\n```sql\\r\\nSELECT \\r\\n  DISTINCT TeamID AS groupName, \\r\\n  TeamDesc AS description, \\r\\n  NULL AS owner \\r\\nFROM \\r\\n  Teams \\r\\nWHERE \\r\\n  TeamID NOT LIKE \'OWN_%\' \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT \'Y-\' + UTA.MemberOfTeamID AS groupName, \\r\\n  (\\r\\n    SELECT \\r\\n      TeamDesc \\r\\n    FROM \\r\\n      Teams \\r\\n    WHERE \\r\\n      TeamID = UTA.MemberOfTeamID\\r\\n  ) AS description, \\r\\n  NULL AS owner \\r\\nFROM \\r\\n  UserTeamAssign UTA \\r\\nWHERE \\r\\n  UTA.TeamLeader = \'Y\' \\r\\n  AND UTA.MemberOfTeamID NOT LIKE \'OWN_%\' \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT ProfileID AS groupName, \\r\\n  ProfileDesc AS description, \\r\\n  REPLACE(Approver, \',\', \'\') AS owner \\r\\nFROM \\r\\n  Profiles \\r\\n  LEFT JOIN ER_ApproversbyGroup ON ProfileID = \\"Group\\"\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/7.png)\\r\\n\\r\\n10. In the **Account Membership Data** configuration section enter the following query to collect groups membership information from SAP Business Planning and Consolidation.\\r\\n```sql\\r\\nSELECT \\r\\n  DISTINCT UserOrTeamID AS account, \\r\\n  CASE WHEN TeamLeader = \'Y\' THEN \'Y-\' + MemberOfTeamID ELSE MemberofTeamID END AS groupName \\r\\nFROM \\r\\n  UserTeamAssign \\r\\nWHERE \\r\\n  IsATeam = \'N\' \\r\\n  AND TeamLeader = \'Y\' \\r\\n  AND MemberOfTeamID NOT LIKE \'OWN_%\' \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT UserOrTeamID AS account, \\r\\n  MemberOfTeamID AS groupName \\r\\nFROM \\r\\n  UserTeamAssign \\r\\nWHERE \\r\\n  IsATeam = \'N\' \\r\\n  AND TeamLeader <> \'Y\' \\r\\n  AND MemberOfTeamID NOT LIKE \'OWN_%\' \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT UserID AS account, \\r\\n  ProfileID AS groupName \\r\\nFROM \\r\\n  UserProfile\\r\\n```\\r\\n11. Click **Next**. In the **User Resolution Rules**, map the user to account.<br /><br />![img](img/8.png)\\r\\n12. Click **Next**. In the **Member Account Resolution Rules**, map the account collector.<br /><br />![img](img/9.png)\\r\\n13. Click **Finish**. Use the *Test* function to make sure the configurations are accurate.\\r\\n\\r\\n> <span class=\\"blog-id-text\\">COL020</span>"},{"id":"kronos","metadata":{"permalink":"/RSA/blog/kronos","source":"@site/blog/collections/kronos/kronos.mdx","title":"Kronos","description":"Kronos is a leading human capital and workforce management solution, streamlining workforce operations for organizations. It offers tools for scheduling, time tracking, payroll, and HR management, optimizing workforce efficiency and productivity.Identities \u274c | Accounts \u2714\ufe0f | Groups \u274c | App Roles \u2714\ufe0f | Entitlements \u274c","date":"2023-10-04T00:00:00.000Z","tags":[{"inline":true,"label":"Collections","permalink":"/RSA/blog/tags/collections"},{"inline":true,"label":"SQL","permalink":"/RSA/blog/tags/sql"},{"inline":true,"label":"Database","permalink":"/RSA/blog/tags/database"},{"inline":true,"label":"Kronos","permalink":"/RSA/blog/tags/kronos"},{"inline":true,"label":"HCM","permalink":"/RSA/blog/tags/hcm"}],"readingTime":22.133333333333333,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg","page":null}],"frontMatter":{"slug":"kronos","title":"Kronos","date":"2023-10-04T00:00:00.000Z","authors":"pradeepkg","tags":["Collections","SQL","Database","Kronos","HCM"],"keywords":["Collections","SQL","Database","Kronos","HCM"],"draft":false},"unlisted":false,"lastUpdatedAt":1715729236000,"prevItem":{"title":"SAP Business Planning and Consolidation (BPC)","permalink":"/RSA/blog/sap-bpc"},"nextItem":{"title":"AutoSys Workload Automation","permalink":"/RSA/blog/autosys"}},"content":"import logoPNG from \'@site/static/img/logos/Kronos - 180x180.png\';\\r\\nimport LinkSvg from \'../../iconmonstr-link-thin.svg\';\\r\\n\\r\\n<table> \\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\"><img src={logoPNG} width=\\"180\\" height=\\"180\\"/>Kronos is a leading human capital and workforce management solution, streamlining workforce operations for organizations. It offers tools for scheduling, time tracking, payroll, and HR management, optimizing workforce efficiency and productivity.<br /><br />Identities \u274c | Accounts \u2714\ufe0f | Groups \u274c | App Roles \u2714\ufe0f | Entitlements \u274c</td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## Application\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Application**.\\r\\n3. Click on **Create Application** and select **Other Application**.\\r\\n4. Enter the details as shown below.<br />![img](./img/1.png)\\r\\n5. Click **Finish**.\\r\\n---\\r\\n## Account Collector\\r\\nThis section explains the process for configuring an account collector for the Kronos application. We will use the SQL Server database collector for this purpose.   \\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Applications**.\\r\\n3. Click on **Kronos**.\\r\\n4. Navigate to **Collectors** tab and click on **Create Account Collector**. Enter the details as shown below.<br /><br />![img](./img/2.png)\\r\\n5. Click **Next** and enter the SQL Server database details. Use the Test Connection to make sure the connection details are accurate. Use the latest Microsoft JDBC Driver for SQL Server if NTLM authentication is required.<br /><br />![img](./img/3.png)\\r\\n6. Click Next. Select the appropriate data that you intend to collect. For the purpose of illustration we will collect accounts, groups and user to account mapping from Kronos.<br /><br />![img](./img/4.png)\\r\\n7. Click **Next**. On the **Account Data** page, enter the following query to collect account information.\\r\\n```sql\\r\\nSELECT\\r\\n  UA.USERACCOUNTNM AS accountID,\\r\\n  (\\r\\n  CASE\\r\\n    WHEN ua.consecbadlogoncnt < 0 THEN \'1\'\\r\\n    ELSE \'0\'\\r\\n  END\\r\\n  )\\r\\n  AS isLocked,\\r\\n  (\\r\\n  CASE\\r\\n    WHEN UA.USERACCOUNTSTATUS = \'Active\' THEN \'0\'\\r\\n    ELSE \'1\'\\r\\n  END\\r\\n  )\\r\\n  AS isDisabled\\r\\nFROM VP_USERACCOUNT UA\\r\\nLEFT JOIN VP_ALLPERSONV42 EE\\r\\n  ON UA.PERSONID = EE.PERSONID\\r\\nWHERE UA.PERSONID > 0\\r\\nORDER BY UA.USERACCOUNTNM\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/5.png)\\r\\n\\r\\n8. Click **Next**. On the **User Account Mappings Data** configuration page enter the following query to map the Kronos account to user identity.\\r\\n```sql\\r\\nSELECT\\r\\n  UA.USERACCOUNTNM AS accountID,\\r\\n  EE.PERSONNUM AS userID\\r\\nFROM VP_USERACCOUNT UA\\r\\nLEFT JOIN VP_ALLPERSONV42 EE\\r\\n  ON UA.PERSONID = EE.PERSONID\\r\\nWHERE UA.PERSONID > 0\\r\\nORDER BY UA.USERACCOUNTNM\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/6.png)\\r\\n\\r\\n9. Click **Next**. In the **User Resolution Rules**, map the user to account<br /><br />![img](img/7.png)\\r\\n10. Click **Finish**. Use the *Test* function to make sure the configurations are accurate.\\r\\n---\\r\\n## Entitlement Collector\\r\\nThis section explains the process for configuring an entitlement collector to collect admin roles from Kronos application. We will use the SQL Server database collector for this purpose.\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as AveksaAdmin.\\r\\n2. Navigate to **Resources > Applications**.\\r\\n3. Click on **Kronos**.\\r\\n4. Navigate to **Collectors** tab and click on ***Create Entitlement Collector***. Enter the details as shown below.<br /><br />![Alt text](img/8.png)\\r\\n5. Click **Next** and enter the database connection details as shown in Step 5 of [Account Collector](#account-collector).\\r\\n6. Click **Next**. Select the data types that the collector will be collecting from Kronos.<br /><br />![Alt text](img/9.png)\\r\\n7. Click **Next**. On the **General Column Names**, map the attribute names.<br /><br />![Alt text](img/10.png)\\r\\n8. Click **Next**. Under **Application Role Data** section, use the following query to collect admin roles from Kronos.\\r\\n```sql\\r\\nSELECT DISTINCT\\r\\n  PROFILENM AS role,\\r\\n  PROFILEDSC AS description\\r\\nFROM ACCESSPROFILE\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/11.png)\\r\\n\\r\\n9. Click **Next**. On the **Account Data** section, enter the query below to collect mappings for account to roles.\\r\\n```sql\\r\\nSELECT\\r\\n  UA.USERACCOUNTNM AS account,\\r\\n  EE.ACCESSPROFILENM AS role\\r\\nFROM VP_USERACCOUNT UA\\r\\nLEFT JOIN VP_ALLPERSONV42 EE\\r\\n  ON UA.PERSONID = EE.PERSONID\\r\\nWHERE UA.PERSONID > 0\\r\\nORDER BY UA.USERACCOUNTNM\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\n10. Click **Next**. In the User Evaluation, map the account to the ADC.\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <th>Associated account collector</th>\\r\\n    <th>Account value evaluates to</th>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <th>Kronos ADC</th>\\r\\n    <th>Account Name</th>\\r\\n  </tr>\\r\\n</table>\\r\\n11. Click **Next** and then click **Finish**. Use the *Test* function to make sure the configurations are accurate.\\r\\n\\r\\n> <span class=\\"blog-id-text\\">COL019</span>"},{"id":"autosys","metadata":{"permalink":"/RSA/blog/autosys","source":"@site/blog/collections/autosys/autosys.mdx","title":"AutoSys Workload Automation","description":"AutoSys Workload Automation (formerly CA Workload Automation AE) improves the availability of critical application workloads across the enterprise by dynamically responding to real time business events, mapping workload processes to service level agreements, ensuring continual monitoring, and automating recovery.Also known as Unicenter AutoSys Job ManagementIdentities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u274c | Entitlements \u274c","date":"2023-10-03T00:00:00.000Z","tags":[{"inline":true,"label":"Collections","permalink":"/RSA/blog/tags/collections"},{"inline":true,"label":"SQL","permalink":"/RSA/blog/tags/sql"},{"inline":true,"label":"Database","permalink":"/RSA/blog/tags/database"},{"inline":true,"label":"CA","permalink":"/RSA/blog/tags/ca"},{"inline":true,"label":"AutoSys","permalink":"/RSA/blog/tags/auto-sys"},{"inline":true,"label":"Automation","permalink":"/RSA/blog/tags/automation"}],"readingTime":14.933333333333334,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg","page":null}],"frontMatter":{"slug":"autosys","title":"AutoSys Workload Automation","date":"2023-10-03T00:00:00.000Z","authors":"pradeepkg","tags":["Collections","SQL","Database","CA","AutoSys","Automation"],"keywords":["Collections","SQL","Database","CA","AutoSys","Automation"],"draft":false},"unlisted":false,"lastUpdatedAt":1715729236000,"prevItem":{"title":"Kronos","permalink":"/RSA/blog/kronos"},"nextItem":{"title":"Informatica","permalink":"/RSA/blog/informatica"}},"content":"import logoPNG from \'@site/static/img/logos/CA - 180x180.png\';\\r\\nimport LinkSvg from \'../../iconmonstr-link-thin.svg\';\\r\\n\\r\\n<table> \\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\"><img src={logoPNG} width=\\"180\\" height=\\"180\\"/>AutoSys Workload Automation (formerly CA Workload Automation AE) improves the availability of critical application workloads across the enterprise by dynamically responding to real time business events, mapping workload processes to service level agreements, ensuring continual monitoring, and automating recovery.<br /><br />Also known as Unicenter AutoSys Job Management<br /><br />Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u274c | Entitlements \u274c</td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## Application\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Application**.\\r\\n3. Click on **Create Application** and select **Other Application**.\\r\\n4. Enter the details as shown below.<br />![img](./img/1.png)\\r\\n5. Click **Finish**.\\r\\n---\\r\\n## Account Collector\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Applications**.\\r\\n3. Click on **CA Workload Automation**.\\r\\n4. Navigate to **Collectors** tab and click on **Create Account Collector**. Enter the details as shown below.<br /><br />![img](./img/2.png)\\r\\n5. Click **Next** and enter the Oracle database details. Use the *Test Connection* to make sure the connection details are accurate.<br /><br />![img](./img/3.png)\\r\\n6. Click Next. Select the appropriate data that you intend to collect.<br /><br />![img](./img/4.png)\\r\\n7. Click **Next**. On the **Account Data** page, enter the following query to collect account information.\\r\\n```sql\\r\\nSELECT \\r\\n  DISPLAY_ID as accountID, \\r\\n  CASE WHEN LOCK_ID = 2 THEN 1 ELSE 0 END as isLocked \\r\\nFROM \\r\\n  WA.ESP_USER\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/5.png)\\r\\n\\r\\n8. Click **Next**. On the **User Account Mappings Data** configuration page enter the following query to map the CA Workload Automation account to user identity.\\r\\n```sql\\r\\nSELECT\\r\\n  DISPLAY_ID as accountID,\\r\\n  DISPLAY_ID as userID\\r\\nFROM\\r\\n  WA.ESP_USER\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/6.png)\\r\\n\\r\\n9. Click **Next**. In the **Group Data** configuration section enter the following query to collect groups from CA Workload Automation.\\r\\n```sql\\r\\nSELECT\\r\\n  DISTINCT NAME as groupName,\\r\\n  GROUP_ID as groupID,\\r\\n  DESCRIPTION as description\\r\\nFROM\\r\\n  WA.ESP_GROUP\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/7.png)\\r\\n\\r\\n10. In the **Account Membership Data** configuration section enter the following query to collect groups membership information from CA Workload Automation.\\r\\n```sql\\r\\nSELECT \\r\\n  DISTINCT groups.NAME as groupName, \\r\\n  users.DISPLAY_ID as accountID \\r\\nFROM \\r\\n  WA.ESP_GROUP groups \\r\\n  INNER JOIN WA.ESP_USERGROUP members ON members.GROUP_ID = groups.GROUP_ID \\r\\n  INNER JOIN WA.ESP_USER users ON users.USER_ID = members.USER_ID\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\n11. Click **Next**. In the **User Resolution Rules**, map the user to account<br /><br />![img](img/8.png)\\r\\n12. Click **Next**. In the **Member Account Resolution Rules**, map the account collector.\\r\\n<table class=\\"table-container\\">\\r\\n  <tr>\\r\\n    <th>Target Collector</th>\\r\\n    <th>Account Attribute</th>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <th>CA Workload Automation ADC</th>\\r\\n    <th>Account Name</th>\\r\\n  </tr>\\r\\n</table>\\r\\n13. Click **Finish**. Use the *Test* function to make sure the configurations are accurate.\\r\\n\\r\\n> <span class=\\"blog-id-text\\">COL018</span>"},{"id":"informatica","metadata":{"permalink":"/RSA/blog/informatica","source":"@site/blog/collections/informatica/informatica.mdx","title":"Informatica","description":"Informatica is a leading data integration and management software, empowering organizations to extract, transform, and load data for efficient analysis and decision-making. It facilitates seamless integration of disparate data sources, ensuring data quality and governance throughout the process.Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u274c | Entitlements \u274c","date":"2023-10-03T00:00:00.000Z","tags":[{"inline":true,"label":"Collections","permalink":"/RSA/blog/tags/collections"},{"inline":true,"label":"SQL","permalink":"/RSA/blog/tags/sql"},{"inline":true,"label":"Database","permalink":"/RSA/blog/tags/database"},{"inline":true,"label":"Informatica","permalink":"/RSA/blog/tags/informatica"},{"inline":true,"label":"ETL","permalink":"/RSA/blog/tags/etl"}],"readingTime":27.766666666666666,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg","page":null}],"frontMatter":{"slug":"informatica","title":"Informatica","date":"2023-10-03T00:00:00.000Z","authors":"pradeepkg","tags":["Collections","SQL","Database","Informatica","ETL"],"keywords":["Collections","SQL","Database","Informatica","ETL"],"draft":false},"unlisted":false,"lastUpdatedAt":1715729236000,"prevItem":{"title":"AutoSys Workload Automation","permalink":"/RSA/blog/autosys"},"nextItem":{"title":"OpenText RightFax","permalink":"/RSA/blog/rightfax"}},"content":"import logoPNG from \'@site/static/img/logos/Informatica - 180x180.png\';\\r\\nimport LinkSvg from \'../../iconmonstr-link-thin.svg\';\\r\\n\\r\\n<table> \\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\"><img src={logoPNG} width=\\"180\\" height=\\"180\\"/>Informatica is a leading data integration and management software, empowering organizations to extract, transform, and load data for efficient analysis and decision-making. It facilitates seamless integration of disparate data sources, ensuring data quality and governance throughout the process.<br /><br />Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u274c | Entitlements \u274c</td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## Application\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Application**.\\r\\n3. Click on **Create Application** and select **Other Application**.\\r\\n4. Enter the details as shown below.<br />![img](./img/1.png)\\r\\n5. Click **Finish**.\\r\\n---\\r\\n## Account Collector\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Applications**.\\r\\n3. Click on **Informatica**.\\r\\n4. Navigate to **Collectors** tab and click on **Create Account Collector**. Enter the details as shown below.<br /><br />![img](./img/2.png)\\r\\n5. Click **Next** and enter the Oracle database details. Use the *Test Connection* to make sure the connection details are accurate.<br /><br />![img](./img/3.png)\\r\\n6. Click Next. Select the appropriate data that you intend to collect.<br /><br />![img](./img/4.png)\\r\\n7. Click **Next**. On the **Account Data** page, enter the following query to collect account information.\\r\\n```sql\\r\\nSELECT\\r\\n  a.pos_name accountID,\\r\\n  b.pou_fullname fullName,\\r\\n  a.groupName groupName,\\r\\n  a.poi_securitydomain securityDomain\\r\\nFROM\\r\\n  (\\r\\n    SELECT\\r\\n      poi3.poi_userinfo,\\r\\n      poi2.psi_discriminator,\\r\\n      poi2.pos_name,\\r\\n      poi1.pos_name groupName,\\r\\n      poi2.poi_securitydomain\\r\\n    FROM\\r\\n      PO_IDOBJ poi1,\\r\\n      PO_IDOBJ poi2,\\r\\n      PO_IDOBJ poi3\\r\\n    WHERE\\r\\n      poi1.poi_securitydomain = \'Native\'\\r\\n      AND poi1.psi_discriminator LIKE \'GROUP\'\\r\\n      AND poi2.psi_container = poi1.psi_container\\r\\n      AND poi3.pos_name = poi2.pos_name\\r\\n      AND poi3.psi_discriminator = \'LDAPUSER\'\\r\\n      AND poi3.poi_securitydomain = poi2.poi_securitydomain\\r\\n    ORDER BY\\r\\n      poi1.pos_name,\\r\\n      poi2.pos_name\\r\\n  ) a,\\r\\n  PO_USERINFO b\\r\\nWHERE\\r\\n  a.poi_userinfo = b.psu_opid\\r\\n  AND a.groupName <> \'Everyone\'\\r\\nORDER BY\\r\\n  a.pos_name\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/5.png)\\r\\n\\r\\n8. Click **Next**. On the **User Account Mappings Data** configuration page enter the following query to map the Informatica account to user identity.\\r\\n```sql\\r\\nSELECT\\r\\n  DISTINCT(accountID),\\r\\n  accountID AS userID,\\r\\n  fullName\\r\\nFROM\\r\\n  (\\r\\n    SELECT\\r\\n      a.pos_name accountID,\\r\\n      B.POU_FULLNAME fullName,\\r\\n      a.groupName groupName,\\r\\n      a.poi_securitydomain securityDomain\\r\\n    FROM\\r\\n      (\\r\\n        SELECT\\r\\n          poi3.poi_userinfo,\\r\\n          poi2.psi_discriminator,\\r\\n          poi2.pos_name,\\r\\n          poi1.pos_name groupName,\\r\\n          poi2.poi_securitydomain\\r\\n        FROM\\r\\n          PO_IDOBJ poi1,\\r\\n          PO_IDOBJ poi2,\\r\\n          PO_IDOBJ poi3\\r\\n        WHERE\\r\\n          poi1.poi_securitydomain = \'Native\'\\r\\n          AND poi1.psi_discriminator LIKE \'GROUP\'\\r\\n          AND poi2.psi_container = poi1.psi_container\\r\\n          AND poi3.pos_name = poi2.pos_name\\r\\n          AND poi3.psi_discriminator = \'LDAPUSER\'\\r\\n          AND poi3.poi_securitydomain = poi2.poi_securitydomain\\r\\n        ORDER BY\\r\\n          poi1.pos_name,\\r\\n          poi2.pos_name\\r\\n      ) a,\\r\\n      po_userinfo b\\r\\n    WHERE\\r\\n      a.poi_userinfo = b.psu_opid\\r\\n      AND a.groupName <> \'Everyone\'\\r\\n    ORDER BY\\r\\n      pos_name\\r\\n  )\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/6.png)\\r\\n\\r\\n9. Click **Next**. In the **Group Data** configuration section enter the following query to collect groups from Informatica.\\r\\n```sql\\r\\n(\\r\\n  SELECT\\r\\n    groupName,\\r\\n    REPLACE(\\r\\n      \'<p>The group gives access to folders:<br />\' || RTRIM(\\r\\n        XMLAGG(\\r\\n          XMLELEMENT(E, PERMISSIONS, \';\').EXTRACT(\'//text()\')\\r\\n          ORDER BY\\r\\n            PERMISSIONS\\r\\n        ).GetClobVal(),\\r\\n        \'<br />\'\\r\\n      ) || \'</p>\',\\r\\n      \';\',\\r\\n      \'<br />\'\\r\\n    ) AS description\\r\\n  FROM\\r\\n    (\\r\\n      SELECT\\r\\n        groupName,\\r\\n        FOLDER_NAME || \': \' || PERMISSIONS AS PERMISSIONS\\r\\n      FROM\\r\\n        (\\r\\n          SELECT\\r\\n            \'REP_ICOE_TEST\' AS REPOSITORY,\\r\\n            subj.subj_name folder_name,\\r\\n            user_group.NAME groupName,\\r\\n            CASE\\r\\n              WHEN (\\r\\n                (\\r\\n                  obj_access.permissions - (obj_access.accountID + 1)\\r\\n                ) IN (8, 16)\\r\\n              ) THEN \'READ\'\\r\\n              WHEN (\\r\\n                (\\r\\n                  obj_access.permissions - (obj_access.accountID + 1)\\r\\n                ) IN (10, 20)\\r\\n              ) THEN \'READ,  EXECUTE\'\\r\\n              WHEN (\\r\\n                (\\r\\n                  obj_access.permissions - (obj_access.accountID + 1)\\r\\n                ) IN (12, 24)\\r\\n              ) THEN \'READ, WRITE\'\\r\\n              WHEN (\\r\\n                (\\r\\n                  obj_access.permissions - (obj_access.accountID + 1)\\r\\n                ) IN (14, 28)\\r\\n              ) THEN \'READ, WRITE, EXECUTE\'\\r\\n              ELSE \'NO PERMISSIONS\'\\r\\n            END permissions\\r\\n          FROM\\r\\n            ETLREPT.opb_object_access obj_access,\\r\\n            ETLREPT.opb_subject subj,\\r\\n            ETLREPT.opb_user_group user_group\\r\\n          WHERE\\r\\n            obj_access.object_type = 29\\r\\n            AND obj_access.object_id = subj.subj_id\\r\\n            AND obj_access.accountID = user_group.ID\\r\\n            AND obj_access.user_type = user_group.TYPE\\r\\n            AND obj_access.user_type = 2\\r\\n            AND user_group.NAME LIKE \'GRP%\'\\r\\n          UNION\\r\\n          SELECT\\r\\n            \'REP_ICOE_TEST2\' AS REPOSITORY,\\r\\n            subj.subj_name folder_name,\\r\\n            user_group.NAME groupName,\\r\\n            CASE\\r\\n              WHEN (\\r\\n                (\\r\\n                  obj_access.permissions - (obj_access.accountID + 1)\\r\\n                ) IN (8, 16)\\r\\n              ) THEN \'READ\'\\r\\n              WHEN (\\r\\n                (\\r\\n                  obj_access.permissions - (obj_access.accountID + 1)\\r\\n                ) IN (10, 20)\\r\\n              ) THEN \'READ,  EXECUTE\'\\r\\n              WHEN (\\r\\n                (\\r\\n                  obj_access.permissions - (obj_access.accountID + 1)\\r\\n                ) IN (12, 24)\\r\\n              ) THEN \'READ, WRITE\'\\r\\n              WHEN (\\r\\n                (\\r\\n                  obj_access.permissions - (obj_access.accountID + 1)\\r\\n                ) IN (14, 28)\\r\\n              ) THEN \'READ, WRITE, EXECUTE\'\\r\\n              ELSE \'NO PERMISSIONS\'\\r\\n            END permissions\\r\\n          FROM\\r\\n            ETLREP2T.opb_object_access obj_access,\\r\\n            ETLREP2T.opb_subject subj,\\r\\n            ETLREP2T.opb_user_group user_group\\r\\n          WHERE\\r\\n            obj_access.object_type = 29\\r\\n            AND obj_access.object_id = subj.subj_id\\r\\n            AND obj_access.accountID = user_group.ID\\r\\n            AND obj_access.user_type = user_group.TYPE\\r\\n            AND obj_access.user_type = 2\\r\\n            AND user_group.NAME LIKE \'GRP%\'\\r\\n        )\\r\\n    )\\r\\n  GROUP BY\\r\\n    groupName\\r\\n)\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/7.png)\\r\\n\\r\\n10. In the **Account Membership Data** configuration section enter the following query to collect groups membership information from Informatica.\\r\\n```sql\\r\\nSELECT\\r\\n  a.pos_name accountID,\\r\\n  B.POU_FULLNAME fullName,\\r\\n  a.groupName groupName,\\r\\n  a.poi_securitydomain securityDomain\\r\\nFROM\\r\\n  (\\r\\n    SELECT\\r\\n      poi3.poi_userinfo,\\r\\n      poi2.psi_discriminator,\\r\\n      poi2.pos_name,\\r\\n      poi1.pos_name groupName,\\r\\n      poi2.poi_securitydomain\\r\\n    FROM\\r\\n      PO_IDOBJ poi1,\\r\\n      PO_IDOBJ poi2,\\r\\n      PO_IDOBJ poi3\\r\\n    WHERE\\r\\n      poi1.poi_securitydomain = \'Native\'\\r\\n      AND poi1.psi_discriminator LIKE \'GROUP\'\\r\\n      AND poi2.psi_container = poi1.psi_container\\r\\n      AND poi3.pos_name = poi2.pos_name\\r\\n      AND poi3.psi_discriminator = \'LDAPUSER\'\\r\\n      AND poi3.poi_securitydomain = poi2.poi_securitydomain\\r\\n    ORDER BY\\r\\n      poi1.pos_name,\\r\\n      poi2.pos_name\\r\\n  ) a,\\r\\n  po_userinfo b\\r\\nWHERE\\r\\n  a.poi_userinfo = b.psu_opid\\r\\n  AND a.groupName <> \'Everyone\'\\r\\nORDER BY\\r\\n  pos_name\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\u200d\\r\\n```\\r\\n11. Click **Next**. In the **User Resolution Rules**, map the user to account.<br /><br />![img](img/8.png)\\r\\n12. Click **Next**. In the **Member Account Resolution Rules**, map the account collector.<br /><br />![img](img/9.png)\\r\\n13. Click **Finish**. Use the *Test* function to make sure the configurations are accurate.\\r\\n\\r\\n> <span class=\\"blog-id-text\\">COL017</span>"},{"id":"rightfax","metadata":{"permalink":"/RSA/blog/rightfax","source":"@site/blog/collections/rightfax/rightfax.mdx","title":"OpenText RightFax","description":"OpenText RightFax is a robust fax server software that enables organizations to send and receive faxes digitally. It eliminates the need for traditional fax machines and paper-based communication, streamlining document transmission processes. RightFax offers secure, reliable, and scalable faxing solutions, integrating seamlessly with email and other business applications. It provides advanced features like automated routing, archiving, and tracking, enhancing efficiency and compliance. With its user-friendly interface and extensive capabilities, RightFax revolutionizes fax communication, optimizing productivity and reducing costs for businesses of all sizes.Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u274c | Entitlements \u274c","date":"2023-10-02T00:00:00.000Z","tags":[{"inline":true,"label":"Collections","permalink":"/RSA/blog/tags/collections"},{"inline":true,"label":"SQL","permalink":"/RSA/blog/tags/sql"},{"inline":true,"label":"Database","permalink":"/RSA/blog/tags/database"},{"inline":true,"label":"Fax","permalink":"/RSA/blog/tags/fax"},{"inline":true,"label":"OpenText","permalink":"/RSA/blog/tags/open-text"},{"inline":true,"label":"RightFax","permalink":"/RSA/blog/tags/right-fax"}],"readingTime":16.633333333333333,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg","page":null}],"frontMatter":{"slug":"rightfax","title":"OpenText RightFax","date":"2023-10-02T00:00:00.000Z","authors":"pradeepkg","tags":["Collections","SQL","Database","Fax","OpenText","RightFax"],"keywords":["Collections","SQL","Database","Fax","OpenText","RightFax"],"draft":false},"unlisted":false,"lastUpdatedAt":1715729236000,"prevItem":{"title":"Informatica","permalink":"/RSA/blog/informatica"},"nextItem":{"title":"Freshservice","permalink":"/RSA/blog/freshservice"}},"content":"import logoPNG from \'@site/static/img/logos/OpenText RightFax - 180x180.png\';\\r\\nimport LinkSvg from \'../../iconmonstr-link-thin.svg\';\\r\\n\\r\\n<table> \\r\\n  <tr>\\r\\n    <td width=\\"180\\" class=\\"image-cell\\"><img src={logoPNG} width=\\"180\\" height=\\"180\\"/>OpenText RightFax is a robust fax server software that enables organizations to send and receive faxes digitally. It eliminates the need for traditional fax machines and paper-based communication, streamlining document transmission processes. RightFax offers secure, reliable, and scalable faxing solutions, integrating seamlessly with email and other business applications. It provides advanced features like automated routing, archiving, and tracking, enhancing efficiency and compliance. With its user-friendly interface and extensive capabilities, RightFax revolutionizes fax communication, optimizing productivity and reducing costs for businesses of all sizes.<br /><br />Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u274c | Entitlements \u274c</td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## Application\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Application**.\\r\\n3. Click on **Create Application** and select **Other Application**.\\r\\n4. Enter the details as shown below.<br />![img](./img/1.png)\\r\\n5. Click **Finish**.\\r\\n---\\r\\n## Account Collector\\r\\nThis section explains the process for configuring an account collector for the RightFax application. We will use the SQL Server database collector for this purpose.\\r\\n\\r\\n**Steps**\\r\\n1. Login to RSA G&L console as System Administrator.\\r\\n2. Navigate to **Resources > Applications**.\\r\\n3. Click on **RightFax**.\\r\\n4. Navigate to **Collectors** tab and click on **Create Account Collector**. Enter the details as shown below.<br /><br />![img](./img/2.png)\\r\\n5. Click **Next** and enter the Oracle database details. Use the *Test Connection* to make sure the connection details are accurate.<br /><br />![img](./img/3.png)\\r\\n6. Click Next. Select the appropriate data that you intend to collect.<br /><br />![img](./img/4.png)\\r\\n7. Click **Next**. On the **Account Data** page, enter the following query to collect account information.\\r\\n```sql\\r\\nSELECT \\r\\n  DISTINCT UserID as account, \\r\\n  UserName as displayName \\r\\nFROM \\r\\n  RightFax.dbo.users \\r\\nWHERE \\r\\n  UserID NOT LIKE \'FAX-%\'\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/5.png)\\r\\n\\r\\n8. Click **Next**. On the **User Account Mappings Data** configuration page enter the following query to map the RightFax account to user identity.\\r\\n```sql\\r\\nSELECT \\r\\n  DISTINCT UserID as account, \\r\\n  UserID \\r\\nFROM \\r\\n  RightFax.dbo.users \\r\\nWHERE \\r\\n  UserID NOT LIKE \'FAX-%\'\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/6.png)\\r\\n\\r\\n9. Click **Next**. In the **Group Data** configuration section enter the following query to collect groups from RightFax.\\r\\n```sql\\r\\nSELECT \\r\\n  DISTINCT GroupID as groupName, \\r\\n  handle \\r\\nFROM \\r\\n  [RightFax].[dbo].[Groups] \\r\\nUNION \\r\\nSELECT \\r\\n  DISTINCT \'Application Access\' as groupName, \\r\\n  NULL AS handle \\r\\nFROM \\r\\n  [RightFax].[dbo].[Groups]\\r\\n```\\r\\nThe following are the important attributes<br /><br />![img](img/7.png)\\r\\n\\r\\n10. In the **Account Membership Data** configuration section enter the following query to collect groups membership information from RightFax.\\r\\n```sql\\r\\nSELECT \\r\\n  DISTINCT U.UserID as account, \\r\\n  G.GroupID as groupName \\r\\nFROM \\r\\n  RightFax.dbo.users U \\r\\n  LEFT JOIN RightFax.dbo.groups G ON U.GroupID = G.handle \\r\\nSELECT \\r\\n  DISTINCT U.UserID as account, \\r\\n  \'Basic Access\' as groupName \\r\\nFROM \\r\\n  RightFax.dbo.users U\\r\\n```\\r\\n11. Click **Next**. In the **User Resolution Rules**, map the user to account<br /><br />![img](img/8.png)\\r\\n12. Click **Next**. In the **Member Account Resolution Rules**, map the account collector.<br /><br />![img](img/9.png)\\r\\n13. Click **Finish**. Use the *Test* function to make sure the configurations are accurate.\\r\\n\\r\\n> <span class=\\"blog-id-text\\">COL016</span>"},{"id":"freshservice","metadata":{"permalink":"/RSA/blog/freshservice","source":"@site/blog/collections/freshservice/freshservice.md","title":"Freshservice","description":"Freshservice is a cloud-based IT service management platform that streamlines and automates IT tasks. It offers a user-friendly interface, ticketing system, asset management, and reporting tools. With its intuitive design, Freshservice enables organizations to efficiently manage their IT services, track incidents, and maintain a well-organized IT infrastructure.Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u2714\ufe0f | Entitlements \u274c","date":"2023-07-01T00:00:00.000Z","tags":[{"inline":true,"label":"Collections","permalink":"/RSA/blog/tags/collections"},{"inline":true,"label":"REST","permalink":"/RSA/blog/tags/rest"},{"inline":true,"label":"ITSM","permalink":"/RSA/blog/tags/itsm"},{"inline":true,"label":"SaaS","permalink":"/RSA/blog/tags/saa-s"},{"inline":true,"label":"Freshservice","permalink":"/RSA/blog/tags/freshservice"},{"inline":true,"label":"Ticketing","permalink":"/RSA/blog/tags/ticketing"}],"readingTime":34.06666666666667,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg","page":null}],"frontMatter":{"slug":"freshservice","title":"Freshservice","date":"2023-07-01T00:00:00.000Z","authors":"pradeepkg","tags":["Collections","REST","ITSM","SaaS","Freshservice","Ticketing"],"keywords":["Collections","REST","ITSM","SaaS","Freshservice","Ticketing"]},"unlisted":false,"lastUpdatedAt":1715729236000,"prevItem":{"title":"OpenText RightFax","permalink":"/RSA/blog/rightfax"}},"content":"import logoPNG from \'@site/static/img/logos/Freshservice - 180x180.png\';\\nimport LinkSvg from \'../../iconmonstr-link-thin.svg\';\\n\\n<table>\\n  <tr>\\n    <td width=\\"200\\" class=\\"image-cell\\"><img src={logoPNG} width=\\"180\\" height=\\"180\\"/></td>\\n    <td>Freshservice is a cloud-based IT service management platform that streamlines and automates IT tasks. It offers a user-friendly interface, ticketing system, asset management, and reporting tools. With its intuitive design, Freshservice enables organizations to efficiently manage their IT services, track incidents, and maintain a well-organized IT infrastructure.<br /><br />**Identities \u274c | Accounts \u2714\ufe0f | Groups \u2714\ufe0f | App Roles \u2714\ufe0f | Entitlements \u274c**</td>\\n  </tr>\\n  <tr>\\n    <td style={{ textAlign: \'right\' }} colspan=\\"2\\">\\n      <a href=\\"https://payhip.com/b/cyaHk\\" className=\\"custom-button\\" target=\\"_blank\\">Get Full Guide</a>\\n    </td>\\n  </tr>\\n</table>\\n\\n\x3c!-- truncate --\x3e\\n\\n## Overview\\n\\n**Users** are individuals who interact with the Freshservice platform. They can submit tickets, access knowledge articles, and perform various actions based on their assigned roles and permissions. Each user has a unique account tied to their email, and they can be assigned to specific groups or roles.\\n\\n**Groups** are collections of users with similar roles, responsibilities, or access requirements. By grouping users together, you can streamline permissions and ensure that specific information or functionalities are available to the right people. For instance, you might have a \\"Support Team\\" group that has access to support-related features.\\n\\n**Roles** define the level of access and permissions a user or a group of users has within Freshservice. Roles determine what actions users can perform and what information they can view or modify. Freshservice typically offers predefined roles like agents, admins, and requesters, each with distinct sets of privileges.\\n\\n## Application\\n\\n**Steps**\\n1. Login to RSA G&L console as System Administrator.\\n2. Navigate to **Resources > Application**.\\n3. Click on **Create Application** and select **Other Application**.\\n4. Enter the details as shown below.<br></br>![img](./img/1.png)\\n5. Click **Finish**.\\n---\\n## Account Collector\\nThis section explains the process for configuring an account collector for the Freshservice application. We will use the RSA G&L Generic REST collector [^API] for this purpose.  \\n\\n**Steps**\\n1. Login to RSA G&L console as System Administrator.\\n2. Navigate to **Resources > Applications**.\\n3. Click on **Freshservice**.\\n4. Navigate to **Collectors** tab and click on **Create Account Collector**. Enter the details as shown below.<br></br><br></br>![img](./img/2.png)\\n5. Click **Next** and enter the connection details. Freshservice supports Basic Access Authorization only with API key [^Authentication]. The API key will be configured as user name and you can provide arbitrary password.<br></br><br></br>![img](img/3.png)\\n6. Click **Next**. Select the data types that the collector will be collecting from Freshservice<br></br><br></br>![img](img/4.png)\\n7. Click **Next**. On the **Account Data** page, enter the following configurations.<br></br><br></br>![Alt text](img/5.png)<br></br>![Alt text](img/6.png)<br></br>![Alt text](img/7.png)<br></br>\\n<p align=\\"center\\"></p>\\n<table class=\\"table-container\\">\\n  <tr>\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request</span></td>\\n  </tr>\\n  <tr>\\n    <td>Method</td>\\n    <td><span class=\\"method-get\\">GET</span></td>\\n  </tr>\\n  <tr>\\n    <td>URL</td>\\n    <td>`/api/v2/agents`</td>\\n  </tr>\\n  <tr>\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\n  </tr>\\n  <tr>\\n    <td>Accept</td>\\n    <td>`application/json`</td>\\n  </tr>\\n  <tr>\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Response Mappings</span></td>\\n  </tr>\\n  <tr>\\n    <td>AccountId</td>\\n    <td>`$.agents[*].email`</td>\\n  </tr>\\n  <tr>\\n    <td>Id</td>\\n    <td>`$.agents[*].id`</td>\\n  </tr>\\n  <tr>\\n    <td>ExternalID</td>\\n    <td>`$.agents[*].external_id`</td>\\n  </tr>\\n</table>\\n<p></p>\\n8. Click **Next**. On the **Group Data** page, enter the following configurations.<br></br><br></br>![Alt text](img/8.png)<br></br>![Alt text](img/6.png)<br></br>![Alt text](img/9.png)<br></br>\\n<table class=\\"table-container\\">\\n  <tr>\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request</span></td>\\n  </tr>\\n  <tr>\\n    <td>Method</td>\\n    <td><span class=\\"method-get\\">GET</span></td>\\n  </tr>\\n  <tr>\\n    <td>URL</td>\\n    <td>`/api/v2/groups`</td>\\n  </tr>\\n  <tr>\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\n  </tr>\\n  <tr>\\n    <td>Accept</td>\\n    <td>`application/json`</td>\\n  </tr>\\n  <tr>\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Response Mappings</span></td>\\n  </tr>\\n  <tr>\\n    <td>GroupId</td>\\n    <td>`$.groups[*].name`</td>\\n  </tr>\\n  <tr>\\n    <td>Id</td>\\n    <td>`$.groups[*].id`</td>\\n  </tr>\\n  <tr>\\n    <td>Description</td>\\n    <td>`$.groups[*].description`</td>\\n  </tr>\\n</table>\\n9. Click **Next**. On the **Account Group Membership**\xa0page, enter the following configurations.<br></br><br></br>![Alt text](img/10.png)<br></br>![Alt text](img/11.png)<br></br>\\n<table class=\\"table-container\\">\\n  <tr>\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request</span></td>\\n  </tr>\\n  <tr>\\n    <td>Method</td>\\n    <td><span class=\\"method-get\\">GET</span></td>\\n  </tr>\\n  <tr>\\n    <td>URL</td>\\n    <td>`/api/v2/groups/${Id}`</td>\\n  </tr>\\n  <tr>\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\n  </tr>\\n  <tr>\\n    <td>Accept</td>\\n    <td>`application/json`</td>\\n  </tr>\\n  <tr>\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Response Mappings</span></td>\\n  </tr>\\n  <tr>\\n    <td>AccountId</td>\\n    <td>`$.group.members.*`</td>\\n  </tr>\\n</table>\\n10. Click\xa0**Next**. In the **Map Collector Attributes to Account Attributes**, map the collected account attributes.<br></br><br></br>![Alt text](img/12.png)\\n11. Click **Next**. In the **Map Collector Attributes to Account Mapping Attributes**, map the user reference attribute.<br></br><br></br>![Alt text](img/13.png)\\n12. Click **Next**. In the **Map Collector Attributes to Group Attributes**, map the collected group attributes.<br></br><br></br>![Alt text](img/14.png)\\n13. Click **Next**. In the **User Resolution Rules**, map the user to account.<br></br><br></br>![Alt text](img/15.png)\\n14. Click **Next**. In the **Member Account Resolution Rules**, map the account.<br></br><br></br>![Alt text](img/16.png)\\n:::note Important\\nThis value MUST always be mapped to the Account Name for any generic REST collector.\\n:::\\n15. Click **Finish**. Use the `Test` function to make sure the configurations are accurate.\\n---\\n## Entitlement Collector\\nThis section explains the process for configuring an entitlement collector to collect roles from Freshservice application. We will use the RSA G&L Generic REST collector for this purpose.\\n\\n**Steps**\\n1. Login to RSA G&L console as AveksaAdmin.\\n2. Navigate to **Resources > Applications**.\\n3. Click on **Freshservice**.\\n4. Navigate to **Collectors** tab and click on ***Create Entitlement Collector***. Enter the details as shown below.<br></br><br></br>![Alt text](img/17.png)\\n5. Click **Next** and enter the connection details as shown in Step 5 of [Account Collector](#account-collector).\\n6. Click **Next**. Select the data types that the collector will be collecting from Freshservice.<br></br><br></br>![Alt text](img/18.png)\\n7. Click **Next**. On the **App Role Data** page, enter the following configurations.<br></br><br></br>![Alt text](img/19.png)<br></br>![Alt text](img/6.png)<br></br>![Alt text](img/20.png)<br></br>\\n<table class=\\"table-container\\">\\n  <tr>\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request</span></td>\\n  </tr>\\n  <tr>\\n    <td>Method</td>\\n    <td><span class=\\"method-get\\">GET</span></td>\\n  </tr>\\n  <tr>\\n    <td>URL</td>\\n    <td>`/api/v2/roles`</td>\\n  </tr>\\n  <tr>\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\n  </tr>\\n  <tr>\\n    <td>Accept</td>\\n    <td>`application/json`</td>\\n  </tr>\\n  <tr>\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Response Mappings</span></td>\\n  </tr>\\n  <tr>\\n    <td>ApplicationRoleId</td>\\n    <td>`$.roles[*].name`</td>\\n  </tr>\\n  <tr>\\n    <td>Id</td>\\n    <td>`$.roles[*].id`</td>\\n  </tr>\\n  <tr>\\n    <td>Description</td>\\n    <td>`$.roles[*].description`</td>\\n  </tr>\\n</table>\\n8. Click **Next**. On the **App-Role Account Membership** collection page, enter the following configurations.<br></br><br></br>![Alt text](img/21.png)<br></br>![Alt text](img/6.png)<br></br>![Alt text](img/22.png)<br></br>\\n<table class=\\"table-container\\">\\n  <tr>\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request</span></td>\\n  </tr>\\n  <tr>\\n    <td>Method</td>\\n    <td><span class=\\"method-get\\">GET</span></td>\\n  </tr>\\n  <tr>\\n    <td>URL</td>\\n    <td>`/api/v2/agents`</td>\\n  </tr>\\n  <tr>\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Request Headers</span></td>\\n  </tr>\\n  <tr>\\n    <td>Accept</td>\\n    <td>`application/json`</td>\\n  </tr>\\n  <tr>\\n    <td colspan=\\"2\\"><span class=\\"header-2-text\\">Response Mappings</span></td>\\n  </tr>\\n  <tr>\\n    <td>Application Role Id</td>\\n    <td>`$.agents.*.roles.*.role_id`</td>\\n  </tr>\\n  <tr>\\n    <td>Account Identifier</td>\\n    <td>`$.agents.*.id`</td>\\n  </tr>\\n</table>\\n9. Click **Next**. In the **Map Collector Attributes to App Role Attributes**, map the collected account attributes.<br></br>\\n10. Click **Next**. In the **Account Evaluation**, map the account collector to account value.<br></br><br></br>![Alt text](img/23.png)\\n11. Click **Next** and then click **Finish**. Use the `Test` function to make sure the configurations are accurate\\n---\\n## Application Setup\\nThis section explains the process of setting up a service account in Freshservice for use within the collections process.\\n\\n**Steps**\\n1. Login to Freshservice dashboard.\\n2. On the right hand corner, click on **Profile Settings**.<br></br><br></br>![Alt text](img/24.png)\\n3. Solve the captcha and copy the API key.<br></br><br></br>![Alt text](img/25.png)\\n\\n> <span class=\\"blog-id-text\\">COL001</span>\\n\\n[^API]: <LinkSvg /><a href=\\"https://api.freshservice.com/\\" target=\\"_blank\\">API Reference</a>\\n[^Authentication]: <LinkSvg /><a href=\\"https://api.freshservice.com/#authentication\\" target=\\"_blank\\">Freshservice authentication</a>"}]}}')}}]);