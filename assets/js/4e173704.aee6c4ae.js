"use strict";(self.webpackChunkdocku=self.webpackChunkdocku||[]).push([[7640],{9533:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var o=n(7104),i=n(4848),s=n(8453);n(7293);const a={slug:"data-processors-basics",title:"Data Processor Basics",date:new Date("2024-01-30T00:00:00.000Z"),authors:"pradeepkg",tags:["Data Processors"],keywords:["Data Processors"]},r=void 0,c={authorsImageUrls:[void 0]},l=[];function d(e){const t={p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["Data processors have been integral in ",(0,i.jsx)(t.strong,{children:"RSA Governance and Lifecycle (G&L)"})," systems, playing a crucial role in manipulating data throughout different stages of collections, unification or Separation of Duties (SoD) processing. Traditionally, the integration of custom logic into these data processors required direct system access to the AVDB database and the use of tools such as SQL Developer. However, with the evolution of G&L products, there has been a paradigm shift in the approach to implementing custom logic within data processors."]}),"\n",(0,i.jsx)(t.p,{children:"In this blog post, we'll explore the historical context of data processors and examine contemporary solutions that not only streamline the customization process but also eliminate the necessity for direct database access. This evolution promises a more accessible and agile approach for developers working with G&L systems."})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},7293:(e,t,n)=>{n.d(t,{A:()=>R});var o=n(6540),i=n(4848);function s(e){const{mdxAdmonitionTitle:t,rest:n}=function(e){const t=o.Children.toArray(e),n=t.find((e=>o.isValidElement(e)&&"mdxAdmonitionTitle"===e.type)),s=t.filter((e=>e!==n)),a=n?.props.children;return{mdxAdmonitionTitle:a,rest:s.length>0?(0,i.jsx)(i.Fragment,{children:s}):null}}(e.children),s=e.title??t;return{...e,...s&&{title:s},children:n}}var a=n(4164),r=n(1312),c=n(7559);const l={admonition:"admonition_xJq3",admonitionHeading:"admonitionHeading_Gvgb",admonitionIcon:"admonitionIcon_Rf37",admonitionContent:"admonitionContent_BuS1"};function d(e){let{type:t,className:n,children:o}=e;return(0,i.jsx)("div",{className:(0,a.A)(c.G.common.admonition,c.G.common.admonitionType(t),l.admonition,n),children:o})}function u(e){let{icon:t,title:n}=e;return(0,i.jsxs)("div",{className:l.admonitionHeading,children:[(0,i.jsx)("span",{className:l.admonitionIcon,children:t}),n]})}function h(e){let{children:t}=e;return t?(0,i.jsx)("div",{className:l.admonitionContent,children:t}):null}function m(e){const{type:t,icon:n,title:o,children:s,className:a}=e;return(0,i.jsxs)(d,{type:t,className:a,children:[o||n?(0,i.jsx)(u,{title:o,icon:n}):null,(0,i.jsx)(h,{children:s})]})}function p(e){return(0,i.jsx)("svg",{viewBox:"0 0 14 16",...e,children:(0,i.jsx)("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})})}const f={icon:(0,i.jsx)(p,{}),title:(0,i.jsx)(r.A,{id:"theme.admonition.note",description:"The default label used for the Note admonition (:::note)",children:"note"})};function g(e){return(0,i.jsx)(m,{...f,...e,className:(0,a.A)("alert alert--secondary",e.className),children:e.children})}function x(e){return(0,i.jsx)("svg",{viewBox:"0 0 12 16",...e,children:(0,i.jsx)("path",{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})})}const v={icon:(0,i.jsx)(x,{}),title:(0,i.jsx)(r.A,{id:"theme.admonition.tip",description:"The default label used for the Tip admonition (:::tip)",children:"tip"})};function j(e){return(0,i.jsx)(m,{...v,...e,className:(0,a.A)("alert alert--success",e.className),children:e.children})}function b(e){return(0,i.jsx)("svg",{viewBox:"0 0 14 16",...e,children:(0,i.jsx)("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})})}const w={icon:(0,i.jsx)(b,{}),title:(0,i.jsx)(r.A,{id:"theme.admonition.info",description:"The default label used for the Info admonition (:::info)",children:"info"})};function y(e){return(0,i.jsx)(m,{...w,...e,className:(0,a.A)("alert alert--info",e.className),children:e.children})}function A(e){return(0,i.jsx)("svg",{viewBox:"0 0 16 16",...e,children:(0,i.jsx)("path",{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})})}const k={icon:(0,i.jsx)(A,{}),title:(0,i.jsx)(r.A,{id:"theme.admonition.warning",description:"The default label used for the Warning admonition (:::warning)",children:"warning"})};function N(e){return(0,i.jsx)("svg",{viewBox:"0 0 12 16",...e,children:(0,i.jsx)("path",{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})})}const T={icon:(0,i.jsx)(N,{}),title:(0,i.jsx)(r.A,{id:"theme.admonition.danger",description:"The default label used for the Danger admonition (:::danger)",children:"danger"})};const D={icon:(0,i.jsx)(A,{}),title:(0,i.jsx)(r.A,{id:"theme.admonition.caution",description:"The default label used for the Caution admonition (:::caution)",children:"caution"})};const C={...{note:g,tip:j,info:y,warning:function(e){return(0,i.jsx)(m,{...k,...e,className:(0,a.A)("alert alert--warning",e.className),children:e.children})},danger:function(e){return(0,i.jsx)(m,{...T,...e,className:(0,a.A)("alert alert--danger",e.className),children:e.children})}},...{secondary:e=>(0,i.jsx)(g,{title:"secondary",...e}),important:e=>(0,i.jsx)(y,{title:"important",...e}),success:e=>(0,i.jsx)(j,{title:"success",...e}),caution:function(e){return(0,i.jsx)(m,{...D,...e,className:(0,a.A)("alert alert--warning",e.className),children:e.children})}}};function R(e){const t=s(e),n=(o=t.type,C[o]||(console.warn(`No admonition component found for admonition type "${o}". Using Info as fallback.`),C.info));var o;return(0,i.jsx)(n,{...t})}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var o=n(6540);const i={},s=o.createContext(i);function a(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:t},e.children)}},7104:e=>{e.exports=JSON.parse('{"permalink":"/RSA/basics/data-processors-basics","source":"@site/basics/data-processors/data-processors-basics/data-processors-basics.mdx","title":"Data Processor Basics","description":"Data processors have been integral in RSA Governance and Lifecycle (G&L) systems, playing a crucial role in manipulating data throughout different stages of collections, unification or Separation of Duties (SoD) processing. Traditionally, the integration of custom logic into these data processors required direct system access to the AVDB database and the use of tools such as SQL Developer. However, with the evolution of G&L products, there has been a paradigm shift in the approach to implementing custom logic within data processors.","date":"2024-01-30T00:00:00.000Z","tags":[{"inline":true,"label":"Data Processors","permalink":"/RSA/basics/tags/data-processors"}],"readingTime":19.033333333333335,"hasTruncateMarker":true,"authors":[{"name":"Pradeep Kadambar","title":"Creator","url":"https://www.linkedin.com/in/pradeepkg/","imageURL":"https://github.com/pradeepkg.png","key":"pradeepkg","page":null}],"frontMatter":{"slug":"data-processors-basics","title":"Data Processor Basics","date":"2024-01-30T00:00:00.000Z","authors":"pradeepkg","tags":["Data Processors"],"keywords":["Data Processors"]},"unlisted":false,"prevItem":{"title":"Manipulating Identities","permalink":"/RSA/basics/data-processors-idc"},"nextItem":{"title":"REST Collector Authentication","permalink":"/RSA/basics/rest-collector-authentication"}}')}}]);